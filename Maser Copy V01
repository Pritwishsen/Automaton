package userdefinedkeywords;

import java.awt.Robot;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.soap.MessageFactory;
import javax.xml.soap.SOAPConnection;
import javax.xml.soap.SOAPConnectionFactory;
import javax.xml.soap.SOAPConstants;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.SOAPPart;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import loadData.LoadEnvTestParams;























import org.apache.commons.io.FileUtils;
import org.apache.pdfbox.pdfparser.PDFParser;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;
import org.jboss.netty.util.Timeout;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

import com.thoughtworks.selenium.Wait.WaitTimedOutException;

import code_gen_engine.KeywordsCoreFunctions;

public class UserDefinedKeywords extends KeywordsCoreFunctions {
	
	public static String far_id="",apt_no="",house_char="",house_no="",floor_no="",street_name="",postal_code="",postal_place="",line_number="",line_status="";


	public static String Matchstring;
	public static LoadEnvTestParams EnvDataload = new LoadEnvTestParams();

	
	
	public static boolean waituntilloading(By element,String value)
	{
		//order number||status||expectedStatus||timeout
		//String result="Fail..";
		try{
				boolean found=false;
				for(int i=0;i<=60;i++)
				{
				String a="//*[contains(text(),'Loading...Please Wait...')]";
				if (driver.findElement(By.xpath(a)).isDisplayed())
					{System.out.println("Loading Please wait message is displayed");
					Thread.sleep(2000);}
				else
					{
					System.out.println("waited until loading logo disappears");
					return true;					
					//break;
					}
				}
		}
		catch(Exception e)
		{return true;}
		return false;
		
	}
	
	public static boolean assignvalue(By element,String value)
	{
		//order number||status||expectedStatus||timeout
		//String result="Fail..";
		try{
				
				String Temp="Temp";
				AddRunTimeData(Temp, value);
				GetRunTimedata(Temp);
					return true;					
				
		}
		catch(Exception e)
		{return true;}
		
		
	}
	
	
	public static boolean linktextclick(By element,String value)
	{	
				
	try{		
		System.out.println("value"+value);
		driver.findElement(By.xpath("//*[contains(text(),'"+value+"')]")).click();
		return true;
	}
		
	    catch(Exception e){
	    	System.out.println("error in executing keyword: custlinktextclick"+e);
	    		return false;
	    }

	}
	
	
	public static boolean custisdisplayed(By element)
	{
		
		try
		{
			driver.findElement(element).isDisplayed();			
			return true;
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: custisdisplayed\n" + e);
			return false;
		}
		
	
		
	}	

	public static boolean type(By element,String data)
	{
		
		try
		{
			
					driver.findElement(element).sendKeys(data);
					return true;
						
			
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
		
			
	}
	public static boolean submit(By element,String data)
	{
		
		try
		{
			
					driver.findElement(element).submit();
					return true;
						
			
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
		
			
	}
	public static boolean javascriptType(By element,String data)
	{
		
		try
		{
		
			
			 WebElement elem = driver.findElement(element);
			//((JavascriptExecutor)driver).executeScript("document.getElementById('"+id+"').value="+data);
	
			((JavascriptExecutor)driver).executeScript(
					"arguments[0].setAttribute('value', '"+data+"');",elem); 
					return true;
						
			
		}
	
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
		
			
	}
	public static boolean javascriptclick(By element)
	{
		
		try
		{
			
			JavascriptExecutor executor = (JavascriptExecutor)driver;
			executor.executeScript("arguments[0].click();", element);
	
					return true;
						
			
		}
	
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
		
			
	}
	public static boolean scrollclick(By element,String data){
		
		try
		{
			WebElement elem = driver.findElement(element);
			 ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", elem);
			 elem.click();		
			 return true;
						
			
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
	
	}
	
	public static String SwitchToFrame(String value)
	{
		try{
		Thread.sleep(2000);
		driver.switchTo().frame(driver.findElement(By.id(value)));
		return "Pass";			

		}

		catch(Exception e){return "Fail"+e;}
	}
	static String taskno;
	
	
	public static boolean waitUntilInvisible(By element,String data)
	{
		
		try
		{
			Thread.sleep(4000);
			long timeout = Long.parseLong(data); 
			WebDriverWait waitUntil = new WebDriverWait(driver, timeout); 
			waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(element)); 
			
					return true;
						
			
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: type\n" + e);
			return false;
		}
		
			
	}

	public static boolean setPageName(By element,String data)
	{
		
		try
		{

			AddRunTimeData("TestCasename", data);
			GetRunTimedata("TestCasename");
			
			return true;
		}
		
		catch (Exception e)
		{
			System.out.println("Error during executing Keyword: primarClick\n" + e);
			return false;
		}
		
		
			
	}
		
	

	
	
	//Function to write it into an Excel (just modify the location of the output file in accordance with your requirement)
    public static boolean WriteSID(By element,String strSin) 
		{
   	 
	//Creating an instance for Excel,Workbook and Worksheet
   	 WebElement element1 =driver.findElement(By.xpath("//td[starts-with(.,'SIN')]/a"));
   		//fetching the text value of the Sin number
   		strSin = element1.getText();
   		try{
   		WritableWorkbook wworkbook;
		 wworkbook = Workbook.createWorkbook(new File("C:\\TEMP\\SinNumber.xls"));
		 WritableSheet wsheet = wworkbook.createSheet("SInID", 0);
	 Label label = new Label(0, 1, "SinID");
 		 Label label1 = new Label(0, 2, strSin);
 		 wsheet.addCell(label);
	 wsheet.addCell(label1);
 		//Closing the Excel after writing the data into the same
		 wworkbook.write();
 		 wworkbook.close();
		return true;
   		}
   		catch(Exception e)
   		{
   			e.printStackTrace();
   			return false;
   		}
		}
    
    public static boolean Read_sin(By element,String strSin)
    {
   		
		
		try{
			Workbook wrk1 =  Workbook.getWorkbook(new File("C:\\TEMP\\SinNumber.xls"));
			 Sheet sheet1 = wrk1.getSheet("SInID");
			 Cell colAndrow = sheet1.getCell(0, 2);
			 strSin = colAndrow.getContents();
			 
			 if (strSin!=null)
			 {
			 
			 System.out.println("Sin Number fetched is: \""+strSin + "\""); 
			 driver.findElement(By.xpath("//*[@id='phSearchInput']")).sendKeys(strSin);
			 Thread.sleep(5000);
			 driver.findElement(By.xpath("//*[@id='phSearchButton']")).click();
			Thread.sleep(5000);
			driver.findElement(By.xpath("//*[@id='Service_Instance__c_body']/table/tbody/tr[2]/th/a")).click();
			 
			  			 
			}
			 else
			 {
				 System.out.println("Sin Number is not fetched");
			 return false;
			 }
			 
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
			}
		return true;
	
}
    public static boolean RasiseAdhoc(By element,String data)
    {
    	
    	String Referencenumber = data.split("\\__")[0];
		String Accounttype= data.split("\\__")[1];
		String Team= data.split("\\__")[2];
		String Region= data.split("\\__")[3];
		String Phonenumber= data.split("\\__")[4];
		String RequestorRole= data.split("\\__")[5];
		String FurtherDetails= data.split("\\__")[6];
		String Filepath= data.split("\\__")[7];
		
	
    	KeywordsCoreFunctions.click(By.xpath(".//*[text()='How can I assist?']"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[text()='Ad Hoc Request']"));
    	driver.findElement(By.xpath("//span[contains(text(),'My Short')]/following::input[@type='text'][1]")).sendKeys(Referencenumber);
    	KeywordsCoreFunctions.click(By.xpath(".//*[@title='Save and continue to next section']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	KeywordsCoreFunctions.selectbyValue(By.xpath(".//*[@id='MainContent_MapArea1_cl_ddl_AdHocCheckedFAQsYesNo']"),"Yes");
    	
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
    	
    	KeywordsCoreFunctions.selectbyValue(By.xpath("//tr/td/span[contains(text(),'Account Type')]/following::select[1]"),Accounttype);
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.selectbyValue(By.xpath("//tr/td/span[contains(text(),'Select Team')]/following::select[1]"),Team);
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.selectbyValue(By.xpath("//tr/td/span[contains(text(),'Select Region:')]/following::select[1]"),Region);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Requestor Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(Phonenumber);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Requestor Role:')]/following::input[@type='text'][1]")).sendKeys(RequestorRole);
    	driver.findElement(By.xpath("//span[contains(text(),'Further Details:')]/following::textarea")).sendKeys(FurtherDetails);
    	
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Upload']"));
    	try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    
    	return true;

    
		
		}
    public static boolean WorkflowProcess(By element,String data)
    {
    	
    	String Referencenumber = data.split("\\__")[0];
		
		String Username= data.split("\\__")[1];
		
		
	
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	driver.findElement(By.xpath("//span[contains(text(),'Case #, Shortcut, or Activity')]/following::input[@type='text'][1]")).sendKeys(Referencenumber);
    	
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='MainContent_lnkSearch']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	KeywordsCoreFunctions.click(By.xpath("//div/div/div/div/table/tbody/tr[2]/td[2]/a"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Allocate Lawyer']"));
    	
    	//driver.findElement(By.xpath("//span[contains(text(),'Recipient List')]/following::input[@type='text'][1]")).sendKeys("");
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//*[@id='ctl00_MainContent_Task_OnAssign1_ddlAssign_Arrow']"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Username+"')]"));
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	return true;

    
		
		}
    public static boolean LoginPortal(By element,String data)
    {
    	String UserName= data.split("\\__")[0];
    	String Password= data.split("\\__")[1];
    	String UserName1= data.split("\\__")[2];
    	String Password1= data.split("\\__")[3];
    	try{
    		Thread.sleep(3000);
    	boolean loginpage=KeywordsCoreFunctions.isdisplayed(By.xpath("//input[@name='portal_id']"));
    	boolean loginpage2=KeywordsCoreFunctions.isdisplayed(By.xpath("//input[@type='text']"));
    	
    	System.out.println(loginpage);
    	System.out.println(loginpage2);
    	
    	
    	if(loginpage==true){
    		System.out.println(loginpage);
    		KeywordsCoreFunctions.type(By.xpath("//input[@name='portal_id']"), UserName1);
    		KeywordsCoreFunctions.type(By.xpath("//input[@name='password']"), Password1);
    		KeywordsCoreFunctions.click(By.xpath("//*[@id='loginSubmit']"));
    		Thread.sleep(8000);
    		
    		
    	}
    	else if (loginpage2==true){
    		
    		//KeywordsCoreFunctions.click(By.xpath("//a[text()='Login']"));
    		KeywordsCoreFunctions.type(By.xpath("//input[@type='text']"), UserName1);
    		KeywordsCoreFunctions.type(By.xpath("//input[@type='password']"), Password1);
    		KeywordsCoreFunctions.click(By.xpath("//*[@id='loginSubmit']"));
    		Thread.sleep(8000);

    		
    	}
    	else{
    		return false;
    		
    	}
    	} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		
    	return true;
    }

public static boolean LoginPortalSpanish(By element,String data)
{
	String UserName= data.split("\\__")[0];
	String Password= data.split("\\__")[1];
	String UserName1= data.split("\\__")[2];
	String Password1= data.split("\\__")[3];
	
	try{
	
	boolean loginpage=KeywordsCoreFunctions.isdisplayed(By.xpath("//div/h1/font/font[text()='Bienvenido a la entrada de Vodafone']"));
	boolean loginpage3=KeywordsCoreFunctions.isdisplayed(By.xpath("//div/h1[text()='Welcome to the Vodafone login']"));
	
	boolean loginpage2=KeywordsCoreFunctions.isdisplayed(By.xpath("//input[@type='text']"));
	
	
	if(loginpage==true||loginpage3==true){
		
		KeywordsCoreFunctions.type(By.xpath("//input[@name='portal_id']"), UserName1);
		KeywordsCoreFunctions.type(By.xpath("//input[@name='password']"), Password1);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='SUBMIT']"));
		Thread.sleep(5000);
		return true;
	}
		
	else if(loginpage2==true){
		
		
		//KeywordsCoreFunctions.click(By.xpath("//a[text()='Iniciar sesión']"));
		KeywordsCoreFunctions.type(By.xpath("//input[@type='text']"), UserName);
		KeywordsCoreFunctions.type(By.xpath("//input[@type='password']"), Password);
		KeywordsCoreFunctions.click(By.xpath("//*[text()='Entrar']"));
		return true;
	}
	else{
		return false;
		
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
}
public static boolean VersionValidation(By element,String data)
{
	String Version= data.split("\\__")[0];
	
	
try{
	WebDriverWait waitUntil = new WebDriverWait(driver,60); 
	Actions action=new Actions(driver);
	WebElement Activity=driver.findElement(By.xpath("//a[text()='Back Office']"));
	action.moveToElement(Activity).release(Activity).build().perform();
	action.moveToElement(Activity).click().build().perform();
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	Thread.sleep(3000);
	WebElement Case=driver.findElement(By.xpath("//a[text()='Manage Site']"));
	action.moveToElement(Case).click().build().perform();
	Thread.sleep(5000);
	//waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//a[text()='Version']"))); 
	KeywordsCoreFunctions.click(By.xpath("//a[text()='Version']"));
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	boolean result=KeywordsCoreFunctions.isdisplayed(By.xpath("//tr[2]/td[text()='"+Version+"']"));
System.out.println(result);

if (result==true){
	Thread.sleep(3000);
	System.out.println("Present");
	return true;
	
}else{
	Thread.sleep(3000);
	System.out.println("not present");
	return false;
}
	
} catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
	return false;
}

}

    
    public static boolean Uploadfile(By element,String data)
    {
    	
    	String Filepath= data.split("\\__")[0];
		
		try{
			Thread.sleep(5000);
			 //WebDriverWait wait = new WebDriverWait(driver,25 );
	    	  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='file']")));
	    	WebElement elem = null;
    	
    	driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
    	
			Thread.sleep(3000);
		
    	//KeywordsCoreFunctions.click(By.xpath("//a[text()='Upload']"));
    	
			Thread.sleep(10000);
		
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}

    return true;
		
		}
    public static boolean Uploadfile1(By element,String data)
    {
    	
    	String Filepath= data.split("\\__")[0];
    	String Filepath1= data.split("\\__")[1];
		try{
			Thread.sleep(10000);
			 //WebDriverWait wait = new WebDriverWait(driver,25 );
	    	  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='file']")));
	    	
    	
		driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
    	
			Thread.sleep(3000);
			driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath1);
	    	
			Thread.sleep(3000);
		
    	//KeywordsCoreFunctions.click(By.xpath("//a[text()='Upload']"));
    	
			Thread.sleep(10000);
		
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}

    return true;
		
		}

    public static boolean Uploadfile2(By element,String data)
    {
    	
    	String Filepath= data.split("\\__")[0];
    	String Filepath1= data.split("\\__")[1];
    	String Filepath2= data.split("\\__")[2];
    	String Filepath3= data.split("\\__")[3];
    	String Filepath4= data.split("\\__")[4];
		try{
			Thread.sleep(10000);
			 //WebDriverWait wait = new WebDriverWait(driver,25 );
	    	  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='file']")));
	    	
    	
		driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
    	
			Thread.sleep(3000);
			driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath1);
	    	
			Thread.sleep(3000);
driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath2);
	    	
			Thread.sleep(3000);
driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath3);
	    	
			Thread.sleep(3000);
driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath4);
	    	
    	//KeywordsCoreFunctions.click(By.xpath("//a[text()='Upload']"));
    	
			Thread.sleep(10000);
		
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}

    return true;
		
		}

    public static boolean SelectAccount(By element,String data)
    {
    	String Account = data.split("\\__")[0];
    	
    	try{
    		KeywordsCoreFunctions.Refresh();
    		KeywordsCoreFunctions.click(By.xpath(".//*[@id='loginView2_accountLogo']"));
    		try {
    			Thread.sleep(5000);
    		} catch (InterruptedException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    		}
    		
    		boolean visible=KeywordsCoreFunctions.isdisplayed(By.xpath("//div/ul/li/a/span[contains(text(),'"+Account+"')][1]"));
    		System.out.println(visible);
    		
    		if(visible==true)
    	{
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'"+Account+"')][1]"));
    	}
    	else{
    		System.out.println("Default account selected");
    		
    	}
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	Actions Action=new Actions(driver);
    	//table/tbody/tr/td/ul/li[2]/span[@class='menuSelector']/a
    String ActualAccount=driver.findElement(By.xpath("//div[@class='container']/div[1]/div[2]/span")).getText();
    System.out.println(ActualAccount);
    if(ActualAccount.contains(Account.toUpperCase())){
    	
    	return true;
    }
    
    else{
    	//WebElement AccountNew=driver.findElement(By.xpath("//a[text()='"+Account+"']"));
    	//Action.moveToElement(AccountNew).click().build().perform();
    	return false;
    }
    	} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
	

    }
    public static boolean MagnifiedSearch(By element,String data)
    {
   		String ReqTyp[] = data.split("\\__");
		
		try{
			
			WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\ReferId.xls"));
			 WritableSheet wsheet = wworkbook.createSheet("ReferID", 0);
			 Label label = new Label(0, 1, "ReferID");
			 wsheet.addCell(label);
			 int i=0;
			for(String s:ReqTyp)
			{
				driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).sendKeys(s);
		    	
		    	KeywordsCoreFunctions.click(By.xpath("//a[text()='GO']"));
		    	Thread.sleep(5000);
				if(i==0)
				{
					WebElement element1 =driver.findElement(By.xpath("(//div[text()='"+s+"'])[1]"));
					String CasRef = element1.getText();
					System.out.println(CasRef);
					Label label1 = new Label(0, i+2, CasRef);
					wsheet.addCell(label1);
					driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).clear();
					Thread.sleep(5000);
					
				}
				else
				{
					WebDriverWait wait = new WebDriverWait(driver,80 );
			    	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("(//div/div/div/div/div/div[1]/div[contains(text(),'"+s+"')])[1]")));
				WebElement element1 =driver.findElement(By.xpath("(//div/div/div/div/div/div[1]/div[contains(text(),'"+s+"')])[1]"));
				String CasRef = element1.getText();
				System.out.println(CasRef);
				Label label2 = new Label(0, i+2, CasRef);
				wsheet.addCell(label2);
				driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).clear();
				Thread.sleep(5000);
				}
		 		i++;
			}
				 wworkbook.write();
		 		 wworkbook.close();
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\ReferId.xls"));
			 Sheet sheet1 = wrk1.getSheet("ReferID");
			 for(int j=2;j<i+2;j++)
			 {
			 String CaseID = sheet1.getCell(0, j).getContents();
			 driver.findElement(By.xpath("(//input[@type='text'])[1]")).sendKeys(CaseID);
		    	
		    	KeywordsCoreFunctions.click(By.xpath("(//input[@type='text'])[1]/preceding::span[1]"));
				Thread.sleep(5000);
				switch(j)
				{
				case 2: KeywordsCoreFunctions.click(By.xpath("(//a[@class='PDF'])[1]"));
				        Thread.sleep(5000);
				        break;
				case 3: KeywordsCoreFunctions.click(By.xpath("(//a[@class='DOCX'])[1]"));
				        Thread.sleep(5000);
				        break;
				default: System.out.println("In Default Case");
				        break;
				}
				KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
				Thread.sleep(5000);
				
			 }
			 
			 
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    
    public static boolean AdvanceFilter(By element,String data)
    {
   		String ReferID = data.split("\\__")[0];
   		String FileLocation = data.split("\\__")[1];
   		String lab = data.split("\\__")[2];
		
		try{
			 driver.findElement(By.xpath("(//input[@type='text'])[1]")).sendKeys(ReferID);
		    	
		    	KeywordsCoreFunctions.click(By.xpath("(//input[@type='text'])[1]/preceding::span[1]"));
				Thread.sleep(5000);
				
				FileUtils.cleanDirectory(new File("D://SWIFT//"+FileLocation+"")); 
	    	
	    	KeywordsCoreFunctions.click(By.xpath("(//a[@class='PDF'])[1]"));
	        Thread.sleep(5000);
	        
	        PDDocument document=null;
				document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//document.PDF"));
				
				PDFTextStripperByArea stripper=new PDFTextStripperByArea();
	    		stripper.setSortByPosition(true);
	    		PDFTextStripper Tstripper=new PDFTextStripper();
	    		String st=Tstripper.getText(document);
	    		System.out.println(st);
			
	    		KeywordsCoreFunctions.click(By.xpath("//a[text()='ADVANCED FILTER']"));
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Advance Search.xls"));
			 Sheet sheet1 = wrk1.getSheet("Alias");
			 Sheet sheet2 = wrk1.getSheet("Value");
			 Sheet sheet3 = wrk1.getSheet("Label");
			 int rows=sheet1.getRows();
				int cols=sheet1.getColumns();
				int a =1;
				int b =2;
				int c= 2;
				for(int j=0;j<rows;j++)
				{
					 String label = sheet3.getCell(0, j).getContents().trim();
					 int count = sheet3.getRow(j).length;
					 
					 if(label.trim().equalsIgnoreCase(lab.trim()))
					 {
						 System.out.println(label);
						 Thread.sleep(5000);
			 for(int i=1;i<count;i++)
			 {
			 String AliasName = sheet1.getCell(i, j).getContents();
			 String value = sheet2.getCell(i, j).getContents();
			 KeywordsCoreFunctions.selectbyValue(By.xpath("//th[text()='Search For']/following::select["+a+"]"),AliasName);
			 a=a+2;
				Thread.sleep(2000);
				KeywordsCoreFunctions.selectbyValue(By.xpath("//th[text()='Search For']/following::select["+b+"]"),"Equals");
				b=b+2;
				Thread.sleep(2000);
				if(st.contains(value))
				 {
				driver.findElement(By.xpath("//th[text()='Search For']/following::input["+c+"]")).sendKeys(value);
				c=c+5;
				Thread.sleep(2000);
				 }
                 if(i<count-1)
                 {
                	 KeywordsCoreFunctions.click(By.xpath("//th[text()='Search For']/following::button["+i+"]"));
     				Thread.sleep(2000);
     	    	
     	    	KeywordsCoreFunctions.click(By.xpath("//li[text()='and']"));
     	    	Thread.sleep(2000);
     	    	KeywordsCoreFunctions.click(By.xpath("//th[text()='Search For']/following::button["+i+"]/following::a[1]"));
     	    	Thread.sleep(2000);
                 }
			 }
			 KeywordsCoreFunctions.click(By.xpath("//a[text()='Search']"));
					 }
		}
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}

    public static boolean CSRMultipleTemplate(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesCSR.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseRefer.xls"));
			 WritableSheet wsheet = wworkbook.createSheet(data, 0);
			 Label label = new Label(0, 0, "ReferID");
			 Label label1 = new Label(1, 0, "Template");
			 Label label2 = new Label(2, 0, "ClosingForm");
			 Label label3 = new Label(3, 0, "RepoAccount");
			 Label label4 = new Label(4, 0, "RepoTemplate");
			 Label label5 = new Label(5, 0, "RepoReferID");
			 wsheet.addCell(label);
			 wsheet.addCell(label1);
			 wsheet.addCell(label2);
			 wsheet.addCell(label3);
			 wsheet.addCell(label4);
			 wsheet.addCell(label5);
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String MidTemp = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String SCF = sheet1.getCell(6, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(7, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(8, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(9, j+1).getContents().trim();
					 String MidTempName = sheet1.getCell(10, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 String comb2 = (MidTempName+"__"+MidTemp);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 switch(data)
					 {
					 case "Group Enterprise Legal Request": ContractSupportNew((By) elem, ReqForm);
					                                        break;
					 
					 case "UK Enterprise Legal Request": ContractSupportNewUK((By) elem, ReqForm);
                                                            break;
					 default:System.out.println("In default case");
			                  break;
					 }
					 
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(10000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
					 Label label6 = new Label(0, j+1, CasRefer);
					 Label label7 = new Label(1, j+1, MidTemp);
					 Label label8 = new Label(2, j+1, SCF);
					 Label label9 = new Label(3, j+1, RepAcc);
					 Label label10 = new Label(4, j+1, RepTemp);
					 Label label11 = new Label(5, j+1, ReferID);
						wsheet.addCell(label6);
						wsheet.addCell(label7);
						wsheet.addCell(label8);
						wsheet.addCell(label9);
						wsheet.addCell(label10);
						wsheet.addCell(label11);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(10000);
						 CaseContractLegal((By) elem, comb);
						 Thread.sleep(10000);
						 switch(data)
						 {
						 case "Group Enterprise Legal Request": AddTemplatesNew((By) elem, comb2);
						                                        break;
						 
						 case "UK Enterprise Legal Request": AddTemplatesNewUK((By) elem, comb2);
	                                                            break;
						 default:System.out.println("In default case");
				                  break;
						 }
						 
						 
					 
		}
				wworkbook.write();
		 		 wworkbook.close();
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean CSRMultipleBackDoor(By element,String data) throws NullPointerException
    {
    	String Account = data.split("\\__")[0];
    	String Recipient = data.split("\\__")[1];
    	
    	try
    	{
    		Workbook wrk1;
    		wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseRefer.xls"));
    		WebDriver driver;
			 Sheet sheet1 = wrk1.getSheet(Account); 
			 if (sheet1 == null) {
			    throw new IllegalArgumentException("No sheet exists with name " + Account);
			 }
			 int rows=sheet1.getRows();
			 for(int j=0;j<rows-1;j++)
				{
				 String CaseRefer = sheet1.getCell(0, j+1).getContents().trim();
				 String Template = sheet1.getCell(1, j+1).getContents().trim();
				 String SCF = sheet1.getCell(2, j+1).getContents().trim();
				 String RepoAcc = sheet1.getCell(3, j+1).getContents().trim();
				 String RepoTemp = sheet1.getCell(4, j+1).getContents().trim();
				 String RepoRefer = sheet1.getCell(5, j+1).getContents().trim();
				 String comb = (RepoAcc+"__"+RepoTemp+"__"+RepoRefer);
				 WebElement elem = null;
				 CaseCreated((By) elem, CaseRefer);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 ClickonCase((By) elem, Template);
				 Thread.sleep(10000);
//				 if(Account.equalsIgnoreCase("Group Enterprise Legal Request"))
//				 {
//					 ContractHITForm((By) elem, Template);
//					 Thread.sleep(10000);
//					 CaseCreated((By) elem, CaseRefer);
//					 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
//					 ClickonCase((By) elem, Template);
//				 }
//				 Thread.sleep(10000);
				 WebdriverWait((By) elem, "//div/a[text()='Contract Issued']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Issued']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='Contract Agreed']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Agreed']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(10000);
				 switch(Account)
				 {
				 case "Group Enterprise Legal Request": AddSCFDetails((By) elem, SCF);
				                                        break;
				 case "UK Enterprise Legal Request": AddSCFDetailsUK((By) elem, SCF);
                                                     break;
                 default: System.out.println("In Default case");
                          break;
				 }
				 CaseCreated((By) elem, CaseRefer);
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 switch(Account)
				 {
				 case "Group Enterprise Legal Request":WebdriverWait((By) elem, "//div[contains(text(),'Smart Contract Form')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Smart Contract Form')]"));
				 ContractAssignEsignature((By) elem, Recipient);
				 CaseCreated((By) elem, CaseRefer);
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 WebdriverWait((By) elem, "//div[contains(text(),'Smart Contract Form')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Smart Contract Form')]"));
				 WebdriverWait((By) elem, "//div/a[text()='Accept Signature Request']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Accept Signature Request']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='Contract Fully Signed']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Fully Signed']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='SCF Part B Complete - Store Contract']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='SCF Part B Complete - Store Contract']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 ContractStoretoRepository((By) elem, comb);
				                                        break;
				 case "UK Enterprise Legal Request": WebdriverWait((By) elem, "//div[contains(text(),'SCF')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'SCF')]"));
				 WebdriverWait((By) elem, "//div/a[text()='In Signature - DocuSign']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='In Signature - DocuSign']"));
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='In Signature - Wet Ink with Customer']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='In Signature - Wet Ink with Customer']"));
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='Signature Complete']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Signature Complete']"));
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='SCF Updated']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='SCF Updated']"));
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(10000);
				 ContractStoretoRepositoryUK((By) elem, comb);
                                                     break;
                 default: System.out.println("In Default case");
                          break;
				 }
				 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
				 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");
				 KeywordsCoreFunctions.driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).clear();
				}
    	}
    	catch(Exception e) 
		{
	    e.printStackTrace();
	    return false;
		}
	return true;
    }
    public static boolean CSRMultipleFrontDoor(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesCSR.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseRefer.xls"));
			 WritableSheet wsheet = wworkbook.createSheet(data, 0);
			 Label label = new Label(0, 0, "ReferID");
			 Label label1 = new Label(1, 0, "Template");
			 Label label2 = new Label(2, 0, "ClosingForm");
			 Label label3 = new Label(3, 0, "RepoAccount");
			 Label label4 = new Label(4, 0, "RepoTemplate");
			 Label label5 = new Label(5, 0, "RepoReferID");
			 Label label6 = new Label(6, 0, "MidTempName");
			 wsheet.addCell(label);
			 wsheet.addCell(label1);
			 wsheet.addCell(label2);
			 wsheet.addCell(label3);
			 wsheet.addCell(label4);
			 wsheet.addCell(label5);
			 wsheet.addCell(label6);
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String MidTemp = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String SCF = sheet1.getCell(6, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(7, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(8, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(9, j+1).getContents().trim();
					 String MidTempName = sheet1.getCell(10, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 String comb2 = (MidTempName+"__"+MidTemp);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 switch(data)
					 {
					 case "Group Enterprise Legal Request": ContractSupportNew((By) elem, ReqForm);
					                                        break;
					 
					 case "UK Enterprise Legal Request": ContractSupportNewUK((By) elem, ReqForm);
                                                            break;
					 default:System.out.println("In default case");
			                  break;
					 }
					 
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(10000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
					 Label label7 = new Label(0, j+1, CasRefer);
					 Label label8 = new Label(1, j+1, MidTemp);
					 Label label9 = new Label(2, j+1, SCF);
					 Label label10 = new Label(3, j+1, RepAcc);
					 Label label11 = new Label(4, j+1, RepTemp);
					 Label label12 = new Label(5, j+1, ReferID);
					 Label label13 = new Label(6, j+1, MidTempName);
						wsheet.addCell(label7);
						wsheet.addCell(label8);
						wsheet.addCell(label9);
						wsheet.addCell(label10);
						wsheet.addCell(label11);
						wsheet.addCell(label12);
						wsheet.addCell(label13);
						 Thread.sleep(10000);
//						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
//						 Thread.sleep(10000);
//						 CaseContractLegal((By) elem, comb);
//						 Thread.sleep(10000);
//						 switch(data)
//						 {
//						 case "Group Enterprise Legal Request": AddTemplatesNew((By) elem, comb2);
//						                                        break;
						 
//						 case "UK Enterprise Legal Request": AddTemplatesNewUK((By) elem, comb2);
//	                                                            break;
//						 default:System.out.println("In default case");
//				                  break;
//						 }
						 
						 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
						 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");			 
					 
		}
				wworkbook.write();
		 		 wworkbook.close();
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean CSRMultipleMiddleDoor(By element,String data)
    {
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseRefer.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
				for(int j=0;j<rows-1;j++)
				{
					 String CaseRefer = sheet1.getCell(0, j+1).getContents().trim();
					 String MidTemp = sheet1.getCell(1, j+1).getContents().trim();
					 String MidTempName = sheet1.getCell(6, j+1).getContents().trim();
					 String comb2 = (MidTempName+"__"+MidTemp);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 CaseCreated((By) elem, CaseRefer);
					 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(10000);
						 CaseContractLegal((By) elem, comb2);
						 Thread.sleep(10000);
						 switch(data)
						 {
						 case "Group Enterprise Legal Request": AddTemplatesNew((By) elem, comb2);
						                                        break;
						 
						 case "UK Enterprise Legal Request": AddTemplatesNewUK((By) elem, comb2);
	                                                            break;
						 default:System.out.println("In default case");
				                  break;
						 }
							 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
						 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");			 
					 
		}
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean HITform(By element,String data)
    {
    	
    	WebElement elem=null;
    	try{
    		Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseRefer.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 for(int j=0;j<rows-1;j++)
				{
			 String CaseRefer = sheet1.getCell(0, j+1).getContents().trim();
			 String MidTemp = sheet1.getCell(1, j+1).getContents().trim();
    		if(data.equalsIgnoreCase("Group Enterprise Legal Request"))
				 {	
    			Thread.sleep(10000);
				 CaseCreated((By) elem, CaseRefer);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 ClickonCase((By) elem, MidTemp);
				 Thread.sleep(10000);
					 ContractHITForm((By) elem, MidTemp);
				 }
    		Thread.sleep(10000);
				}
			 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
			 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");
				}
    	catch(Exception e)
    	{
    		e.printStackTrace();
		    return false;
    	}
    	return true;
    }

	public static boolean SSGMultipleTemplate(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesSSG.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferSS.xls"));
			 WritableSheet wsheet = wworkbook.createSheet(data, 0);
			 Label label = new Label(0, 0, "ReferID");
			 Label label1 = new Label(1, 0, "Template");
			 Label label2 = new Label(2, 0, "ShortcutReference");
			 Label label3 = new Label(3, 0, "RepoAccount");
			 Label label4 = new Label(4, 0, "RepoTemplate");
			 Label label5 = new Label(5, 0, "RepoReferID");
			 wsheet.addCell(label);
			 wsheet.addCell(label1);
			 wsheet.addCell(label2);
			 wsheet.addCell(label3);
			 wsheet.addCell(label4);
			 wsheet.addCell(label5);
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String MidTemp = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String SCF = sheet1.getCell(6, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(7, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(8, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(9, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 SelfServeGroupNew((By) elem, ReqForm);
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(5000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
					 Label label6 = new Label(0, j+1, CasRefer);
					 Label label7 = new Label(1, j+1, MidTemp);
					 Label label8 = new Label(2, j+1, SCF);
					 Label label9 = new Label(3, j+1, RepAcc);
					 Label label10 = new Label(4, j+1, RepTemp);
					 Label label11 = new Label(5, j+1, ReferID);
						wsheet.addCell(label6);
						wsheet.addCell(label7);
						wsheet.addCell(label8);
						wsheet.addCell(label9);
						wsheet.addCell(label10);
						wsheet.addCell(label11);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(10000);
						 SelfServeMidTemp((By) elem, MidTemp);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						 
						 
					 
		}
				wworkbook.write();
		 		 wworkbook.close();
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
	public static boolean SSGMultipleBackDoor(By element,String data)
    {
    	String Account = data.split("\\__")[0];
    	String Recipient = data.split("\\__")[1];
    	
    	try
    	{
    		Workbook wrk1;
    		wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferSS.xls"));
			 Sheet sheet1 = wrk1.getSheet(Account); 
			 if (sheet1 == null) {
			    throw new IllegalArgumentException("No sheet exists with name " + Account);
			 }
			 int rows=sheet1.getRows();
			 for(int j=0;j<rows-1;j++)
				{
				 String CaseRefer = sheet1.getCell(0, j+1).getContents().trim();
				 String Template = sheet1.getCell(1, j+1).getContents().trim();
				 String SCF = sheet1.getCell(2, j+1).getContents().trim();
				 String RepoAcc = sheet1.getCell(3, j+1).getContents().trim();
				 String RepoTemp = sheet1.getCell(4, j+1).getContents().trim();
				 String RepoRefer = sheet1.getCell(5, j+1).getContents().trim();
				 String comb = (RepoAcc+"__"+RepoTemp+"__"+RepoRefer);
				 WebElement elem = null;
				 CaseCreated((By) elem, CaseRefer);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 WebdriverWait((By) elem, "//div[contains(text(),'Self Serve Mutual NDA')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Self Serve Mutual NDA')]"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='Contract Issued']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Issued']"));
				 Thread.sleep(10000);
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='Contract Agreed - Signature Required']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Agreed - Signature Required']"));
				 WebdriverWait((By) elem, "//div/a[text()='Submit']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 Thread.sleep(10000);
				 SelfServeSCF((By) elem, SCF);
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
				 CaseCreated((By) elem, CaseRefer);
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 WebdriverWait((By) elem, "//div[contains(text(),'Self Serve NDA Smart Contract Form')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Self Serve NDA Smart Contract Form')]"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='Assign to Gel Ops for Signature']");
				 Thread.sleep(5000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Assign to Gel Ops for Signature']"));
				 ContractAssignEsignature((By) elem, Recipient);
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
				 WebdriverWait((By) elem, "//div[contains(text(),'Self Serve NDA Smart Contract Form')]");
				 KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Self Serve NDA Smart Contract Form')]"));
				 Thread.sleep(5000);
				 WebdriverWait((By) elem, "//div/a[text()='Accept Request']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Accept Request']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='Contract Fully Signed']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Fully Signed']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 WebdriverWait((By) elem, "//div/a[text()='SCF Complete - Store Contract']");
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='SCF Complete - Store Contract']"));
				 Thread.sleep(10000);
				 KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
				 ContractStoretoRepository((By) elem, comb);
				 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
				 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");
				 KeywordsCoreFunctions.driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).clear();
				}
    	}
    	catch(Exception e) 
		{
	    e.printStackTrace();
	    return false;
		}
	return true;
    }
   

    public static boolean RSMultipleTemplateFrontDoor(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesRS.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferRS.xls"));
			 WritableSheet wsheet = wworkbook.createSheet(data, 0);
			 Label label = new Label(0, 0, "ReferID");
			 wsheet.addCell(label);
			 WebElement elem = null;
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String scf = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(6, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(7, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(8, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 String comb2 = (RepAcc+"__"+RepTemp+"__"+ReferID);
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 RequestSignatureContract((By) elem, ReqForm);
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(10000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
				        Label label1 = new Label(0, 1+j, CasRefer);
						 wsheet.addCell(label1);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
						 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");
						 		}
				wworkbook.write();
		 		 wworkbook.close();		
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    
    public static boolean RSMultipleTemplateBackDoor(By element,String data)
    {
		
		try{
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesRS.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 Workbook wrk2 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferRS.xls"));
			 Sheet sheet2 = wrk2.getSheet(data);
			 WebElement elem = null;
				for(int j=0;j<rows-1;j++)
				{
					String CaseRefer = sheet2.getCell(0, j+1).getContents().trim();
					String scf = sheet1.getCell(1, j+1).getContents().trim();
					String filepath = sheet1.getCell(3, j+1).getContents().trim();
					String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					String RepAcc = sheet1.getCell(6, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(7, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(8, j+1).getContents().trim();
					String comb2 = (RepAcc+"__"+RepTemp+"__"+ReferID);
			CaseCreated((By) elem, CaseRefer);
			 Thread.sleep(10000);
    KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
	 Thread.sleep(10000);
	 CaseContractLegal((By) elem, comb2);
	 Thread.sleep(10000);
	 switch(data)
	 {
	 case "Group Enterprise Legal Request":KeywordsCoreFunctions.click(By.xpath("//a[text()='Contract Fully Signed']"));
	                                       Thread.sleep(3000);
	                                       KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
	                                       Thread.sleep(10000); 
		                                   AddSCFDetails1((By) elem, scf);
	                                        break;
	 
	 case "UK Enterprise Legal Request": KeywordsCoreFunctions.click(By.xpath("//a[text()='In Signature - Wet Ink With Legal']"));
                                        Thread.sleep(3000);
                                        KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
                                        Thread.sleep(6000);
                                        KeywordsCoreFunctions.click(By.xpath("//a[text()='Signature Complete']"));
                                        Thread.sleep(10000);
                                        KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
                                        Thread.sleep(6000);
		                                 AddSCFDetailsUK1((By) elem, scf);
                                           break;
	 default:System.out.println("In default case");
             break;
	 }
	 Thread.sleep(5000);
	 Uploadfile((By) elem, filepath);
	 Thread.sleep(10000);
	 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	 Thread.sleep(10000);
	 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item')]"));
	 Thread.sleep(5000);
	 switch(data)
	 {
	 case "Group Enterprise Legal Request": KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'SCF Created')][1]"));
	                                        Thread.sleep(5000);
	                                        KeywordsCoreFunctions.click(By.xpath("//a[text()='SCF Complete - Store Contract']"));
	                                        Thread.sleep(5000);
	                                        KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
	                                        ContractStoretoRepository((By) elem, comb2);
	                                        break;
	 
	 case "UK Enterprise Legal Request": KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Contract To Be Stored')][1]"));
                                        Thread.sleep(5000);
                                        ContractStoretoRepositoryUK((By) elem, comb2);
                                        break;
	 default:System.out.println("In default case");
             break;
	 }
	 
		}
		}
	 catch(Exception e) 
		{
	    e.printStackTrace();
	    return false;
		}
	return true;

} 

   
    public static boolean USCMultipleTemplateFrontDoor(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesUSC.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 WritableWorkbook wworkbook;
			 wworkbook = Workbook.createWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferUSC.xls"));
			 WritableSheet wsheet = wworkbook.createSheet(data, 0);
			 Label label = new Label(0, 0, "ReferID");
			 wsheet.addCell(label);
			 WebElement elem = null;
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String scf = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(6, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(7, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(8, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 String comb2 = (RepAcc+"__"+RepTemp+"__"+ReferID);
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 switch(data)
					 {
					 case "Group Enterprise Legal Request": RequestSignatureContract((By) elem, ReqForm);
					                                        break;
					 case "UK Enterprise Legal Request": UPSCReq((By) elem, ReqForm);
					                                       break;
					 default:  System.out.println("In default case");
					              break;
					 }
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(10000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
				        Label label1 = new Label(0, 1+j, CasRefer);
						 wsheet.addCell(label1);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//li/a[contains(text(),'Workspace')]"));
						 WebdriverWait((By) elem, "//a[text()='GO']/preceding::input[1]");
						 Thread.sleep(10000);			 
		}
				wworkbook.write();
		 		 wworkbook.close();	
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean USCMultipleTemplateBackDoor(By element,String data)
    {
		
		try{
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesRS.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
			 Workbook wrk2 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\CaseReferUSC.xls"));
			 Sheet sheet2 = wrk2.getSheet(data);
			 WebElement elem = null;
				for(int j=0;j<rows-1;j++)
				{
					String CaseRefer = sheet2.getCell(0, j+1).getContents().trim();
					String scf = sheet1.getCell(1, j+1).getContents().trim();
					String filepath = sheet1.getCell(3, j+1).getContents().trim();
					String RepAcc = sheet1.getCell(6, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(7, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(8, j+1).getContents().trim();
					 String comb2 = (RepAcc+"__"+RepTemp+"__"+ReferID);
			CaseCreated((By) elem, CaseRefer);
			 Thread.sleep(10000);
    KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
	 Thread.sleep(10000);						 
	 if(data.trim().equalsIgnoreCase("Group Enterprise Legal Request"))
	 {
	  CaseContractLegal((By) elem, comb2);
	  Thread.sleep(10000);
	  AddSCFDetails1((By) elem, scf);
     Thread.sleep(5000);
	  Uploadfile((By) elem, filepath);
     Thread.sleep(10000);
     KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	  Thread.sleep(10000);
     CaseCreated((By) elem, CaseRefer);
     Thread.sleep(10000);
     KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
     WebdriverWait((By) elem, "//div[contains(text(),'Smart Contract Form')]");
     KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'Smart Contract Form')]"));
	  WebdriverWait((By) elem, "//div/a[text()='SCF Complete - Store Contract']");
	  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='SCF Complete - Store Contract']"));
	  Thread.sleep(10000);
	  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
	 }
	 ContractStoretoRepositoryUK((By) elem, comb2); 

}
}
catch(Exception e) 
{
e.printStackTrace();
return false;
}
return true;

}
    public static boolean SSUKMultipleTemplate(By element,String data)
    {
    	
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesSSUK.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String Legal = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String scf = sheet1.getCell(6, j+1).getContents().trim();
					 String RepAcc = sheet1.getCell(7, j+1).getContents().trim();
					 String RepTemp = sheet1.getCell(8, j+1).getContents().trim();
					 String ReferID = sheet1.getCell(9, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 String comb2 = (RepAcc+"__"+RepTemp+"__"+ReferID);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 switch(ReqTyp)
					 {
					 case "Prize Draw Ts & Cs":
					 case "General Release Right Of Publicity Agreement":
					 case "Game Challenge Ts & Cs":
					 case "Consent for Case Study Agreement": ConsentReqNew((By) elem, ReqForm);
//					 ValidateContractForm((By) elem, comb1);
					 Thread.sleep(10000);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem1 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer=elem1.getText();
				        System.out.println(CasRefer);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(10000);
						 WebdriverWait((By) elem, "//div/a[text()='Contract Issued']");
				          KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Issued']"));
				          Thread.sleep(10000);
						  WebdriverWait((By) elem, "//div/a[text()='Submit']");
						  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
						  Thread.sleep(10000);
					                                        break;
					                                        
					 case "Sponsorship Agreement":
					 case "Vodafone Partner Agreement":
					 case "One Net Partner Agreement":
					 case "Vodafone Mutual NDA": VodafoneReqNew((By) elem, ReqForm);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(10000);
					 CaseCreated((By) elem, ShortRef);
					 Thread.sleep(10000);
					 WebElement elem3 = driver.findElement(By.xpath(".//*[@id='MainContent_wsCards1_dlCards_divCaseNumber_0']"));
					 String CasRefer2=elem3.getText();
				        System.out.println(CasRefer2);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(10000);
						 WebdriverWait((By) elem, "//div/a[text()='Contract Issued']");
				          KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Issued']"));
				          Thread.sleep(10000);
						  WebdriverWait((By) elem, "//div/a[text()='Submit']");
						  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
						  Thread.sleep(10000);
						  if(Legal.trim().equalsIgnoreCase("Legal"))
						  {
							  WebdriverWait((By) elem, "//div/a[text()='Request Legal Support']");
							  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Request Legal Support']"));
							  Thread.sleep(10000);
							  WebdriverWait((By) elem, "//div/a[text()='Submit']");
							  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
							  Thread.sleep(5000);
							  KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
								 Thread.sleep(10000);
								 CaseContractLegal((By) elem, ShortRef);
								 Thread.sleep(10000);
								 WebdriverWait((By) elem, "//div/a[text()='Contract Agreed']");
								  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Contract Agreed']"));
								  WebdriverWait((By) elem, "//div/a[text()='Submit']");
								  Thread.sleep(5000);
								  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
								  Thread.sleep(10000);
								  WebdriverWait((By) elem, "//div/a[text()='Negotiation Complete']");
								  Thread.sleep(5000);
								  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
								  Thread.sleep(5000);
								  KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
									 Thread.sleep(10000);
								  
						  }
						  WebdriverWait((By) elem, "//div/a[text()='Request Signature']");
						  Thread.sleep(5000);
						  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
						  Thread.sleep(5000);
						  AddSCFDetailsUK1((By) elem, scf);
						  Uploadfile((By) elem, filepath);
							 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
							 CaseCreated((By) elem, ShortRef);
							 Thread.sleep(10000);
							 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Case Item:')]"));
							  WebdriverWait((By) elem, "//div[contains(text(),'SCF')]");
							  KeywordsCoreFunctions.click(By.xpath("//div[contains(text(),'SCF')]"));
							  CaseContractLegal((By) elem, comb);
							  Thread.sleep(10000);
							  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
							  Thread.sleep(10000);
							  WebdriverWait((By) elem, "//div/a[text()='Signature Complete']");
							  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Signature Complete']"));
							  WebdriverWait((By) elem, "//div/a[text()='Submit']");
							  Thread.sleep(8000);
							  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
							  Thread.sleep(5000);
								 WebdriverWait((By) elem, "//div/a[text()='SCF Updated']");
								  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='SCF Updated']"));
								  WebdriverWait((By) elem, "//div/a[text()='Submit']");
								  Thread.sleep(5000);
								  KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
								  Thread.sleep(5000);
								  ContractStoretoRepositoryUK((By) elem, comb2);
					                                       break;
					 default:  System.out.println("In default case");
					              break;
					 }
 
					 
		}
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean GQMultipleTemplateFrontDoor(By element,String data)
    {
		
		try{
			
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\MultipleCasesGQ.xls"));
			 Sheet sheet1 = wrk1.getSheet(data);
			 int rows=sheet1.getRows();
				for(int j=0;j<rows-1;j++)
				{
					 String ShortRef = sheet1.getCell(0, j+1).getContents().trim();
					 String ClosingForm = sheet1.getCell(1, j+1).getContents().trim();
					 String ReqTyp = sheet1.getCell(2, j+1).getContents().trim();
					 String filepath = sheet1.getCell(3, j+1).getContents().trim();
					 String field = sheet1.getCell(4, j+1).getContents().trim();
					 String ReqForm = sheet1.getCell(5, j+1).getContents().trim();
					 String comb = (ShortRef+"__"+ReqTyp);
					 String comb1 = (field+"__"+ShortRef);
					 WebElement elem = null;
					 Thread.sleep(10000);
					 EnterComplaint((By) elem, comb);
					 Thread.sleep(10000);
					 switch(data)
					 {
					 case "Group Enterprise Legal Request": GeneralQueryGroupNew((By) elem, ReqForm);
                     break;

                     case "UK Enterprise Legal Request": GeneralQueryUKNew((By) elem, ReqForm);
                     break;
                     default:System.out.println("In default case");
                     break; 
					 }
					 Thread.sleep(10000);
					 Uploadfile((By) elem, filepath);
					 Thread.sleep(5000);
//					 ValidateContractForm((By) elem, comb1);
					 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					 Thread.sleep(5000);
						 KeywordsCoreFunctions.click(By.xpath("//a[text()='VIEW']"));
						 Thread.sleep(5000);
						 CaseContractLegal((By) elem, comb);
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.selectbyValue(By.xpath("//div/div/span[text()='Case Item']/following::select"), "Closing Form");
						 Thread.sleep(10000);						 
						 switch(data)
						 {
						 case "Group Enterprise Legal Request": CloseFormGQGNew((By) elem, ClosingForm);
						                                        Uploadfile((By) elem, filepath);
						                                        break;
						 
						 case "UK Enterprise Legal Request": CloseFormGQUKNew((By) elem, ClosingForm);
	                                                            break;
						 default:System.out.println("In default case");
				                  break;
						 } 
						 Thread.sleep(10000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						 Thread.sleep(5000);
					 
		}
		}
			catch(Exception e) 
			{
		    e.printStackTrace();
		    return false;
			}
		return true;
	
}
    public static boolean TriageQueue(By element,String data)
    {
   		String Filter = data.split("\\__")[0];
   		WebDriverWait wait = new WebDriverWait(driver,80 );
		try{
                KeywordsCoreFunctions.click(By.xpath("//div/span[text()='Filter']"));
				Thread.sleep(5000);
			Workbook wrk1 =  Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\TriageQueue.xls"));
			 Sheet sheet1 = wrk1.getSheet("Queue");
			 int rows=sheet1.getRows();
				for(int i=0;i<rows;i++)
				{
					String queue = sheet1.getCell(0, i).getContents().trim();
					KeywordsCoreFunctions.selectbyValue(By.xpath("//span[text()='FILTER']/following::select"), queue);
					Thread.sleep(6000);
					wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[text()='GO']/preceding::input[1]")));
					Thread.sleep(3000);
					wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[text()='GO']/preceding::input[1]")));
					Thread.sleep(3000);
						int count = sheet1.getRow(i).length;
						for(int j=1;j<count;j++)
						{
							String Ref = sheet1.getCell(j, i).getContents().trim();
							
							
									driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).sendKeys(Ref);
							    	
							    	KeywordsCoreFunctions.click(By.xpath("//a[text()='GO']"));
							    	Thread.sleep(10000);
//						        	wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//div[text()='"+Ref+"'][1]")));
								 
								 if(driver.findElement(By.xpath("//div[text()='"+Ref+"'][1]")).isDisplayed())
							        {
							        	System.out.println(Ref);
							        	System.out.println("Shortcut Reference is found");
							        	driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).clear();
							        	Thread.sleep(6000);
							        }
							        else
							        {
							        	System.out.println("Shortcut Reference "+Ref+" is Not found");
							        	return false;	
							        }
							}
							
				        	
//				        	wait.until(ExpectedConditions.stalenessOf(elem));

					}	 
						
					
				}
		catch(Exception e) 
		{	
	    e.printStackTrace();
	    return false;
		}
		return true;
}
			
    public static boolean New(By element,String data){
    	//rthy__naresh
    	String data1=data.split("\\__")[0];
    	
    	
    	try{
    	
    		KeywordsCoreFunctions.click(By.xpath(""));
    		
    		
    		
    		
    		
    		
    		
    		
    	 } catch (Exception e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 			return false;
 		}
    	return true;
    }
    public static boolean EnterComplaint(By element,String data)
    {
    	String Referencenumber = data.split("\\__")[0];
    	String RequestType = data.split("\\__")[1];
    	try{
    	KeywordsCoreFunctions.click(By.xpath("//div/div/div/button/span[1][text()='How Can I Assist?']"));
    	
    	
			Thread.sleep(3000);
		
    	boolean Complaint=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+RequestType+"']"));
    	if(Complaint==true)
    	{
    		Thread.sleep(3000);
    		
    		KeywordsCoreFunctions.click(By.xpath("//span[text()='"+RequestType+"']"));
    		Thread.sleep(5000);
        	KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'My Short')]/following::input[@type='text'][1]"),Referencenumber);
        	Thread.sleep(5000);
        	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	return true;
    	
    	}
    	else{
    		
    	return false;
    	}
 } catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		
    	
    	
    }
    public static boolean SelfServeGroup(By element,String data)
    {
    	String PhoneNumber= data.split("\\__")[0];
    	String Business= data.split("\\__")[1];
    	String Region= data.split("\\__")[2];
    	String opp= data.split("\\__")[3];
    	String purpose= data.split("\\__")[4];
    	String Entity= data.split("\\__")[5];
    	String Incorp= data.split("\\__")[6];
    	String CompanyNumber= data.split("\\__")[7];
    	String OfficeAddress= data.split("\\__")[8];
    	
    	try
    	{
    		JavascriptExecutor js = (JavascriptExecutor)driver;
    		Thread.sleep(3000);
    		 try{
 	    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"), PhoneNumber));
 	    		{
 	    			System.out.println("if");
 	    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"));
 	    			
 	    	        js.executeScript("arguments[0].setAttribute('value','"+PhoneNumber+"')", PT);
 	    }
 	    		
 	    		
 	    		}catch (Exception e)
 	    		{
 	    			System.out.println("Type Exception");
 	    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"));
 	    			
 	    	        js.executeScript("arguments[0].setAttribute('value','"+PhoneNumber+"')", PT1);
 	    		}
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Channel:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Business+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Region:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Region+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Lead Function:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+opp+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Purpose')]/following::textarea[1]"),purpose);
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contracting Entity:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Entity+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Country of Incorporation:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Incorp+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Company Number:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+CompanyNumber+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Office Address:')]/following::button[1]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+OfficeAddress+"')]"));
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    		
    return true;
    	}
    	catch(Exception e)
    	{
    		System.out.println("Exception message:"+e);
    		return false;
    	}
    }
    public static boolean SelfServeGroupNew(By element,String data)
    {
    	
    	try
    	{

    		String spec = data.split("\\__")[0];
    		
    		Thread.sleep(5000);
//    		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

    		Thread.sleep(3000);
    		
    		Workbook workbook = null;
    		
    			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
    		
    		Sheet firstSheet = workbook.getSheet(0); 
    		Sheet secSheet = workbook.getSheet(1); 
    		int rows=firstSheet.getRows();
    		int cols=firstSheet.getColumns();
    		int rows1=secSheet.getRows();
    		int cols1=secSheet.getColumns();
    		
    		  
    		 for(int i=1;i<rows;i++)
    		   {
    			 String specification = firstSheet.getCell(0, i).getContents().trim();
    			 
    			 if(specification.trim().equalsIgnoreCase(spec.trim()))
    			 {
    				 System.out.println(specification);
    				 Thread.sleep(10000);
    				 
    				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
    				
    				 boolean result = true;
    				 for(int j=1;j<cols;j++)
    				 {
    					 
    					 String charc = firstSheet.getCell(j, i).getContents();
    					 
    					 String value = secSheet.getCell(j, i).getContents();
    					 if(charc.equals("") == false)
    					 {String char_xpath ="";
    					 try{
    						 JavascriptExecutor js = (JavascriptExecutor)driver;
    					switch (charc) {
    					
    					case "PhoneNumber":
    						 
    						 try{
    				 	    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"), value));
    				 	    		{
    				 	    			System.out.println("if");
    				 	    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"));
    				 	    			
    				 	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				 	    }
    				 	    		
    				 	    		
    				 	    		}catch (Exception e)
    				 	    		{
    				 	    			System.out.println("Type Exception");
    				 	    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Phone Number')]/following::input[1]"));
    				 	    			
    				 	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				 	    		}
    					break;
    					
    					case "BusinessChannel":
    						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Channel:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "AccountRegion":
    						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Region:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "OpportunityLeadFunction":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Lead Function:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "Purpose":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Purpose')]/following::textarea[1]"),value);
    					break;
    					case "VFEntity":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contracting Entity:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    			    		
    					break;
    					case "CountryOfIncorporation":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Country of Incorporation:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "CompRegNumber":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Company Number:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "CompRegAddress":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Office Address:')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    					break;
    					case "Submit":
   						 
    						Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    			    		Thread.sleep(5000);
    					break;
    	                default:
    						result = false;
    						break;
    					}
    					
    					
    					 }
    					 
    						catch (Exception e) {
    							System.out.println("Error message:"+charc+" "+e);
    							result = false;
    						}
    					 
    					 }
    					 else{
    						 System.out.println("CDone with entering");
    						 
    							break;
    						 
    					 }
    					 
    				 }
    					 if(result)
    						{
    						
    								System.out.println("Capturing Result");
    								return true;
    							
    								
    							
    						}
    						else
    						{
    							System.out.println("Some problem in entering Characteristics");
    							return false;
    						} 
    				 
    		   }
    				 
    			 }
    						 
    		
    					 
    			 }
    			
    		   
    		
    catch (Exception e)
    	{
    		
    		System.out.println("Error during executing Keyword: SelectSpecifications\n");
    		e.printStackTrace(System.out);
    		return false;
    	}
    		return false;
    }
    public static boolean ConsentReq(By element,String data)
    {
    	String PhoneNumber= data.split("\\__")[0];
    	String PhoneNumber1= data.split("\\__")[1];
    	String Name= data.split("\\__")[2];
    	String Email= data.split("\\__")[3];
    	String Customer= data.split("\\__")[4];
    	try
    	{
    		JavascriptExecutor js = (JavascriptExecutor)driver;
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Requestor Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"),PhoneNumber);
    		Thread.sleep(3000);
    		 try{
    	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"), PhoneNumber1));
    	    		{
    	    			System.out.println("if");
    	    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"));
    	    			
    	    	        js.executeScript("arguments[0].setAttribute('value','"+PhoneNumber1+"')", PT);
    	    }
    	    		
    	    		
    	    		}catch (Exception e)
    	    		{
    	    			System.out.println("Type Exception");
    	    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"));
    	    			
    	    	        js.executeScript("arguments[0].setAttribute('value','"+PhoneNumber1+"')", PT1);
    	    		}
    		 Thread.sleep(3000);
    		 try{
 	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"), Name));
 	    		{
 	    			System.out.println("if");
 	    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"));
 	    			
 	    	        js.executeScript("arguments[0].setAttribute('value','"+Name+"')", PT);
 	    }
 	    		
 	    		
 	    		}catch (Exception e)
 	    		{
 	    			System.out.println("Type Exception");
 	    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"));
 	    			
 	    	        js.executeScript("arguments[0].setAttribute('value','"+Name+"')", PT1);
 	    		}
    		Thread.sleep(3000);
    		try{
	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"), Email));
	    		{
	    			System.out.println("if");
	    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"));
	    			
	    	        js.executeScript("arguments[0].setAttribute('value','"+Email+"')", PT);
	    }
	    		
	    		
	    		}catch (Exception e)
	    		{
	    			System.out.println("Type Exception");
	    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"));
	    			
	    	        js.executeScript("arguments[0].setAttribute('value','"+Email+"')", PT1);
	    		}
    		Thread.sleep(3000);
    		try{
	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"), Customer));
	    		{
	    			System.out.println("if");
	    			WebElement PT= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"));
	    			
	    	        js.executeScript("arguments[0].setAttribute('value','"+Customer+"')", PT);
	    }
	    		
	    		
	    		}catch (Exception e)
	    		{
	    			System.out.println("Type Exception");
	    			WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"));
	    			
	    	        js.executeScript("arguments[0].setAttribute('value','"+Customer+"')", PT1);
	    		}
    		Thread.sleep(3000);
    		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    		
    return true;
    	}
    	catch(Exception e)
    	{
    		System.out.println("Exception message:"+e);
    		return false;
    	}
    }
    public static boolean ConsentReqNew(By element,String data)
    {
    	
  try
 {

    		String spec = data.split("\\__")[0];
    		
    		Thread.sleep(5000);
//    		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

    		Thread.sleep(3000);
    		
    		Workbook workbook = null;
    		
    			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
    		
    		Sheet firstSheet = workbook.getSheet(0); 
    		Sheet secSheet = workbook.getSheet(1); 
    		int rows=firstSheet.getRows();
    		int cols=firstSheet.getColumns();
    		int rows1=secSheet.getRows();
    		int cols1=secSheet.getColumns();
    		
    		  
    		 for(int i=1;i<rows;i++)
    		   {
    			 String specification = firstSheet.getCell(0, i).getContents().trim();
    			 
    			 if(specification.trim().equalsIgnoreCase(spec.trim()))
    			 {
    				 System.out.println(specification);
    				 Thread.sleep(10000);
    				 
    				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
    				
    				 boolean result = true;
    				 for(int j=1;j<cols;j++)
    				 {
    					 
    					 String charc = firstSheet.getCell(j, i).getContents();
    					 
    					 String value = secSheet.getCell(j, i).getContents();
    					 if(charc.equals("") == false)
    					 {String char_xpath ="";
    					 try{
    						 JavascriptExecutor js = (JavascriptExecutor)driver;
    					switch (charc) {
    					
    					case "PhoneNumber":
    						KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Requestor Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"),value);
    			    		Thread.sleep(3000);
    					break;
    					
    					case "PhoneNumber1":
    						 
    						try{
    		    	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"), value));
    		    	    		{
    		    	    			System.out.println("if");
    		    	    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"));
    		    	    			
    		    	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    		    	    }
    		    	    		
    		    	    		
    		    	    		}catch (Exception e)
    		    	    		{
    		    	    			System.out.println("Type Exception");
    		    	    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Telephone Number')][1]/following::input[1]"));
    		    	    			
    		    	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    		    	    		}
    		    		 Thread.sleep(3000);
    					break;
    					case "Name":
    						 
    						try{
    			 	    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"), value));
    			 	    		{
    			 	    			System.out.println("if");
    			 	    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"));
    			 	    			
    			 	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    			 	    }
    			 	    		
    			 	    		
    			 	    		}catch (Exception e)
    			 	    		{
    			 	    			System.out.println("Type Exception");
    			 	    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Name')][1]/following::input[1]"));
    			 	    			
    			 	    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    			 	    		}
    			    		Thread.sleep(3000);
    					break;
    					case "Email":
   						 
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/div/div/span/span[contains(text(),'Vodafone Contact Details')]/following::span[contains(text(),'Email')][1]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					case "CustomerName":
   						 
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Name')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					case "Submit":
   						 
    						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    			    		
    					break;
    					
    					case "NameOfConsenter":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Name of Consenter')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/div/span[contains(text(),'Name of Consenter')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Name of Consenter')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "DateOfEvent":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Date of Event')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/div/span[contains(text(),'Date of Event')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Date of Event')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "TelephoneNumber":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "EventName":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Event Name')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Event Name')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Event Name')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "EventDate":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Event Date')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Event Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Event Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "OpeningDate":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Opening Date')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Opening Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Opening Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "OpeningTime":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Opening Time')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Opening Time')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Opening Time')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "ClosingDate":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Closing Date')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Closing Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Closing Date')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "ClosingTime":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Closing Time')]/following::input[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Closing Time')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Closing Time')]/following::input[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "NumberOfWinners":
                             try{
    							
    							KeywordsCoreFunctions.click(By.xpath("//div/span[contains(text(),'Number of')]/following::input[1]"));
    							WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Number of')]/following::input[1]"));
    							
    							js.executeScript("arguments[0].scrollIntoView();", PT1);
    							if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Number of')]/following::input[1]"), value));
    							{
    								
    								System.out.println("In IF");
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    					        }
    							
    							
    							}catch (Exception e)
    							{
    								System.out.println(e);
    								WebElement PT2= driver.findElement(By.xpath("//div/span[contains(text(),'Number of')]/following::input[1]"));
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
    							}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "HowWinnersSelected":
    						try{
    							
    							KeywordsCoreFunctions.click(By.xpath("//div/span[contains(text(),'How will the winners be selected?')]/following::textarea[1]"));
    							WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'How will the winners be selected?')]/following::textarea[1]"));
    							
    							js.executeScript("arguments[0].scrollIntoView();", PT1);
    							if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'How will the winners be selected?')]/following::textarea[1]"), value));
    							{
    								
    								System.out.println("In IF");
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    					}
    							
    							
    							}catch (Exception e)
    							{
    								System.out.println(e);
    								WebElement PT2= driver.findElement(By.xpath("//div/span[contains(text(),'How will the winners be selected?')]/following::textarea[1]"));
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
    							}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "HowPrizesAwarded":
    						KeywordsCoreFunctions.click(By.xpath("//div/span[contains(text(),'How will the prizes be awarded?')]/following::button[1]"));
    			    		Thread.sleep(3000);
    			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
    						break;
    						
    					case "HowGamePlayed":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'How will the game be played?')]/following::textarea[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'How will the game be played?')]/following::textarea[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'How will the game be played?')]/following::textarea[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "PrizeWinnerReceive":
    						try{
    				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'What prize will the winner receive?')]/following::textarea[1]"), value));
    				    		{
    				    			System.out.println("if");
    				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'What prize will the winner receive?')]/following::textarea[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
    				    }
    				    		
    				    		
    				    		}catch (Exception e)
    				    		{
    				    			System.out.println("Type Exception");
    				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'What prize will the winner receive?')]/following::textarea[1]"));
    				    			
    				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    				    		}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "PrizeDraw":
                              try{
    							
    							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'How will the prize draw be run?')]/following::textarea[1]"));
    							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'How will the prize draw be run?')]/following::textarea[1]"));
    							
    							js.executeScript("arguments[0].scrollIntoView();", PT1);
    							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'How will the prize draw be run?')]/following::textarea[1]"), value));
    							{
    								
    								System.out.println("In IF");
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
    					        }
    							
    							
    							}catch (Exception e)
    							{
    								System.out.println(e);
    								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'How will the prize draw be run?')]/following::textarea[1]"));
    								
    						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
    							}    
    			    		Thread.sleep(3000);
    					break;
    					
    					case "Name1":
    						 try{
     							
     							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Name')]/following::input[1]"));
     							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Name')]/following::input[1]"));
     							
     							js.executeScript("arguments[0].scrollIntoView();", PT1);
     							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Name')]/following::input[1]"), value));
     							{
     								
     								System.out.println("In IF");
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
     					        }
     							
     							
     							}catch (Exception e)
     							{
     								System.out.println(e);
     								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Name')]/following::input[1]"));
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
     							} 
    			    		Thread.sleep(3000);
    					break;
    					
    					case "RoleTitle":
                              try{
     							
     							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Role Title')]/following::input[1]"));
     							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Role Title')]/following::input[1]"));
     							
     							js.executeScript("arguments[0].scrollIntoView();", PT1);
     							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Role Title')]/following::input[1]"), value));
     							{
     								
     								System.out.println("In IF");
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
     					        }
     							
     							
     							}catch (Exception e)
     							{
     								System.out.println(e);
     								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Role Title')]/following::input[1]"));
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
     							}
    			    		Thread.sleep(3000);
    					break;
    					
    					case "EmailAddress":
                              try{
     							
     							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Email Address')]/following::input[1]"));
     							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Email Address')]/following::input[1]"));
     							
     							js.executeScript("arguments[0].scrollIntoView();", PT1);
     							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Email Address')]/following::input[1]"), value));
     							{
     								
     								System.out.println("In IF");
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
     					        }
     							
     							
     							}catch (Exception e)
     							{
     								System.out.println(e);
     								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contact Details')]/following::div/span[contains(text(),'Email Address')]/following::input[1]"));
     								
     						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
     							}
    			    		Thread.sleep(3000);
    					break;
    	                default:
    						result = false;
    						break;
    					}
    					
    					
    					 }
    					 
    						catch (Exception e) {
    							System.out.println("Error message:"+charc+" "+e);
    							return false;
    						}
    					 
    					 }
    					 else{
    						 System.out.println("CDone with entering");
    						 
    							break;
    						 
    					 }
    					 
    				 }
    					 if(result)
    						{
    						
    								System.out.println("Capturing Result");
    								return true;
    							
    								
    							
    						}
    						else
    						{
    							System.out.println("Some problem in entering Characteristics");
    							return false;
    						} 
    				 
    		   }
    				 
    			 }
    						 
    		
    					 
    			 }
    			
    		   
    		
    catch (Exception e)
    	{
    		
    		System.out.println("Error during executing Keyword: SelectSpecifications\n");
    		e.printStackTrace(System.out);
    		return false;
    		
    	}
    		return true;
    }
    public static boolean FormDetails(By element,String data)
    {
    	//String CompalintDate = data.split("\\__")[0];
    	String ConsumerName = data.split("\\__")[0];
    	try{
    	DateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
    	Date date=new Date();
    	String Date1=dateFormat.format(date);
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	JavascriptExecutor js = (JavascriptExecutor)driver;
	        
        WebElement UserName = driver.findElement(By.xpath("//div/span[contains(text(),'Complaint Date')]/following::input[1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + Date1+"')", UserName);
    	
    	
    	
    	
    	//KeywordsCoreFunctions.click(By.xpath("//tr/td/span[contains(text(),'Complaint Date')]/following::input[1]"));
    	
    	//KeywordsCoreFunctions.click(By.xpath("//div[@id='cl_cal_cl_tbx_complaintDate_months']/table/tbody/tr[1]/td/div[text()='Jan']"));
    	
    	
    	//KeywordsCoreFunctions.type(By.xpath("//tr/td/span[contains(text(),'Complaint Date')]/following::input[1]"), Date1);
    	//driver.findElement(By.xpath("//tr/td/span[contains(text(),'Complaint Date')]/following::input[@type='text'][1]")).sendKeys(Date1);
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	driver.findElement(By.xpath("//div/span[contains(text(),'Consumer Name')]/following::input[@type='text'][1]")).sendKeys(ConsumerName);
    	
    	KeywordsCoreFunctions.click(By.xpath(".//input[@type='submit']"));
    	} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
    	
		return true;
    	
    	
    }
    public static boolean CaseCreated(By element,String data)
    {
    	
    	String Referencenumber = data.split("\\__")[0];
		
		try{
		
		//KeywordsCoreFunctions.click(By.xpath("//a[text()='Workspace']"));
	
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	  WebDriverWait wait = new WebDriverWait(driver,80 );
    	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='GO']/preceding::input[1]")));
    	driver.findElement(By.xpath("//a[text()='GO']/preceding::input[1]")).sendKeys(Referencenumber);
    	
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='GO']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	//KeywordsCoreFunctions.click(By.xpath("//div/div/div/div/table/tbody/tr[2]/td[2]/a"));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
    	return true;

    
		
		}
    public static boolean ClickView(By element,String data)
    {
    	try{
    	String CustomerRef = data.split("\\__")[0];
    	Thread.sleep(5000);
    	KeywordsCoreFunctions.click(By.xpath("//div[text()='"+CustomerRef+"']/following::a[text()='VIEW'][1]"));
    	}
    	catch(Exception e)
    	{
    		e.printStackTrace();
			return false;	
    	}
    return true;	
    }
    public static boolean CaseStoreUpdateSuccess(By element,String data)
    {
    	
    	String Referencenumber = data.split("\\__")[0];
		
		try{
		
		//KeywordsCoreFunctions.click(By.xpath("//a[text()='Workspace']"));
	
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	driver.findElement(By.xpath("//input[@placeholder='Case#, Shortcut, Activity']")).sendKeys(Referencenumber);
    	
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='GO']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	//KeywordsCoreFunctions.click(By.xpath("//div/div/div/div/table/tbody/tr[2]/td[2]/a"));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
    	return true;

    
		
		}
    public static boolean SendEmail(By element,String data){
    	String Mail= data.split("\\__")[0];
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Send Email']"));
    	try{
    	try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	driver.findElement(By.xpath("//div/span[contains(text(),'Subject')]/following::input[@type='text'][1]")).sendKeys("Order Creation");
    	
    	//driver.findElement(By.xpath("//span[contains(text(),'To Address')]/following::input[@type='text'][1]")).clear();
    	//driver.findElement(By.xpath("//span[contains(text(),'To Address')]/following::input[@type='text'][1]")).sendKeys(Mail);
    	//KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Message')]/following::div[1]/table/tbody/tr[3]/td/label[text()='RadEditor hidden textarea']"));
    	//driver.findElement(By.xpath("//span[contains(text(),'Message')]/following::div[1]/table/tbody/tr[3]/td/label[text()='RadEditor hidden textarea']")).sendKeys(Mail);
    	//WebElement frame=driver.findElement(By.xpath("//*[@id='ctl00_MainContent_wsCards1_dlCards_ctl01_MainContent_wsCards1_dlCards_pnlCase_1_taskcontrol_Task_SendEmail_txtEmailMessage_contentIframe']"));
    	driver.switchTo().frame("ctl00_MainContent_wsCards1_dlCards_ctl00_MainContent_wsCards1_dlCards_pnlCase_0_taskcontrol_Task_SendEmail_txtEmailMessage_contentIframe");
    	WebElement Body=driver.findElement(By.tagName("body"));
    	Body.sendKeys("Created");
    	driver.switchTo().defaultContent();
    	
    	String parent=driver.getWindowHandle();
       KeywordsCoreFunctions.click(By.xpath("//a[text()='Send']"));
       
       try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
     String Child=driver.getWindowHandle();
     driver.switchTo().window(Child);
     KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div/div/div[2]/div[1]"));
     
     
     driver.switchTo().window(parent);
     
     
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
    	return true;
    	
    	
    
}
    public static boolean SearchCase(By element,String data){    
    	String Casereference= data.split("\\__")[0];
    	try{
    	KeywordsCoreFunctions.type(By.xpath("//*[@id='MainContent_txstSearchContent']"), Casereference);
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
   
    	//driver.findElement(By.xpath("//input[@type='text']")).sendKeys(Casereference);
    	
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='MainContent_lnkBasicSearch']"));
    	if (driver.findElement(By.xpath("//a[text()='"+Casereference+"']")).isDisplayed())
    	{
    		
    		return true;
    		
    	}
    	else{
        

          return false;
    	}
    	} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
  
    }
    public static boolean SaveFile(By element,String data){
    	String Casereference= data.split("\\__")[0];
    	String scrFolder="D://SWIFT//"+Casereference+"";
    	try{
    	
    	File files=new File(scrFolder);
    	if(!files.exists()){
    		files.mkdir();
    		
    	}
    	else{
    		
    		System.out.println("exist");
    	}
    	
    	
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	KeywordsCoreFunctions.click(By.xpath("//a[@class='PDF']"));
    	try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    } catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
    	return true;
    }
public static boolean ValidatePDF(By element,String data){
	
	String Casereference= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//document.PDF"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(Casereference)){
    			String TextFile="D://SWIFT//"+Casereference+"//"+Casereference+".txt";
    			File fc=new File(TextFile);
    			if(fc.exists()){
    				
    				
    			}
    			else{
    				fc.createNewFile();
    			}
    			
    			FileWriter fw=new FileWriter(TextFile);
    			BufferedWriter BW=new BufferedWriter(fw);
    			BW.write(st);
    			BW.close();
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 
public static boolean AdvanceSearch(By element,String data){ 
	try{
	String Casereference= data.split("\\__")[0];
	driver.findElement(By.xpath("//input[@placeholder='Case Reference']")).clear();
	
	driver.findElement(By.xpath("//input[@placeholder='Case Reference']")).sendKeys(Casereference);
	
	//KeywordsCoreFunctions.type(By.xpath("//*[@id='MainContent_txstSearchContent']"), Casereference);
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	//driver.findElement(By.xpath("//input[@type='text']")).sendKeys(Casereference);
	KeywordsCoreFunctions.click(By.xpath("//a[text()='Search']"));
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	if (driver.findElement(By.xpath("//a[text()='"+Casereference+"']")).isDisplayed())
	{
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return true;
		
	}
	else{
    

return false;
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		
		e.printStackTrace();
		return false;
	}
	
	
}
public static boolean ActivityCase(By element,String data){  
	
	String Casereference= data.split("\\__")[0];
	try{
	
		Thread.sleep(5000);
	
	//KeywordsCoreFunctions.click(By.xpath("//*[@id='myReportsButton']"));
	
	Actions action=new Actions(driver);
	WebElement Activity=driver.findElement(By.xpath("//a[text()='Dashboard']"));
	System.out.println(Activity);
	action.moveToElement(Activity).release(Activity).build().perform();
	WebElement Case=driver.findElement(By.xpath("//a[text()='Case']"));
	action.moveToElement(Case).click().build().perform();

	
		Thread.sleep(10000);
	
	
	
	//int count;
	 //ount=driver.findElements(By.xpath("//div[@class='gridViewResponsiveWidth']/div/table/tbody/tr")).size();
		
		boolean Casedisplayed=KeywordsCoreFunctions.isdisplayed(By.xpath("//div[@class='gridViewResponsiveWidth']/div/table/tbody/tr/td/a[contains(text(),'"+Casereference+"')]"));
	if(Casedisplayed==true)
	{
		
			Thread.sleep(10000);
		
	return true;
	}
	else
	{
		Thread.sleep(10000);
	return false;
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
}
public static boolean OpenBrowser(By element,String data){
     String FileLocation= data.split("\\__")[0];
     String Ln= data.split("\\__")[1];
	//String Casereference= "TEMP";
	String scrFolder="D:\\SWIFT\\"+FileLocation+"";
	
	File files=new File(scrFolder);
	if(!files.exists()){
		files.mkdir();
		
	}
	else{
		
		System.out.println("exist");
	}
	System.setProperty("webdriver.chrome.driver", "D://SWIFT//eTAP_V1.04//browserdrivers//chromedriver.exe");
	String downloadFilepath=scrFolder;
	HashMap<String,Object> chromePrefs=new HashMap<String,Object>();
	chromePrefs.put("profile.deafult_content_settings.popups",0);
	chromePrefs.put("download.default_directory",downloadFilepath);
	ChromeOptions options=new ChromeOptions();
	options.setExperimentalOptions("prefs", chromePrefs);
	options.addArguments("--lang="+Ln+"");
	DesiredCapabilities Cap=DesiredCapabilities.chrome();
	Cap.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);
	Cap.setCapability(ChromeOptions.CAPABILITY, options);
	driver=new ChromeDriver(Cap);

	driver.manage().window().maximize();
	
	
	return true;
}
public static boolean ValidateForm(By element,String data){
	
	String Customer= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath(".//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Fill_and_submit_Vivid_Awareness_consumer_complaint_form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(Customer)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 
public static boolean EnterComplaintSP(By element,String data)
{
	String Referencenumber = data.split("\\__")[0];
	try{
	KeywordsCoreFunctions.click(By.xpath(".//div/div/div/button/span[1][text()='¿Cómo puedo ayudar?']"));
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	boolean Complaint=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='Enter Complaint']"));
	if(Complaint==true){
		Thread.sleep(3000);
	driver.findElement(By.xpath("//span[text()='Enter Complaint']")).click();
	Thread.sleep(3000);
	driver.findElement(By.xpath("//span[text()='Descripción:']/following::input[@type='text'][1]")).sendKeys(Referencenumber);
	KeywordsCoreFunctions.click(By.xpath(".//input[@type='submit']"));
	
	return true;
	}
	else{
		Thread.sleep(3000);
		return false;
	}
	
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
	
	
}
public static boolean UploadfileSP(By element,String data)
{
	
	String Filepath= data.split("\\__")[0];
	
	

	
	driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	//KeywordsCoreFunctions.click(By.xpath("//a[text()='Cargar']"));
	try {
		Thread.sleep(10000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return true;


	
	}
public static boolean ValidateFormSP(By element,String data){
	
	String Customer= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath(".//a[text()='Previsualizar']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Fill_and_submit_Vivid_Awareness_consumer_complaint_form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(Customer)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 
public static boolean CaseCreatedSP(By element,String data)
{
	
	String Referencenumber = data.split("\\__")[0];
	
	
	
	//KeywordsCoreFunctions.click(By.xpath("//a[text()='My Workspace']"));

	
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	driver.findElement(By.xpath("//input[@placeholder='Número de caso']")).sendKeys(Referencenumber);
	KeywordsCoreFunctions.click(By.xpath("//a[text()='IR']"));
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	//KeywordsCoreFunctions.click(By.xpath("//div/div/div/div/table/tbody/tr[2]/td[2]/a"));
	
	return true;


	
	}
public static boolean SendEmailSP(By element,String data){
	String Mail= data.split("\\__")[0];
	KeywordsCoreFunctions.click(By.xpath("//a[text()='Send Email']"));
	try{
	try {
		Thread.sleep(10000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	driver.findElement(By.xpath("//div/span[contains(text(),'Tema')]/following::input[@type='text'][1]")).sendKeys("Order Creation");
	//driver.findElement(By.xpath("//span[contains(text(),'To Address')]/following::input[@type='text'][1]")).clear();
	//driver.findElement(By.xpath("//span[contains(text(),'To Address')]/following::input[@type='text'][1]")).sendKeys(Mail);
	//KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Message')]/following::div[1]/table/tbody/tr[3]/td/label[text()='RadEditor hidden textarea']"));
	//driver.findElement(By.xpath("//span[contains(text(),'Message')]/following::div[1]/table/tbody/tr[3]/td/label[text()='RadEditor hidden textarea']")).sendKeys(Mail);
	driver.switchTo().frame("ctl00_MainContent_wsCards1_dlCards_ctl00_MainContent_wsCards1_dlCards_pnlCase_0_taskcontrol_Task_SendEmail_txtEmailMessage_contentIframe");
	WebElement Body=driver.findElement(By.tagName("body"));
	Body.sendKeys("Created");
	driver.switchTo().defaultContent();
	//JavascriptExecutor js = (JavascriptExecutor)driver;
    
    //WebElement UserName = driver.findElement(By.xpath("//span[contains(text(),'Message')]/following::div[1]/table/tbody/tr[3]/td"));
    
   //js.executeScript("arguments[0].setAttribute('value', 'Order Created')", UserName);
	String parent=driver.getWindowHandle();
   KeywordsCoreFunctions.click(By.xpath("//a[text()='Presentar']"));
   
   try {
		Thread.sleep(10000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
 String Child=driver.getWindowHandle();
 driver.switchTo().window(Child);
 KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div/div/div[2]/div[1]"));
 
 
 driver.switchTo().window(parent);
 
 
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	
	

}
public static boolean SearchCaseSP(By element,String data){    
	String Casereference= data.split("\\__")[0];
	try{
	KeywordsCoreFunctions.type(By.xpath("//*[@id='MainContent_txstSearchContent']"), Casereference);
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	//driver.findElement(By.xpath("//input[@type='text']")).sendKeys(Casereference);
	KeywordsCoreFunctions.click(By.xpath("//ul[@class='nav nav-pills']/li/a[text()='Buscar']"));
	
	if (driver.findElement(By.xpath("//a[text()='"+Casereference+"']")).isDisplayed())
	{
		
		return true;
		
	}
	else{
    

      return false;
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}

}
public static boolean AdvanceSearchSP(By element,String data){ 
	try{
	String Casereference= data.split("\\__")[0];
driver.findElement(By.xpath("//input[@placeholder='Referencia del Asunto']")).clear();
	
	driver.findElement(By.xpath("//input[@placeholder='Referencia del Asunto']")).sendKeys(Casereference);
	//KeywordsCoreFunctions.type(By.xpath("//*[@id='MainContent_txstSearchContent']"), Casereference);
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	//driver.findElement(By.xpath("//input[@type='text']")).sendKeys(Casereference);
	KeywordsCoreFunctions.click(By.xpath("//a[text()='Buscar']"));
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

	if (driver.findElement(By.xpath("//a[text()='"+Casereference+"']")).isDisplayed())
	{
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return true;
		
	}
	else{
    

return false;
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		
		e.printStackTrace();
		return false;
	}
	
	
}
public static boolean ActivityCaseSP(By element,String data){  
	
	String Casereference= data.split("\\__")[0];
	try{
	try {
		Thread.sleep(5000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	//KeywordsCoreFunctions.click(By.xpath("//*[@id='myReportsButton']"));
	
	Actions action=new Actions(driver);
	WebElement Activity=driver.findElement(By.xpath("//a[text()='Tablero']"));
	action.moveToElement(Activity).release(Activity).build().perform();
	WebElement Case=driver.findElement(By.xpath("//a[text()='Caso']"));
	action.moveToElement(Case).click().build().perform();
	//int count;
	 //ount=driver.findElements(By.xpath("//div[@class='gridViewResponsiveWidth']/div/table/tbody/tr")).size();
	boolean Casedisplayed=KeywordsCoreFunctions.isdisplayed(By.xpath("//div[@class='gridViewResponsiveWidth']/div/table/tbody/tr/td/a[contains(text(),'"+Casereference+"')]"));
	if(Casedisplayed==true)
	//if(driver.findElement(By.xpath("//div[@class='gridViewResponsiveWidth']/div/table/tbody/tr/td/a[contains(text(),'"+Casereference+"')]")).isDisplayed())
	{
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	return true;
	}
	else
	{
		Thread.sleep(10000);
	return false;
	}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
}
public static boolean ValidateCaseOpen(By element,String data){  
	
	
	try{
		
		
		boolean result=KeywordsCoreFunctions.isdisplayed(By.xpath("//div[text()='Fill and submit Vivid Awareness consumer complaint form']"));
		if(result==true){
			System.out.println("Able to Open the case");
			return true;
			
		}else{
			System.out.println("UnAble to Open the case");
			return false;
			
		}
			
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}

}
public static boolean ValidateStatusDisplayed(By element,String data){  
	
	
	try{
		
		
		boolean result=KeywordsCoreFunctions.isdisplayed(By.xpath("//div[@class='workspaceCardStatus']"));
		if(result==true){
			System.out.println("Status Bar Displayed");
			return true;
			
		}else{
			System.out.println("Status Bar not displayed");
			return false;
			
		}
			
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}

}
public static boolean ValidateCaseDisplayed(By element,String data){  
	String CaseID= data.split("\\__")[0];
	
	try{
		
		String actualid=KeywordsCoreFunctions.driver.findElement(By.xpath("//div/div/div/div/table/tbody/tr[2]/td[2]/a")).getText();
		//boolean result=KeywordsCoreFunctions.isdisplayed(By.xpath("//a[text()='Current Activity']"));
		if(actualid.equals(CaseID)){
			System.out.println("Expected case displayed");
			return true;
			
		}else{
			System.out.println("Expected caseNot  displayed");
			return false;
			
		}
			
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}

}
public static boolean Validateforensicdata(By element,String data){  
	
	
	try{
		
		
		boolean result=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='Vivid Awareness Consumer Complaint']"));
		if(result==true){
			KeywordsCoreFunctions.click(By.xpath("//a[text()='Audit']"));
			Thread.sleep(5000);
			boolean result1=KeywordsCoreFunctions.isdisplayed(By.xpath("//table[@class='mGrid']"));
			if(result1==true){
			System.out.println("Able to Open the case");
			return true;
			}
			else{
				
				return false;
			}
			
		}else{
			System.out.println("UnAble to Open the case");
			return false;
			
		}
			
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}

}
public static boolean EscalateCase(By element,String data)
{  
	String Username= data.split("\\__")[0];
	
	try{
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Escalate']"));
		Thread.sleep(3000);
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='select']"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_wsCards1_dlCards_ctl00_MainContent_wsCards1_dlCards_pnlCase_0_taskcontrol_Task_OnEscalate_ddlEscalate_DropDown']/div/ul/li[contains(text(),'"+Username+"')]"));
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;

}
public static boolean Disposition(By element,String data)
{  
	//String Username= data.split("\\__")[0];
	
	try{
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Disposition']"));
		
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		Thread.sleep(5000);
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Final Review']"));
    	Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
	Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Close']"));
		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//label[text()='Test Qestion 1']/preceding-sibling::input[@type='checkbox']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//label[text()='Did you check everything?']/preceding-sibling::input[@type='checkbox']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		Thread.sleep(5000);
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;

}
public static boolean WorkflowmanagerSupervise(By element,String data)
{  
	String Username= data.split("\\__")[0];
	
	try{
		
		
		Actions action=new Actions(driver);
		WebElement Activity=driver.findElement(By.xpath("//a[text()='Back Office']"));
		//action.moveToElement(Activity).release(Activity).build().perform();
		action.moveToElement(Activity).click(Activity).build().perform();
			Thread.sleep(5000);
		
		WebElement Case=driver.findElement(By.xpath("//a[text()='Account Management']"));
		action.moveToElement(Case).click().build().perform();
		Thread.sleep(5000);
		String access1=KeywordsCoreFunctions.driver.findElement(By.xpath("//td[text()='"+Username+"']/following-sibling::td[3]/a")).getText();
		System.out.println(access1);
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//td[text()='"+Username+"']/following-sibling::td[3]/a"));
		Thread.sleep(5000);
		String access=KeywordsCoreFunctions.driver.findElement(By.xpath("//td[text()='"+Username+"']/following-sibling::td[3]/a")).getText();
		System.out.println(access);
		
		Thread.sleep(3000);
		if(access.equals("Yes"))
				{
			return true;
			
				}
		else{
			return false;
		}
		
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean CreateTemplateAccess(By element,String data)
{  
	String FileName= data.split("\\__")[0];
	String Filepath= data.split("\\__")[1];
	
	try{
		Actions action=new Actions(driver);
		//WebElement Activity=driver.findElement(By.xpath("//a[text()='Platform Default Account']"));
		//action.moveToElement(Activity).release(Activity).build().perform();
		
			//Thread.sleep(3000);
		
		WebElement Case=driver.findElement(By.xpath("//a[text()='Back Office']"));
		action.moveToElement(Case).click().build().perform();
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Templates']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Create New')]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.type(By.xpath("//textarea[@class='inputDescription']"), "Automation File");
		Thread.sleep(3000);
		driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
		Thread.sleep(3000);
		String parent=driver.getWindowHandle();
		
		String Child1=driver.getWindowHandle();
		 driver.switchTo().window(Child1);
		 KeywordsCoreFunctions.click(By.xpath(".//*[@id='informationDialog']/div/div/div[2]/div[1]"));
		 driver.switchTo().window(parent);
			Thread.sleep(10000);
			KeywordsCoreFunctions.click(By.xpath("//ul[@id='backoffice-nav']/li/a[text()='Templates']"));
			Thread.sleep(5000);
		boolean UploadedFile=KeywordsCoreFunctions.isdisplayed(By.xpath("//tr/td//span[contains(text(),'"+FileName+"')]"));
		System.out.println(UploadedFile);
		if(UploadedFile==true){
			Thread.sleep(3000);
			//KeywordsCoreFunctions.click(By.xpath("//tr/td//a[text()='"+FileName+" - Create']/following::td[6]/a"));
			//KeywordsCoreFunctions.AcceptAlert();
			Thread.sleep(3000);
			//String Child=driver.getWindowHandle();
			 //driver.switchTo().window(Child);
			 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
			 
			 
			 //driver.switchTo().window(parent);
			Thread.sleep(3000);
			return true;
		}
		else{
			
			System.out.println(UploadedFile);
			return false;
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean CreateWorkFlowAccess(By element,String data)
{  
	String FlowName= data.split("\\__")[0];
	
	
	try{
		Actions action=new Actions(driver);
		//WebElement Activity=driver.findElement(By.xpath("//a[text()='Platform Default Account']"));
		//action.moveToElement(Activity).release(Activity).build().perform();
		
			Thread.sleep(3000);
		
			WebElement Case=driver.findElement(By.xpath("//a[text()='Back Office']"));
			action.moveToElement(Case).click().build().perform();
			
			KeywordsCoreFunctions.click(By.xpath("//a[text()='Workflow']"));
			Thread.sleep(5000);
			KeywordsCoreFunctions.click(By.xpath("//div[@class='container accountManagement']/div/div[1]/div/div[2]/div/a[text()='Create new']"));
			Thread.sleep(3000);
		KeywordsCoreFunctions.type(By.xpath("//input[@type='text']"),FlowName);
		String parent=driver.getWindowHandle();
		KeywordsCoreFunctions.type(By.xpath("//textarea[@class='inputDescription']"), "Automation Data");
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Create']"));
		Thread.sleep(3000);
		String Child1=driver.getWindowHandle();
		driver.switchTo().window(Child1);
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='informationDialog']/div/div/div[2]/div[1]"));
		Thread.sleep(5000);
		driver.switchTo().window(parent);
			Thread.sleep(5000);
		boolean UploadedFile=KeywordsCoreFunctions.isdisplayed(By.xpath("//tr/td//a[text()='"+FlowName+"']"));
		System.out.println(UploadedFile);
		if(UploadedFile==true){
			Thread.sleep(3000);
			//KeywordsCoreFunctions.click(By.xpath("//tr/td//a[text()='"+FlowName+"']/following::td[7]/a"));
			//Thread.sleep(3000);
			//KeywordsCoreFunctions.AcceptAlert();
			//Thread.sleep(3000);
			//String Child=driver.getWindowHandle();
			 //driver.switchTo().window(Child);
			 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
			 
			 
			 //driver.switchTo().window(parent);
			Thread.sleep(3000);
			return true;
		}
		else{
			
			System.out.println(UploadedFile);
			return false;
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean AddUserAccess(By element,String data)
{  
	
	
	try{
		Actions action=new Actions(driver);
		WebElement Activity=driver.findElement(By.xpath("//a[text()='Platform Default Account']"));
		action.moveToElement(Activity).release(Activity).build().perform();
		
			Thread.sleep(3000);
		
		WebElement Case=driver.findElement(By.xpath("//a[text()='Manage Account']"));
		action.moveToElement(Case).click().build().perform();
	
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Add User']"));
		Thread.sleep(3000);
		//String Child1=driver.getWindowHandle();
		 //driver.switchTo().window(Child1);
		 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
		 //driver.switchTo().window(parent);
			Thread.sleep(5000);
		boolean UploadedFile=KeywordsCoreFunctions.driver.findElement(By.xpath("//span[contains(text(),'Email Address (Username)')]/following::input[@type='text'][1]")).isEnabled();
		System.out.println(UploadedFile);
		if(UploadedFile==true){
			
			Thread.sleep(3000);
			return true;
		}
		else{
			
			System.out.println(UploadedFile);
			return false;
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean EmailTempletAccess(By element,String data)
{  
	
	
	try{
		Actions action=new Actions(driver);
		WebElement Activity=driver.findElement(By.xpath("//a[text()='Platform Default Account']"));
		action.moveToElement(Activity).release(Activity).build().perform();
		
			Thread.sleep(3000);
		
		WebElement Case=driver.findElement(By.xpath("//a[text()='Manage Account']"));
		action.moveToElement(Case).click().build().perform();
	
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Email Templates']"));
		Thread.sleep(3000);
		//String Child1=driver.getWindowHandle();
		 //driver.switchTo().window(Child1);
		 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
		 //driver.switchTo().window(parent);
			Thread.sleep(5000);
		boolean UploadedFile=KeywordsCoreFunctions.driver.findElement(By.xpath("//span[text()='Account Welcome Message Introduction']/following::a[1]")).isEnabled();
		System.out.println(UploadedFile);
		if(UploadedFile==true){
			KeywordsCoreFunctions.click(By.xpath("//span[text()='Account Welcome Message Introduction']/following::a[1]"));
			Thread.sleep(3000);
			boolean UploadedFile1=KeywordsCoreFunctions.driver.findElement(By.xpath("//span[text()='Account Welcome Message Introduction']/following::a[1]")).isEnabled();
			System.out.println(UploadedFile1);
			if(UploadedFile1==true){
			Thread.sleep(3000);
			return true;
			}
			
			else{
				System.out.println(UploadedFile1);
				return false;
				
				
			}
		}
		else{
			
			System.out.println(UploadedFile);
			return false;
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean CreateListAccess(By element,String data)
{  
	String ListName= data.split("\\__")[0];
	
	
	try{
		Actions action=new Actions(driver);
		WebElement Activity=driver.findElement(By.xpath("//a[text()='Platform Default Account']"));
		action.moveToElement(Activity).release(Activity).build().perform();
		
			Thread.sleep(3000);
		
		WebElement Case=driver.findElement(By.xpath("//a[text()='Manage Workflows']"));
		action.moveToElement(Case).click().build().perform();
		KeywordsCoreFunctions.type(By.xpath("//input[@type='text']"), ListName);
		String parent=driver.getWindowHandle();
		KeywordsCoreFunctions.type(By.xpath("//textarea[@class='inputDescription']"), ListName);
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li/a[text()='Create']"));
		Thread.sleep(3000);
		//String Child1=driver.getWindowHandle();
		 //driver.switchTo().window(Child1);
		 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
		 //driver.switchTo().window(parent);
			Thread.sleep(5000);
		boolean UploadedFile=KeywordsCoreFunctions.isdisplayed(By.xpath("//tr/td[text()='"+ListName+"']"));
		System.out.println(UploadedFile);
		if(UploadedFile==true){
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//tr/td[text()='"+ListName+"']/following::td[2]/a"));
			Thread.sleep(3000);
			KeywordsCoreFunctions.AcceptAlert();
			Thread.sleep(3000);
			//String Child=driver.getWindowHandle();
			 //driver.switchTo().window(Child);
			 //KeywordsCoreFunctions.click(By.xpath("//*[@id='informationDialog']/div[@onclick='closeWindow();']"));
			 
			 
			 //driver.switchTo().window(parent);
			Thread.sleep(3000);
			return true;
		}
		else{
			
			System.out.println(UploadedFile);
			return false;
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean WebdriverWait(By element,String data)
{  
	String ListName= data.split("\\__")[0];
	
	
	try{
		  WebDriverWait wait = new WebDriverWait(driver, 60);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(""+ListName+"")));
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}

public static boolean ContractSupportNew(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(10000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		//Thread.sleep(5000);
		//KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		//Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "PhoneNumber":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][4]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TotalContractValue":
						 
						path = driver.findElement(By.xpath("//div/span[contains(text(),'Total Contract Value')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "Sector":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Sector:')]/following::a[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					
					case "BusinessChannel":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Channel:')]/following::a[1]"));
					  	Thread.sleep(3000);
					  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "AccountRegion":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Region:')]/following::a[1]"));
					  	Thread.sleep(3000);
					  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "ApprovalStatus":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Status:')]/following::a[1]"));
					  	Thread.sleep(3000);
					  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					  	break;
					  	
					case "Role":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Role')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
				  	
					case "ExistingContract":
						
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Existing Contract:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					  	
					case "DocumentType":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Document Type:')]/following::button[1]"));
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "FullName":
						
						driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")).clear();
						driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")).sendKeys(value);
					break;
					
					case "NegotiateCountry":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Country:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "NegotiateLanguage":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Language:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "Territory":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies):')]/following::button[1]"));
						Thread.sleep(4000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						break;
						
					case "TermsUsed":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "ICCScope":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'ICCs In Scope:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "GoverningLaw":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Governing Law:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "PublicandProvateSector":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Public or Private Sector:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "VFEntity":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contracting Entity 1:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "CompanyName":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Company Number 1:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
							
					case "CompRegAddress":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Address 1:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "IntialTerm":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "EffectiveDate":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Effective Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "CommencmentDate":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Commencement Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "BenchMarking":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Benchmarking:')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "PaymentTerms":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms (days):')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "OffTeritory":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Off-Footprint Territory(ies)')]/following::button[1]"));
						Thread.sleep(3000);
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+value+"')]")));
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
						
						
					case "FurtherDetail":
                      try{
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea"));
							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					}
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
                      break;

					case "Next":
						 
						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	                  	Thread.sleep(10000);
						break;
                      

										
					
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}

public static boolean ContractSupportNewUK(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(10000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		//Thread.sleep(5000);
		//KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		//Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "ConsumerName":
						 
						WebElement Name1 = driver.findElement(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" + value+"')", Name1);
					break;
					case "Role":
						 
						WebElement Role1 = driver.findElement(By.xpath("//span[contains(text(),'Role:')]/following::input[@type='text'][1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Role1);
						break;
					
					case "PhoneNumber":
						Thread.sleep(6000);
						
						driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(value);
						WebElement PN = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]"));
						        
						        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PN);
					break;
					
					case "SalesChannel":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "SForgID":
						 
						 WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[@type='text'][1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" + value+"')", DateField);
					  	break;
					  	
					case "SFAccountNumber":
						 
						driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]")).sendKeys(value);
		//		        UserDefinedKeywords.javascriptType(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]"),SFOppRefID );
					break;
				  	
					case "SFOppReference":
						
						   driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference:')]/following::input[@type='text'][1]")).sendKeys(value);
					        
						break;
					  	
					case "CompRegNumber":
						 
						driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]")).sendKeys(value);
				        
						break;
					
					case "CompanyName":
						
						driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]")).sendKeys(value);
				       
					break;
					
					case "CompCountry":
						 
						 driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[@type='text'][1]")).sendKeys(value);
						break;
					
					case "CompRegAddress":
						 
						 try{
					    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"), value));
					    		{
					    			System.out.println("if");
					    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
					    			
					    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
					    }
					    		
					    		
					    		}catch (Exception e)
					    		{
					    			System.out.println("Type Exception");
					    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
					    			
					    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					    		}
					       	break;
						
					case "CorpID":
						 
						 KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Corporate ID:')]/following::input[@type='text'][1]"), value);
					        
					
						break;
						
					case "NPID":
						 
						KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'NPID:')]/following::input[@type='text'][1]"), value);
				        
						break;
						
					case "SecurityVetting":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'What Government Security Classification has been applied in respect of this contract?')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				
						break;
					
					case "EDRATier":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Tier')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				
						break;
						
					case "Submit":
						 
				    	
				        KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
					Thread.sleep(5000);
						break;
						
					case "ContractType":
						 
						  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Contract Type:')]")));
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Type:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						
						break;
						
					case "TermsUsed":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));

						break;
						
					case "TieredSupportService":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Is this contract within the scope of Tiered Support Service?')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));

						break;
						
					case "TieredSupportServiceFoundation":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does this contract have a Tiered Support Service above foundation level?')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));

						break;
						
					case "TContractValue":
						 
						
						//KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_EDRATier']/span/button"));
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EDRA+"')]"));
						//driver.findElement(By.xpath("//tr/td/span[contains(text(),'Initial Term:')]/following::input[@type='text'][1]")).sendKeys(IntialTerm);
						driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value (TCV):')]/following::input[@type='text'][1]")).sendKeys(value);

						break;
							
					case "TargetSpend":
						 
						driver.findElement(By.xpath("//span[contains(text(),'Target Spend:')]/following::input[@type='text'][1]")).sendKeys(value);

						break;
						
					case "TSubsidyValue":
						 
						driver.findElement(By.xpath("//span[contains(text(),'Total Subsidy Value:')]/following::input[@type='text'][1]")).sendKeys(value);

					break;
					
					case "MinTerm":
						 
						driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months):')]/following::input[@type='text'][1]")).sendKeys(value);

						break;
						
					case "TermPerConnection":
						 
						driver.findElement(By.xpath("//span[contains(text(),'Term Per Connection (months):')]/following::input[@type='text'][1]")).sendKeys(value);
						break;
						
					case "FurtherDetails":
						 
						try{
							WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
					}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
						
						break;
						
						
						
					case "AccountArea":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "RegOffAddress":
						try{
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					}
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
						break;

					case "Next":
						 
						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	                  	Thread.sleep(10000);
						break;
                      

										
					
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
//								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
//								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean ContractSupport(By element,String data)
{  
	
	String PhoneNumber= data.split("\\__")[0];
	String BusinessChannel= data.split("\\__")[1];
	String Sector= data.split("\\__")[2];
	String AccRegion= data.split("\\__")[3];
	String ApprovalStatus= data.split("\\__")[4];
	String Role=data.split("\\__")[5];
	String FullName=data.split("\\__")[6];
	String ExistingContract=data.split("\\__")[7];
	String DocumentType=data.split("\\__")[8];
	String NegotiateLanguage=data.split("\\__")[9];
	String NegotiateCountry=data.split("\\__")[10];
	String Territory=data.split("\\__")[11];
	String TermsUSed=data.split("\\__")[12];
	String ICCScope=data.split("\\__")[13];
	String GoverningLaw=data.split("\\__")[14];
	String PublicandProvateSector=data.split("\\__")[15];
	String FurtherDetails=data.split("\\__")[16];
	String VodafoneEntitiy=data.split("\\_")[17];
	String CompanyName=data.split("\\__")[18];
	String Address=data.split("\\_")[19];
	String IntialTerm=data.split("\\_")[20];
	String EffectiveDate=data.split("\\_")[21];
	String CommencmentDate=data.split("\\_")[21];
	String BenchMarking=data.split("\\_")[23];
	
	String PaymentTerms=data.split("\\_")[24];
	
	String Offterritory=data.split("\\_")[25];
	
	try{
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  Thread.sleep(5000);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")));
			
		driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")).clear();
		driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")).sendKeys(FullName);
		
		driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][4]")).sendKeys(PhoneNumber);
		driver.findElement(By.xpath("//span[contains(text(),'Role')]/following::input[@type='text'][1]")).sendKeys(Role);
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Sector:')]/following::a[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Sector+"')]"));
		
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Channel:')]/following::a[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BusinessChannel+"')]"));
  	
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Region:')]/following::a[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccRegion+"')]"));
  	
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Status:')]/following::a[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ApprovalStatus+"')]"));
  	Thread.sleep(3000);
  	driver.findElement(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea")).sendKeys("NA");
		
  	Thread.sleep(5000);
  	
  
  	
      KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(10000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Existing Contract:')]")));

	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Existing Contract:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ExistingContract+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+TermsUSed+"')]")));
	
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+TermsUSed+"')]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Document Type:')]/following::button[1]"));
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+DocumentType+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+DocumentType+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Country:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+NegotiateCountry+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+NegotiateCountry+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Language:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+NegotiateLanguage+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+NegotiateLanguage+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies):')]/following::button[1]"));
	Thread.sleep(4000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+Territory+"')]/preceding::input[1]")));
	KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+Territory+"')]/preceding::input[1]"));
	
	
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'ICCs In Scope:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+ICCScope+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ICCScope+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Governing Law:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+GoverningLaw+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+GoverningLaw+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Off-Footprint Territory(ies)')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+Offterritory+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Offterritory+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Public or Private Sector:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+PublicandProvateSector+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+PublicandProvateSector+"')]"));
	
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Contracting Entity 1:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+VodafoneEntitiy+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneEntitiy+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Company Number 1:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+CompanyName+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+CompanyName+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Address 1:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+Address+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Address+"')]"));
	
	
	driver.findElement(By.xpath("//span[contains(text(),'Initial Term')]/following::input[@type='text'][1]")).sendKeys("12");
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Effective Date:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EffectiveDate+"')]"));
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Commencement Date:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+CommencmentDate+"')]"));
	
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Benchmarking:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+BenchMarking+"')]")));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BenchMarking+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms (days):')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+PaymentTerms+"')]"));
	

	

	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ContractSupportOffline(By element,String data)
{  
	
	String PhoneNumber= data.split("\\__")[0];
    String AccRegion= data.split("\\__")[1];
    String Sector= data.split("\\__")[2];
	String BusinessChannel= data.split("\\__")[3];
	String ApprovalStatus= data.split("\\__")[4];
	String FurtherDetails=data.split("\\__")[5];
	String ExistingContract=data.split("\\__")[6];
	String TermsUSed=data.split("\\__")[7];
	String DocumentType=data.split("\\__")[8];
	String NegotiateCountry=data.split("\\__")[9];
	String NegotiateLanguage=data.split("\\__")[10];
	String Territory=data.split("\\__")[11];
	String Offterritory=data.split("\\__")[12];
	String ICCScope=data.split("\\__")[13];
	String GoverningLaw=data.split("\\__")[14];
	String PublicandProvateSector=data.split("\\__")[15];
	String CompanyName=data.split("\\__")[16];
	String Address=data.split("\\__")[17];
	String IntialTerm=data.split("\\__")[18];
	String BenchMarking=data.split("\\__")[19];
	
	String PaymentTerms=data.split("\\__")[20];
	
	
	
	try{
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  Thread.sleep(5000);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][1]")));
			
		
		
		driver.findElement(By.xpath("//span[contains(text(),'Full Name:')]/following::input[@type='text'][4]")).sendKeys(PhoneNumber);
		
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Sector:')]/following::a[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Sector+"')]"));
		
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Channel:')]/following::a[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BusinessChannel+"')]"));
  	
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Region:')]/following::a[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccRegion+"')]"));
  	
  	
  	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Status:')]/following::button[1]"));
  	Thread.sleep(3000);
  	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ApprovalStatus+"')]"));
  	Thread.sleep(3000);
  	driver.findElement(By.xpath("//span[contains(text(),'Provide further details relevant to your request:')]/following::textarea")).sendKeys(FurtherDetails);
		
  	Thread.sleep(5000);
  	
  	
  	
     KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(10000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Existing Contract:')]")));

	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Existing Contract:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ExistingContract+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+TermsUSed+"')]")));
	
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+TermsUSed+"')]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Document Type:')]/following::button[1]"));
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+DocumentType+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+DocumentType+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Country:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+NegotiateCountry+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+NegotiateCountry+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Negotiation Language:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+NegotiateLanguage+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+NegotiateLanguage+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies):')]/following::button[1]"));
	Thread.sleep(4000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+Territory+"')]/preceding::input[1]")));
	KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+Territory+"')]/preceding::input[1]"));
	
	
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'ICCs In Scope:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+ICCScope+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ICCScope+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Governing Law:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+GoverningLaw+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+GoverningLaw+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Off-Footprint Territory(ies)')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+Offterritory+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Offterritory+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Public or Private Sector:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+PublicandProvateSector+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+PublicandProvateSector+"')]"));
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Company Number 1:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+CompanyName+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+CompanyName+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Registered Address 1:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+Address+"')]")));
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Address+"')]"));
	
	
	driver.findElement(By.xpath("//span[contains(text(),'Initial Term')]/following::input[@type='text'][1]")).sendKeys(IntialTerm);
	
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Benchmarking:')]/following::button[1]"));
	Thread.sleep(3000);
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(text(),'"+BenchMarking+"')]")));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BenchMarking+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms (days):')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+PaymentTerms+"')]"));
	

	

	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean UncheckManager(By element,String data){  
	
	
	try{

		Actions action=new Actions(driver);
		WebElement Activity=driver.findElement(By.xpath("//a[text()='Back Office']"));
		action.moveToElement(Activity).click().build().perform();
		
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Thread.sleep(3000);
		WebElement Case=driver.findElement(By.xpath("//a[text()='Workflow']"));
		action.moveToElement(Case).click().build().perform();
		Thread.sleep(5000);
		System.out.println("Before Arrow");
		KeywordsCoreFunctions.click(By.xpath(".//span/strong[text()='Workflows Groups & Users'][1]/following::div[1]"));
		System.out.println("After Arrow");
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//td[text()='In Triage'][1]/following::a[1]"));
		System.out.println("After Arrow");
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//td[text()='In Triage'][1]/following::ul[@class='dropdown-menu dropdown-menu-right'][1]/li[1]/a[1]/span"));
		
		Thread.sleep(10000);
		int Count=KeywordsCoreFunctions.driver.findElements(By.xpath("//a[contains(text(),'In Triage')]/following::table[2]/tbody/tr/td[4]/input")).size();
		System.out.println(Count);
		Thread.sleep(5000);
		for(int i=2;i<=Count+1;i++)
		{
			System.out.println(i);
			Thread.sleep(4000);
			KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'In Triage')]/following::table[2]/tbody/tr["+i+"]/td[4]/input"));
			String parent=driver.getWindowHandle();
			Thread.sleep(3000);
			String Child=driver.getWindowHandle();
			driver.switchTo().window(Child);
			KeywordsCoreFunctions.click(By.xpath(".//*[@id='informationDialog']/div/div/div[2]/div[1]"));
			
			driver.switchTo().window(parent);
		}
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
return true;
}
public static boolean ValidateContractForm(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Contract_Support.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			System.out.println("Field is present");
    			document.close();
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateCaseRootForm(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Customer_Entity_Form_(Case_Root).pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			System.out.println("Field is present");
    			document.close(); 
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    		
    	}
    
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateContractFormUK(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Request_Form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			System.out.println("Field is present");
    			document.close();
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateConsentFormUK(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	String ReqTyp= data.split("\\__")[2];
	String ReqTyp1= ReqTyp.replaceAll(" ", "_");
	System.out.println(ReqTyp1);
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//"+ReqTyp1+".pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateSelfServe(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Self_Serve_NDA_Form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }

public static boolean ValidateUPSC(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Upload_Signed_Contract.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }


public static boolean ValidateVodafoneFormUK(By element,String data){
	
	String CompRegistration= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		//KeywordsCoreFunctions.click(By.xpath("//input[@type='checkbox']"));
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='Preview']")));
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Vodafone_Mutual_NDA.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(CompRegistration)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean CounterSignature(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String CustName= data.split("\\__")[0];
	String GC= data.split("\\__")[1];
	String VodaEntity= data.split("\\__")[2];
	String AccManLead= data.split("\\__")[3];
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_UKGroup']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+GC+"')]"));
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Customer Name:')]/following::input[@type='text'][1]")).sendKeys(CustName);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Account Manager/Lead:')]/following::input[@type='text'][1]")).sendKeys(AccManLead);
		
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_VodafoneEntity']/span"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodaEntity+"')]"));
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(5000);
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CaseCreatedSearch(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String CaseID= data.split("\\__")[0];
	
	
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Search']"));
		Thread.sleep(10000);
    	driver.findElement(By.xpath("//input[@type='text']")).sendKeys(CaseID);
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='MainContent_lnkBasicSearch']"));
    	Thread.sleep(10000);
    boolean returnCaseid=KeywordsCoreFunctions.isdisplayed(By.xpath("//a[text()='"+CaseID+"']"));
	
	if(returnCaseid==true){
		
		
		return true;
	}
	
	else{
		
		return false;
	}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean ContractTemplateLibrary(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String TemplateName=data.split("\\__")[0];
	String CompanyName=data.split("\\__")[1];
	String CompRegNumber=data.split("\\__")[2];
	String CompanyRegion=data.split("\\__")[3];
	String Currency=data.split("\\__")[4];
	String MinSpent=data.split("\\__")[5];
	String MinSubTerm=data.split("\\__")[6];
	String BaseLineSub=data.split("\\__")[7];
	String ResignCredit=data.split("\\__")[8];
	String SubsidyValuePerSub=data.split("\\__")[9];
	String TechFund=data.split("\\__")[10];
	String InVoiceCredit=data.split("\\__")[11];
	String VGEDirectca=data.split("\\__")[12];
	String CoverageFund=data.split("\\__")[13];
	String BillingFrequency=data.split("\\__")[14];
	String VGEInvoiceTerritory=data.split("\\__")[15];
	String VodafoneAnalyticsTerritory=data.split("\\__")[16];
	String RegAddress=data.split("\\__")[17];
	try{
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Template Library']"));
		
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),TemplateName);
		Thread.sleep(5000);
		System.out.println(TemplateName.contains("ICC VGED"));
		
		if(TemplateName.contains("MSA v7")){
		
		
		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name')]/following::input[1]"), CompanyName);
		
		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), CompRegNumber);
		
		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"), CompanyRegion);
		KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), RegAddress);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		return true;
		}
		else if(TemplateName.contains("ICC VGED")){
			
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), CompanyName);
			
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"), CompRegNumber);
			
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"), CompanyRegion);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Currency')]/following::input[1]"), Currency);
			
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Spend Commitment:')]/following::input[1]"), MinSpent);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Subscription Term:')]/following::input[1]"), MinSubTerm);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Baseline Subscriptions:')]/following::input[1]"), BaseLineSub);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"), ResignCredit);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), SubsidyValuePerSub);
			
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"), TechFund);
			KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"), InVoiceCredit);
			//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"), VGEDirectca);
			JavascriptExecutor js = (JavascriptExecutor)driver;
	        
	        WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"));
	        
	        js.executeScript("arguments[0].setAttribute('value', '" + VGEDirectca+"')", DateField);
			//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"), CoverageFund);
WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"));
	        
	        js.executeScript("arguments[0].setAttribute('value', '" + CoverageFund+"')", DateField1);
			
			KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BillingFrequency+"')]"));
			
			KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'VGE Invoice Reporting Portal Territory(ies):')]/following::button[1]"));
			Thread.sleep(3000);
			//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VGEInvoiceTerritory+"')]"));
			KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+VGEInvoiceTerritory+"')]/preceding::input[1]"));
			KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Spend Analytics Territory(ies):')]/following::button[1]"));
			
			Thread.sleep(3000);
			//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneAnalyticsTerritory+"')]"));
			KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+VodafoneAnalyticsTerritory+"')]/preceding::input[1]"));
			
			
			KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
			Thread.sleep(5000);
			KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
			
			return true;
			
			
		}
		else{
			System.out.println("Failed to enter Details");
		return false;	
		}
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	

}
public static boolean ContractHITForm(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	try{
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate HIT Form']")));
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate HIT Form']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"HIT Form");

		Thread.sleep(3000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(3000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(3000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ClickonCase(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String CaseName=data.split("\\__")[0];
	
	try{
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[@class='cardsdiv'][2]/div/a/div/div[@class='workspaceCardTitleCenter ChildCaseHeader']"));
		
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ContractAssignEsignature(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String User=data.split("\\__")[0];
	
	try{
		Thread.sleep(3000);
		  WebDriverWait wait = new WebDriverWait(driver, 50);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Recipient List')]")));
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recipient List')]/following::button[1]"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+User+"')]"));
		
		Thread.sleep(5000);
		//KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Recipient List')]/following::Select"),User);

		Thread.sleep(3000);
		
		KeywordsCoreFunctions.click(By.xpath("//div/div/a[text()='Submit']"));
		
		
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ContractStoretoRepositoryUK(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String Account=data.split("\\__")[0];
	String Template=data.split("\\__")[1];
	String Reference=data.split("\\__")[2];
	try{
		  WebDriverWait wait = new WebDriverWait(driver, 50);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[contains(text(),'Repository')]")));
		KeywordsCoreFunctions.click(By.xpath("//div/a[contains(text(),'Repository')]"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Select Account')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Account+"')]"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[text()='Select Template']/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Template+"')]"));
		Thread.sleep(4000);
		KeywordsCoreFunctions.type(By.xpath("//div/a[text()='Submit']/preceding::input[1]"), Reference);	
		String parent=driver.getWindowHandle();
	       KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
	       
	       
	       
	       try {
				Thread.sleep(10000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	     String Child=driver.getWindowHandle();
	     driver.switchTo().window(Child);
	     KeywordsCoreFunctions.click(By.xpath("//div/div[1]/div[1]/div/div[2]/div[@class='close closepop']"));
	     
	     
	     driver.switchTo().window(parent);
	     //ReportThis.CustReport("Contract send to repository","Contract send to repository<br>"+" Data: Group Enterprise Contracts Repository"+" Data: Group Contract Summary Form - Contract Support"+" Data: ABC and Vodafone-Template-JUL/17"+KeywordsCoreFunctions.Test_data,"Pass");
	      
		
	     
	     
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ContractStoretoRepository(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String Account=data.split("\\__")[0];
	String Template=data.split("\\__")[1];
	String Reference=data.split("\\__")[2];
	try{
		  WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Store Contract To Repository']")));
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Store Contract To Repository']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Select Account')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Account+"')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[text()='Select Template']/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Template+"')]"));
		Thread.sleep(4000);
		KeywordsCoreFunctions.type(By.xpath("//div/a[text()='Submit']/preceding::input[1]"), Reference);	
		String parent=driver.getWindowHandle();
	       KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Submit']"));
	       
	       
	       
	       try {
				Thread.sleep(10000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	     String Child=driver.getWindowHandle();
	     driver.switchTo().window(Child);
	     KeywordsCoreFunctions.click(By.xpath("//div/div[1]/div[1]/div/div[2]/div[@class='close closepop']"));
	     
	     
	     driver.switchTo().window(parent);
	     //ReportThis.CustReport("Contract send to repository","Contract send to repository<br>"+" Data: Group Enterprise Contracts Repository"+" Data: Group Contract Summary Form - Contract Support"+" Data: ABC and Vodafone-Template-JUL/17"+KeywordsCoreFunctions.Test_data,"Pass");
	      
		
	     
	     
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}

public static boolean GenrateSCFForm(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String ApprovalType=data.split("\\__")[0];
	String Date1=data.split("\\__")[1];
	String Sanctions=data.split("\\__")[2];
	String InfoClassification=data.split("\\__")[3];
	try{
		
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Smart Contract Form");

		Thread.sleep(3000);

		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Type')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ApprovalType+"')]"));
		JavascriptExecutor js = (JavascriptExecutor)driver;
        
        WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'Approval Date')]/following::input[1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + Date1+"')", DateField);
		
        KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Sanctions+"')]"));
		
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'No')]"));
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification:')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+InfoClassification+"')]"));
		
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]/following::button[1]")));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'No')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'N/A')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[2]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[2]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[2]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[2]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lawyer Approval Confirmation?')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Yes')]"));
		
	
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		Thread.sleep(5000);
	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		Thread.sleep(5000);
		
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CaseContractLegal(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
			
			
			
			
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Accept Request']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}

public static boolean CloseRequest(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		String spec = data.split("\\__")[0];
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
			
			
			
			
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Close Request']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Select Status')]/following::button[1]"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//li[text()='"+spec+"']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CloseContract(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		String spec = data.split("\\__")[0];
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
			
			
			
			
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Close Contract']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Select Status')]/following::button[1]"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//li[text()='"+spec+"']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CaseContractTemplateContract(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String Template= data.split("\\__")[0];
	
	String CPID= data.split("\\__")[1];
	String NoticeEm= data.split("\\__")[2];
	String Address= data.split("\\__")[3];
	String DueDate= data.split("\\__")[4];
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//div/ul/li/a[text()='Template Library']"));
		
		
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"), Template);
				Thread.sleep(10000);
   
				
				KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Corporate ID:')]/following::input[@type='text'][1]"), CPID);	
				KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Notice Email Address')]/following::input[@type='text'][1]"), NoticeEm);	
				KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Notice Address')]/following::textarea"), Address);	
				
				KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Due Date (i.e. xxx from the date of invoice):')]/following::input[@type='text']"), DueDate);	
				KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
				Thread.sleep(10000);
				KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
				Thread.sleep(10000);
				
				KeywordsCoreFunctions.click(By.xpath("//div/ul/li/a[text()='Contract Issued']"));
				Thread.sleep(10000);
				KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
				Thread.sleep(10000);
				
				KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
				
				Thread.sleep(10000);

				KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"), "Smart Contract Form");
						Thread.sleep(20000);
						KeywordsCoreFunctions.Refresh();
						//KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/input[@type='submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
						
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//div/ul/li/a[text()='Action: Onboarding Complete']"));
						Thread.sleep(10000);
						KeywordsCoreFunctions.click(By.xpath("//div/ul/li/a[text()='Action: Onboarding Complete']"));
						
						
						Thread.sleep(10000);
						driver.switchTo().frame("ctl00_MainContent_Task_OnComplete_txtCloseCaseNote_contentIframe");
				    	WebElement Body=driver.findElement(By.tagName("body"));
				    	Body.sendKeys("Created");
				    	driver.switchTo().defaultContent();
				    	
				    	String parent=driver.getWindowHandle();
				    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
				       
						
						
				    	Thread.sleep(10000);
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;

}
public static boolean Logout(By element,String data)
{  
try{
	
	Actions action=new Actions(driver);
	WebElement Activity=driver.findElement(By.xpath(".//span[@id='loginView2_LoginName2']"));
	action.moveToElement(Activity).release(Activity).build().perform();
	
	try {
		Thread.sleep(3000);
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	Thread.sleep(3000);
	WebElement Case=driver.findElement(By.xpath("//a[text()='Sign Out']"));
	action.moveToElement(Case).click().build().perform();
	
	
	
	
	
	
	
}catch (Exception e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
	return false;
}
return true;
}
public static boolean ValidateCounterSignatureForm(By element,String data){
	
	String VodaEntity= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview Countersignature Request Form']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Countersignature_Request_Form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(VodaEntity)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 
public static boolean CaseCounterSignatureLegal(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//li[8]/a[text()='Accept Request']"));
		Thread.sleep(10000);
		driver.switchTo().frame("ctl00_MainContent_Task_OnAccept1_txtAcceptCaseNote_contentIframe");
    	WebElement Body=driver.findElement(By.tagName("body"));
    	Body.sendKeys("Accepted");
    	driver.switchTo().defaultContent();
    	
    	String parent=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CaseCounterSignatureWorkFlow(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/ul/li[8]/a[text()='Status Update: Contract With Internal Signatory']"));
		Thread.sleep(10000);
		driver.switchTo().frame("ctl00_MainContent_Task_OnAccept1_txtAcceptCaseNote_contentIframe");
    	WebElement Body=driver.findElement(By.tagName("body"));
    	Body.sendKeys("Status Updated");
    	driver.switchTo().defaultContent();
    	
    	String parent=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		//Thread.sleep(5000);
		
		//KeywordsCoreFunctions.click(By.xpath("//div/ul/li[8]/a[text()='Status Update: Contract With Internal Signatory']"));
		Thread.sleep(10000);
		driver.switchTo().frame("ctl00_MainContent_Task_OnAccept1_txtAcceptCaseNote_contentIframe");
    	WebElement Body1=driver.findElement(By.tagName("body"));
    	Body1.sendKeys("Contract Signed Updated Updated");
    	driver.switchTo().defaultContent();
    	
    	String parent1=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//div/ul/li/a[text()='Close Request']"));
		Thread.sleep(10000);
		driver.switchTo().frame("ctl00_MainContent_Task_OnComplete_txtCloseCaseNote_contentIframe");
    	WebElement Body2=driver.findElement(By.tagName("body"));
    	Body2.sendKeys("Closing Request");
    	driver.switchTo().defaultContent();
    	
    	String parent2=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean GeneralQuery(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String TelNum= data.split("\\__")[0];
	String Role= data.split("\\__")[1];
	String AccName= data.split("\\__")[2];
	String BusinessArea= data.split("\\__")[3];
	String QuerySupport= data.split("\\__")[4];
	
	try{
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_AdHocCheckedFAQsYesNo']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Confirmed')]"));
    	
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(TelNum);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Role:')]/following::input[@type='text'][1]")).sendKeys(Role);
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_UKGroup']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccName+"')]"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_CustomerAccountType']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BusinessArea+"')]"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_AdHocQueryType']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+QuerySupport+"')]"));
    	
    	driver.findElement(By.xpath("//tr[16]/td/span[contains(text(),'Provide further details of your query:')]/following::textarea[1]")).sendKeys("NA");
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean GeneralQueryGroup(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String TelNum= data.split("\\__")[0];
	String Business= data.split("\\__")[1];
	String Query= data.split("\\__")[2];
	
	try{
		
    	
    	driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_YourTelNo']/following::input")).sendKeys(TelNum);
    	driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::textarea")).sendKeys(Query);
		KeywordsCoreFunctions.click(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_BusinessChannel']/following::button"));
		Thread.sleep(4000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Business+"')]"));
    	KeywordsCoreFunctions.click(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean GeneralQueryGroupNew(By element,String data)
{
	
	try
	{

		String spec = data.split("\\__")[0];
		
		Thread.sleep(5000);
//		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "TelephoneNo":
						 
						driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_YourTelNo']/following::input")).sendKeys(value);
					break;
					
					case "GeneralQueryDetails":
						 
						driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::textarea")).sendKeys(value);
					break;
					case "BusinessChannel":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_BusinessChannel']/following::button"));
						Thread.sleep(4000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "Submit":
						KeywordsCoreFunctions.click(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::input[@type='submit']"));
				    	Thread.sleep(3000);
                      break;

	                default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								//Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean GeneralQueryUKNew(By element,String data)
{
	
	try
	{

		String spec = data.split("\\__")[0];
		
		Thread.sleep(5000);
//		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "TelephoneNo":
						 
						driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_YourTelNo']/following::input[1]")).sendKeys(value);
					break;
					
					case "BusinesArea":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_AreaOfBusinessWorkedIn']/following::button[1]"));
						Thread.sleep(4000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "GeneralQueryType":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryType']/following::button[1]"));
						Thread.sleep(4000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "GeneralQueryDetails":
						driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::textarea")).sendKeys(value);
				    	Thread.sleep(3000);
                      break;
					case "Submit":
						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
				    	Thread.sleep(3000);
                      break;

	                default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								//Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean GeneralQueryUK(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String TelNum= data.split("\\__")[0];
	String Business= data.split("\\__")[1];
	String Query= data.split("\\__")[2];
	String details= data.split("\\__")[3];
	
	try{
		
    	
    	driver.findElement(By.xpath("//div/span[@id='MainContent_MapArea1_cl_lbl_YourTelNo']/following::input[1]")).sendKeys(TelNum);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_AreaOfBusinessWorkedIn']/following::button[1]"));
		Thread.sleep(4000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Business+"')]"));
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryType']/following::button[1]"));
		Thread.sleep(4000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Query+"')]"));
    	driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryDetails']/following::textarea")).sendKeys(details);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		System.out.println("Error message:"+e);
		return false;
	}
	
return true;
}

public static boolean GenrateSCFFormUK(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String ContractCommencment=data.split("\\__")[0];
	String Date1=data.split("\\__")[1];
	String MethodOFSign=data.split("\\__")[2];
	String InfoClassification=data.split("\\__")[3];
	String LegalLead=data.split("\\__")[4];
	String EOT=data.split("\\__")[5];
	String OppType=data.split("\\__")[6];
	String Businesstype=data.split("\\__")[7];
	String CRefer=data.split("\\__")[8];
	String EDRATier=data.split("\\__")[9];
	String TermNoticDays=data.split("\\__")[10];
	try{
		WebDriverWait wait = new WebDriverWait(driver, 15);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate Smart Contract Form']")));
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate Smart Contract Form']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"SCF");

		Thread.sleep(3000);

		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Commencement:')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ContractCommencment+"')]"));
		JavascriptExecutor js = (JavascriptExecutor)driver;
        
       
		
        KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Method of Signature:')]/following::button[1]"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+MethodOFSign+"')]"));
		
		
		
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Legal Lead:')]/following::input[1]"), LegalLead);
		UserDefinedKeywords.javascriptType(By.xpath("//span[contains(text(),'Legal Lead:')]/following::input[1]"), LegalLead);
	    KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enterprise Onboarding team?')]/following::button[1]"));
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EOT+"')]"));
			 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type:')]/following::button[1]"));
				Thread.sleep(3000);
				KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+OppType+"')]"));
				
				
				KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Type:')]/following::button[1]"));
				Thread.sleep(3000);
				KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Businesstype+"')]"));
				
				KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification:')]/following::button[1]"));
				Thread.sleep(3000);
				KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+InfoClassification+"')]"));
				KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Tier:')]/following::button[1]"));
				Thread.sleep(3000);
				KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EDRATier+"')]"));
				//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"), CRefer);
				//UserDefinedKeywords.javascriptType(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"), CRefer);
				//JavascriptExecutor js = (JavascriptExecutor)driver;
		        
		        WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"));
		        
		        js.executeScript("arguments[0].setAttribute('value', '" +CRefer+"')", DateField);
				
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Termination notice period (days):')]")));
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Termination notice period (days):')]/following::input[1]"), TermNoticDays);
		WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Termination notice period (days):')]/following::input[1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" +TermNoticDays+"')", DateField1);
		Thread.sleep(7000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		Thread.sleep(5000);
		
		KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		Thread.sleep(5000);
	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		Thread.sleep(5000);
		
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ScriptExcecuter(By element,String data)
{
	String Name=data;
	
	JavascriptExecutor js = (JavascriptExecutor)driver;
	//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"), Name);
WebElement Name1 = driver.findElement(element);
    
    js.executeScript("arguments[0].setAttribute('value', '" + Name+"')", Name1);
	
	return true;
}
public static boolean ContractSupportUK(By element,String data)
{  
	
	String PhoneNumber= data.split("\\__")[0];

	String AccArea= data.split("\\__")[1];
	String SFOppRefID=data.split("\\__")[2];
	String SFOppRef=data.split("\\__")[3];
	String CompRegNum=data.split("\\__")[4];
	String CompRegAddress=data.split("\\__")[5];
	
	String CompName=data.split("\\__")[6];
	String ContractType=data.split("\\__")[7];
	String TermsUSed=data.split("\\__")[8];
	
	String TContractValue=data.split("\\__")[9];
	
	String FurtherDetails=data.split("\\__")[10];
	String Name=data.split("\\__")[11];
	String Role=data.split("\\__")[12];
	String SalesChannel=data.split("\\__")[13];
	String SForgID=data.split("\\__")[14];
	String CompCountry=data.split("\\__")[15];
	String CorpID=data.split("\\__")[16];
	String NPID=data.split("\\__")[17];
	String SecurityVetting=data.split("\\__")[18];
	String TargetSpend=data.split("\\__")[19];
	String TSubsidyValue=data.split("\\__")[20];
	String MinTerm=data.split("\\__")[21];
	String TermPerConnection=data.split("\\__")[22];
	String KonaOpp=data.split("\\__")[23];
	
	
	try{
		WebDriverWait wait = new WebDriverWait(driver, 20);
		JavascriptExecutor js = (JavascriptExecutor)driver;
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"), Name);
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Is this a KONA')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+KonaOpp+"')]"));
WebElement Name1 = driver.findElement(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + Name+"')", Name1);
		
		
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Role:')]/following::input[@type='text'][1]"), Role);
WebElement Role1 = driver.findElement(By.xpath("//span[contains(text(),'Role:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" +Role+"')", Role1);
		driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(PhoneNumber);
WebElement PN = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" +PhoneNumber+"')", PN);
    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccArea+"')]"));
    	
    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+SalesChannel+"')]"));
  
		Thread.sleep(3000);
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[@type='text'][1]"), SForgID);
		
        
        WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + SForgID+"')", DateField);
        driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]")).sendKeys(SFOppRefID);
        UserDefinedKeywords.javascriptType(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]"),SFOppRefID );
        driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference:')]/following::input[@type='text'][1]")).sendKeys(SFOppRef);
        driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]")).sendKeys(CompRegNum);
        driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]")).sendKeys(CompName);
        driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[@type='text'][1]")).sendKeys(CompCountry);
        //driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea")).sendKeys(CompRegAddress);
       
        try{
    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"), CompRegAddress));
    		{
    			System.out.println("if");
    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
    			
    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT);
    }
    		
    		
    		}catch (Exception e)
    		{
    			System.out.println("Type Exception");
    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
    			
    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT1);
    		}
        
        
        
        
        
        
        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Corporate ID:')]/following::input[@type='text'][1]"), CorpID);
        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'NPID:')]/following::input[@type='text'][1]"), NPID);
        KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'What Government Security Classification has been applied in respect of this contract?')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+SecurityVetting+"')]"));
    	
        KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	  
	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Contract Type:')]")));
		
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Type:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ContractType+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+TermsUSed+"')]"));
	
	//KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_EDRATier']/span/button"));
	//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EDRA+"')]"));
	//driver.findElement(By.xpath("//tr/td/span[contains(text(),'Initial Term:')]/following::input[@type='text'][1]")).sendKeys(IntialTerm);
	driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value (TCV):')]/following::input[@type='text'][1]")).sendKeys(TContractValue);
	driver.findElement(By.xpath("//span[contains(text(),'Target Spend:')]/following::input[@type='text'][1]")).sendKeys(TargetSpend);
	driver.findElement(By.xpath("//span[contains(text(),'Total Subsidy Value:')]/following::input[@type='text'][1]")).sendKeys(TSubsidyValue);
	driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months):')]/following::input[@type='text'][1]")).sendKeys(MinTerm);
	driver.findElement(By.xpath("//span[contains(text(),'Term Per Connection (months):')]/following::input[@type='text'][1]")).sendKeys(TermPerConnection);
	
	
	
	
	
	driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea")).sendKeys(FurtherDetails);
	//Registered Office Address
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
		WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
		
		js.executeScript("arguments[0].scrollIntoView();", PT1);
		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"), CompRegAddress));
		{
			
			System.out.println("In IF");
			
	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT1);
}
		
		
		}catch (Exception e)
		{
			System.out.println(e);
			WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
			
	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT2);
		}
    
	
	
	
	
	
	
	
	
	
	
	
	
	try{
		WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
		
		js.executeScript("arguments[0].scrollIntoView();", PT);
		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"), FurtherDetails));
		{
			System.out.println("if");
			
	        js.executeScript("arguments[0].setAttribute('value','"+FurtherDetails+"')", PT);
}
		
		
		}catch (Exception e)
		{
			System.out.println("Type Exception");
			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
			
	        js.executeScript("arguments[0].setAttribute('value','"+FurtherDetails+"')", PT1);
		}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}

public static boolean CaseRoot(By element,String data)
{  
	try
	{
	String Name= data.split("\\__")[0];

	String SFID= data.split("\\__")[1];
	String GAN=data.split("\\__")[2];
	
        driver.findElement(By.xpath("//div/div/span[contains(text(),'Name:')]/following::input[1]")).sendKeys(Name);
        driver.findElement(By.xpath("//div/div/span[contains(text(),'1SF Org ID:')]/following::input[1]")).sendKeys(SFID);
        driver.findElement(By.xpath("//div/div/span[contains(text(),'Global Account Number (GAN):')]/following::input[1]")).sendKeys(GAN);
       	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CaseRootUK(By element,String data)
{  
	try
	{
	String Name= data.split("\\__")[0];

	String SFID= data.split("\\__")[1];
	String CorpID=data.split("\\__")[2];
	
        driver.findElement(By.xpath("//div/div/span[contains(text(),'Name:')]/following::input[1]")).sendKeys(Name);
        driver.findElement(By.xpath("//div/div/span[contains(text(),'1SF Org ID:')]/following::input[1]")).sendKeys(SFID);
        driver.findElement(By.xpath("//div/div/span[contains(text(),'Corporate ID:')]/following::input[1]")).sendKeys(CorpID);
       	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ContractSupportUKOff(By element,String data)
{  
	
	String PhoneNumber= data.split("\\__")[0];

	String AccArea= data.split("\\__")[1];
	String SFOppRefID=data.split("\\__")[2];
	String SFOppRef=data.split("\\__")[3];
	String CompRegNum=data.split("\\__")[4];
	String CompRegAddress=data.split("\\__")[5];
	
	String CompName=data.split("\\__")[6];
	String ContractType=data.split("\\__")[7];
	String TermsUSed=data.split("\\__")[8];
	
	String TContractValue=data.split("\\__")[9];
	
	String FurtherDetails=data.split("\\__")[10];
	String Name=data.split("\\__")[11];
	String Role=data.split("\\__")[12];
	String SalesChannel=data.split("\\__")[13];
	String SForgID=data.split("\\__")[14];
	String CompCountry=data.split("\\__")[15];
	String CorpID=data.split("\\__")[16];
	String NPID=data.split("\\__")[17];
	String SecurityVetting=data.split("\\__")[18];
	String TargetSpend=data.split("\\__")[19];
	String TSubsidyValue=data.split("\\__")[20];
	String MinTerm=data.split("\\__")[21];
	String TermPerConnection=data.split("\\__")[22];
	
	
	try{
		WebDriverWait wait = new WebDriverWait(driver, 20);
		JavascriptExecutor js = (JavascriptExecutor)driver;
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"), Name);
//WebElement Name1 = driver.findElement(By.xpath("//span[contains(text(),'Name:')]/following::input[@type='text'][1]"));
        
 //       js.executeScript("arguments[0].setAttribute('value', '" + Name+"')", Name1);
		
		
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Role:')]/following::input[@type='text'][1]"), Role);
//WebElement Role1 = driver.findElement(By.xpath("//span[contains(text(),'Role:')]/following::input[@type='text'][1]"));
        
//        js.executeScript("arguments[0].setAttribute('value', '" +Role+"')", Role1);
		driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(PhoneNumber);
WebElement PN = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" +PhoneNumber+"')", PN);
    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccArea+"')]"));
    	
    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+SalesChannel+"')]"));
  
		Thread.sleep(3000);
		//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[@type='text'][1]"), SForgID);
		
        
        WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[@type='text'][1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + SForgID+"')", DateField);
        driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]")).sendKeys(SFOppRefID);
        UserDefinedKeywords.javascriptType(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[@type='text'][1]"),SFOppRefID );
        driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference:')]/following::input[@type='text'][1]")).sendKeys(SFOppRef);
        driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]")).sendKeys(CompRegNum);
        driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]")).sendKeys(CompName);
        driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[@type='text'][1]")).sendKeys(CompCountry);
        //driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea")).sendKeys(CompRegAddress);
       
        try{
    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"), CompRegAddress));
    		{
    			System.out.println("if");
    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
    			
    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT);
    }
    		
    		
    		}catch (Exception e)
    		{
    			System.out.println("Type Exception");
    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
    			
    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT1);
    		}
        
        
        
        
        
        
        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Corporate ID:')]/following::input[@type='text'][1]"), CorpID);
        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'NPID:')]/following::input[@type='text'][1]"), NPID);
        KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'certain level of security vetting?')]/following::button[1]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+SecurityVetting+"')]"));
    	
        KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	  
	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Contract Type:')]")));
		
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Type:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ContractType+"')]"));
	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+TermsUSed+"')]"));
	
	//KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_EDRATier']/span/button"));
	//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+EDRA+"')]"));
	//driver.findElement(By.xpath("//tr/td/span[contains(text(),'Initial Term:')]/following::input[@type='text'][1]")).sendKeys(IntialTerm);
	driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value (TCV):')]/following::input[@type='text'][1]")).sendKeys(TContractValue);
	driver.findElement(By.xpath("//span[contains(text(),'Target Spend:')]/following::input[@type='text'][1]")).sendKeys(TargetSpend);
	driver.findElement(By.xpath("//span[contains(text(),'Total Subsidy Value:')]/following::input[@type='text'][1]")).sendKeys(TSubsidyValue);
	driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months):')]/following::input[@type='text'][1]")).sendKeys(MinTerm);
	driver.findElement(By.xpath("//span[contains(text(),'Term Per Connection (months):')]/following::input[@type='text'][1]")).sendKeys(TermPerConnection);
	
	
	
	
	
	driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea")).sendKeys(FurtherDetails);
	//Registered Office Address
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
		WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
		
		js.executeScript("arguments[0].scrollIntoView();", PT1);
		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"), CompRegAddress));
		{
			
			System.out.println("In IF");
			
	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT1);
}
		
		
		}catch (Exception e)
		{
			System.out.println(e);
			WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
			
	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT2);
		}
    
	
	
	
	
	
	
	
	
	
	
	
	
	try{
		WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
		
		js.executeScript("arguments[0].scrollIntoView();", PT);
		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"), FurtherDetails));
		{
			System.out.println("if");
			
	        js.executeScript("arguments[0].setAttribute('value','"+FurtherDetails+"')", PT);
}
		
		
		}catch (Exception e)
		{
			System.out.println("Type Exception");
			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Provide any further details that are relevant to your request:')]/following::textarea"));
			
	        js.executeScript("arguments[0].setAttribute('value','"+FurtherDetails+"')", PT1);
		}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
	Thread.sleep(5000);
	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}

public static boolean VodafoneReq(By element,String data)
{
	String PhoneNumber= data.split("\\__")[0];
	String AccArea= data.split("\\__")[1];
	String SalesChannel= data.split("\\__")[2];
	String ContractCom= data.split("\\__")[3];
	String CompRegNum= data.split("\\__")[4];
	String CompName= data.split("\\__")[5];
	String CompRegAddress= data.split("\\__")[6];
	String Date= data.split("\\__")[7];
	try
	{
		JavascriptExecutor js = (JavascriptExecutor)driver;
		driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(PhoneNumber);
		WebElement PN = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]"));
		        
		        js.executeScript("arguments[0].setAttribute('value', '" +PhoneNumber+"')", PN);
		    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
		    	Thread.sleep(3000);
		    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccArea+"')]"));
		    	
		    	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
		    	Thread.sleep(3000);
		    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+SalesChannel+"')]"));
		    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Contract Commencement')]/following::button[1]"));
				Thread.sleep(3000);
				KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+ContractCom+"')]"));
			      driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]")).sendKeys(CompRegNum);
			        driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]")).sendKeys(CompName);
			        try{
			        	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
			    		WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
			    		
			    		js.executeScript("arguments[0].scrollIntoView();", PT);
			    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"), CompRegAddress));
			    		{
			    			System.out.println("if");
		    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT);
			    		}
			    		
			    		}
			        catch (Exception e)
			    		{
			    			System.out.println("Type Exception");
			    			System.out.println("Error message: "+e);
	                        WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
			    			
			    	        js.executeScript("arguments[0].setAttribute('value','"+CompRegAddress+"')", PT1);
			    		}
			        driver.findElement(By.xpath("//div/div/span/span[contains(text(),'Effective Date')]/following::input[1]	")).sendKeys(Date);
			        KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
			    	Thread.sleep(5000);
			    	    	
			        
			
	}
	catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
	
}
public static boolean VodafoneReqNew(By element,String data)
{
	
	try
	{

		String spec = data.split("\\__")[0];
		
		Thread.sleep(5000);
//		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "VPA":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'VPA')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "InitialTerm":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Initial Term (months)')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "RevenueShareOption":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Revenue Share Option')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "RelevantApprovals":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Confirm all relevant approvals are in place')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "NDA":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'A Vodafone Partner Agreement can only be entered into if there is a valid NDA')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "ContractCommencement":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Contract Commencement')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					case "Approvals":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Confirm that you have authorisation from the budget holder and all relevant approvals are in place')]/following::button[1]"));
			    		Thread.sleep(3000);
			    		KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					case "RegisteredOfficeAddress":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Registered Office Address')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Registered Office Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "EventName":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Event Name')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'EventName')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Event Name')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Event Name')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "EventDate":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Event Date')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Event Date')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Event Date')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Event Date')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "EventAddress":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Event Address')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Event Address')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Event Address')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Event Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "PromotionalActivity":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Provide full details of the agreed promotional activity and timescales')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Provide full details of the agreed promotional activity and timescales')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Provide full details of the agreed promotional activity and timescales')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Provide full details of the agreed promotional activity and timescales')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "SponsorshipFee":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Sponsorship Fee (exc VAT)')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Sponsorship Fee (exc VAT)')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Sponsorship Fee (exc VAT)')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Sponsorship Fee (exc VAT)')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "CompanyWebsiteURL":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Company Website URL')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Company Website URL')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Company Website URL')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Company Website URL')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "TotalVodafoneExpenditure":
						try{
				    		if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Total Vodafone Expenditure')]/following::input[1]"), value));
				    		{
				    			System.out.println("if");
				    			WebElement PT= driver.findElement(By.xpath("//div/div/span[contains(text(),'Total Vodafone Expenditure')]/following::input[1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    }
				    		
				    		
				    		}catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Total Vodafone Expenditure')]/following::input[1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		Thread.sleep(3000);
					break;
					
					case "CustomerContactName":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Customer Contact Name')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Name')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Customer Contact Name')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Name')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "CustomerContactEmailAddress":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Customer Contact Email Address')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Email Address')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Customer Contact Email Address')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Email Address')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "CustomerContactAddress":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Customer Contact Address')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Address')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Customer Contact Address')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Customer Contact Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "VodafoneContactName":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Name')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Name')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Name')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Name')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "VodafoneContactEmailAddress":
                        try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Email Address')]/following::input[1]"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Email Address')]/following::input[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Email Address')]/following::input[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(),'Vodafone Contact Email Address')]/following::input[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
			    		Thread.sleep(3000);
					break;
					
					case "TelephoneNumber":
						try{
				    		if(KeywordsCoreFunctions.type(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"), value));
				    		{
				    			System.out.println("if");
				    			WebElement PT= driver.findElement(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    }
				    		
				    		
				    		}catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			WebElement PT1= driver.findElement(By.xpath("//div/span[contains(text(),'Telephone Number')]/following::input[1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		Thread.sleep(3000);
					break;
					
					case "PhoneNumber":
						driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(value);
						WebElement PN = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]"));
						        
						        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PN);
					break;
					
					case "AccountArea":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "SalesChannel":
						 
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
				    	Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "ContractCom":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Contract Commencement')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "CompRegNum":
						try{
				    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]"), value));
				    		{
				    			System.out.println("if");
				    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    }
				    		
				    		
				    		}catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		Thread.sleep(3000);		 
					break;
					
					case "CompName":
						try{
				    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]"), value));
				    		{
				    			System.out.println("if");
				    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    }
				    		
				    		
				    		}catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		Thread.sleep(3000);		    		
					break;
					
					case "CompRegAddress":
						 
						try{
				        	KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				    		WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				    		
				    		js.executeScript("arguments[0].scrollIntoView();", PT);
				    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"), value));
				    		{
				    			System.out.println("if");
			    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    		}
				    		
				    		}
				        catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			System.out.println("Error message: "+e);
		                        WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		
					break;
					case "EffectiveDate":
						 
						driver.findElement(By.xpath("//div/div/span/span[contains(text(),'Effective Date')]/following::input[1]	")).sendKeys(value);
			    		
					break;
					
					case "PartnerName":
						 
						try{
				    		if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Partner Name')]/following::input[@type='text'][1]"), value));
				    		{
				    			System.out.println("if");
				    			WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Partner Name')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
				    }
				    		
				    		
				    		}catch (Exception e)
				    		{
				    			System.out.println("Type Exception");
				    			WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Partner Name')]/following::input[@type='text'][1]"));
				    			
				    	        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
				    		}
			    		Thread.sleep(3000);		    		
					break;

					
					case "Submit":
						 
						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
				    	Thread.sleep(5000);
				    	
					break;
	                default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean ValidateGQForm(By element,String data){
	
	String VodaEntity= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview General Query']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//General_Query.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(VodaEntity)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateGQGForm(By element,String data){
	
	String VodaEntity= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//General_Query_Request_Form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(VodaEntity)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean ValidateGQUKForm(By element,String data){
	
	String VodaEntity= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Request_Form.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(VodaEntity)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 
public static boolean ValidateRSGForm(By element,String data){
	
	String VodaEntity= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Request_Signature.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(VodaEntity)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 


public static boolean CaseGQLegal(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//li[8]/a[text()='Accept Request']"));
		Thread.sleep(10000);
		
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CloseFormGQG(By element,String data)
{  
	
	
	
	String querytype= data.split("\\__")[0];
	String querycategory= data.split("\\__")[1];
	String querysolved= data.split("\\__")[2];
	String querycomplexity= data.split("\\__")[3];
	String futureaction= data.split("\\__")[4];
	String answer= data.split("\\__")[5];
	try{
		
		
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryType']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+querytype+"')]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryCategory']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+querycategory+"')]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryHowSolved']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+querysolved+"')]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryComplexity']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+querycomplexity+"')]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryFutureAction']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+futureaction+"')]"));
    	KeywordsCoreFunctions.type(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryAnswerSummary']/following::textarea"),answer);
KeywordsCoreFunctions.click(By.xpath("//input[@value='Next']"));
		
		Thread.sleep(5000);
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CloseFormGQGNew(By element,String data)
{
	WebDriverWait wait = new WebDriverWait(driver,80 );
	try
	{

		String spec = data.split("\\__")[0];
		
		Thread.sleep(5000);
//		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "QueryType":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryType']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "QueryCategory":
						
						wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryCategory']/following::button[1]")));
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryCategory']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "QuerySolved":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryHowSolved']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "QueryComplexity":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryComplexity']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                      break;
					case "FutureAction":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryFutureAction']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                      break;
					case "AnswerSumary":
						KeywordsCoreFunctions.type(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryAnswerSummary']/following::textarea"),value);
                      break;
					case "Submit":
                      KeywordsCoreFunctions.click(By.xpath("//input[@value='Next']"));
              		Thread.sleep(5000);
              		break;

	                default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean CloseFormGQUK(By element,String data)
{  
	
	
	
	String answerable= data.split("\\__")[0];
	String businessrisk= data.split("\\__")[1];
	try{
		
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryFAQsEnoughYesNo']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+answerable+"')]"));
    	Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryBusinessRiskIfNoLegalYesNo']/following::button[1]"));
		Thread.sleep(3000);
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+businessrisk+"')]"));
    	Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
		
		Thread.sleep(5000);
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		System.out.println("Error message:"+e);
		return false;
	}
	
return true;
}
public static boolean CloseFormGQUKNew(By element,String data)
{
	
	try
	{

		String spec = data.split("\\__")[0];
		
		Thread.sleep(5000);
//		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "Answerable":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryFAQsEnoughYesNo']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "BusinessRisk":
						 
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_GeneralQueryBusinessRiskIfNoLegalYesNo']/following::button[1]"));
						Thread.sleep(3000);
				    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "Submit":
						 
						KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						Thread.sleep(5000);
					break;
	                default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean CaseGQWorkFlow(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	String Status= data.split("\\__")[0];
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath("//li/a[text()='Awaiting Futher Information']"));
		Thread.sleep(10000);
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_Task_OnAccept3_ddlAcceptStatus_Arrow']"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+Status+"')]"));
    	Thread.sleep(3000);
    	driver.switchTo().frame("ctl00_MainContent_Task_OnAccept3_txtAcceptCaseNote_contentIframe");
    	WebElement Body=driver.findElement(By.tagName("body"));
    	Body.sendKeys("Information Updated");
    	driver.switchTo().defaultContent();
    	
    	String parent=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
		KeywordsCoreFunctions.click(By.xpath("//li/a[text()='Close Request']"));
		Thread.sleep(3000);
    	driver.switchTo().frame("ctl00_MainContent_Task_OnComplete_txtCloseCaseNote_contentIframe");
    	WebElement Body1=driver.findElement(By.tagName("body"));
    	Body1.sendKeys("Request Closing");
    	driver.switchTo().defaultContent();
    	
    	String parent1=driver.getWindowHandle();
		Thread.sleep(5000);
KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		Thread.sleep(5000);
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean CSA(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String TelNum= data.split("\\__")[0];
	String Role= data.split("\\__")[1];
	String AccName= data.split("\\__")[2];
	String BusinessArea= data.split("\\__")[3];
	String QuerySupport= data.split("\\__")[4];
	
	try{
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_AdHocCheckedFAQsYesNo']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'Confirmed')]"));
    	
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Telephone Number:')]/following::input[@type='text'][1]")).sendKeys(TelNum);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Role:')]/following::input[@type='text'][1]")).sendKeys(Role);
		KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_UKGroup']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+AccName+"')]"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_CustomerAccountType']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+BusinessArea+"')]"));
    	KeywordsCoreFunctions.click(By.xpath(".//*[@id='ctl00_MainContent_MapArea1_cl_ddl_AdHocQueryType']/span/button"));
    	KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+QuerySupport+"')]"));
    	
    	driver.findElement(By.xpath("//tr[16]/td/span[contains(text(),'Provide further details of your query:')]/following::textarea[1]")).sendKeys("NA");
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean XConsentSelfServe(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String JobTitle= data.split("\\__")[0];
	String Name =data.split("\\__")[1];
	String Phonenumber= data.split("\\__")[2];
	String Email= data.split("\\__")[3];
	String CustomerName= data.split("\\__")[4];
	
	try{
	
    	
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Job Title:')]/following::input[@type='text'][1]")).sendKeys(JobTitle);
    	driver.findElement(By.xpath("//tr[7]/td/span[contains(text(),'Name:')]/following::input[@type='text'][1]")).sendKeys(Name);
		
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Contact Number:')]/following::input[@type='text'][1]")).sendKeys(Phonenumber);
    	
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Email Address:')]/following::input[@type='text'][1]")).sendKeys(Email);
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Customer Name:')]/following::input[@type='text'][1]")).sendKeys(CustomerName);
    	
    	
    	
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ValidateXConcernForm(By element,String data){
	
	String JobTitle= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview Consent for Case Study Agreement']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//Consent_for_Case_Study_Agreement.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(JobTitle)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    } 

public static boolean XConcernWorkFlow(By element,String data)
{  
	
	//double Phonenumber=77777777;
	
	
	try{
		
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Documents']"));
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Management']"));
		Thread.sleep(5000);
		
		driver.switchTo().frame("ctl00_MainContent_Task_OnComplete_txtCloseCaseNote_contentIframe");
    	WebElement Body=driver.findElement(By.tagName("body"));
    	Body.sendKeys("ClosingTask");
    	driver.switchTo().defaultContent();
    	
    	String parent=driver.getWindowHandle();
    	KeywordsCoreFunctions.click(By.xpath("//a[text()='Submit']"));
		
		
    	
		
		Thread.sleep(5000);

    
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean XConsentGRR(By element,String data)
{  
	
	//double Phonenumber=77777777;
	String ConsName= data.split("\\__")[0];
	
	
	
	try{
	
    	
    	driver.findElement(By.xpath("//tr/td/span[contains(text(),'Job Title:')]/following::input[@type='text'][1]")).sendKeys(ConsName);
    	DateFormat dateFormat=new SimpleDateFormat("dd/MM/yyyy");
    	Date date=new Date();
    	String Date1=dateFormat.format(date);
    	
    	try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	JavascriptExecutor js = (JavascriptExecutor)driver;
	        
        WebElement DateField = driver.findElement(By.xpath("//tr/td/span[contains(text(),'Date of Event:')]/following::input[1]"));
        
        js.executeScript("arguments[0].setAttribute('value', '" + Date1+"')", DateField);
		
    	
    	
    	
    	
    	KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
    	Thread.sleep(3000);
    	
	
	
	
	}catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	
return true;
}
public static boolean ValidateGRRForm(By element,String data){
	
	String JobTitle= data.split("\\__")[0];
	String FileLocation= data.split("\\__")[1];
	
	try {
		KeywordsCoreFunctions.click(By.xpath("//a[text()='Preview General Release Right Of Publicity Agreement']"));
		try {
			Thread.sleep(10000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	PDDocument document=null;
    	System.out.println("one");
			document=PDDocument.load(new File("D://SWIFT//"+FileLocation+"//General_Release_Right_Of_Publicity_Agreement.pdf"));
		
    	document.getClass();
    	System.out.println("two");
    	if(!document.isEncrypted()){
    		
    		PDFTextStripperByArea stripper=new PDFTextStripperByArea();
    		//System.out.println("three");
    		stripper.setSortByPosition(true);
    		//System.out.println("Four");
    		PDFTextStripper Tstripper=new PDFTextStripper();
    		//System.out.println("Five");
    		String st=Tstripper.getText(document);
    		//System.out.println("six");
    		System.out.println(st);
    		if(st.contains(JobTitle)){
    			
    			return true;
    		}
    		else{
    			System.out.println("notFound");
    			
    			return false;
    		}
    	}
    	
    	
    	}
	catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	return true;
	

		
	
    	
    }
public static boolean UploadOfflineTemplate(By element,String data)
{
	try{
		
		String caseitem = data.split("\\__")[0];
		String document = data.split("\\__")[1];
		String Filepath = data.split("\\__")[2];
	 WebDriverWait waitUntil = new WebDriverWait(driver, 60);
	 waitUntil.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'In Progress')]")));
	 KeywordsCoreFunctions.click(By.xpath("//a[contains(text(),'Template Library')]/following::a[contains(text(),'Upload')]"));
	 Thread.sleep(5000);
	 KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),caseitem);
	 Thread.sleep(5000);
	 driver.findElement(By.xpath("//span[contains(text(), 'Upload Document Name')]/following::input[1]")).sendKeys(document);
	 driver.findElement(By.xpath("//input[@type='file']")).sendKeys(Filepath);
 	Thread.sleep(3000);
	KeywordsCoreFunctions.click(By.xpath("//a[text()='Upload']"));
	}
	catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
		return false;
	}
	 return true;
}
public static boolean AddTemplates(By element,String data)
{
	
	try
	{

		WebElement xpath;
		
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		
		
	
		//waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[contains(text(),'Case Item')]"))); 
		
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Template Library']"));
		
		
		Thread.sleep(20000);

		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),spec);
		Thread.sleep(5000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents(); //companyname
					 
					 String value = secSheet.getCell(j, i).getContents();  //vodafone
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) 
					{
					case "CustomerName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Customer Name:')]")));
						
WebElement custName = driver.findElement(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", custName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	
					case "RegNumber":
WebElement RegNum = driver.findElement(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", RegNum);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CountryofIncorporation":
WebElement COI = driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
					case "CompanyName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Company Name:')]")));
WebElement CompName = driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"), value);
					
					
					break;	
					case "CompanyRegNumber":
						
WebElement CompReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CompanyRegNumber1":
						
						WebElement CompReg1= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[2]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg1);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "ComRegNumber":
						
						WebElement ComReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ComReg);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "CompanyCountryofIncorporation":
WebElement COI1 = driver.findElement(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI1);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
						
					case "Currency":
						
						WebElement DateField2 = driver.findElement(By.xpath("//span[contains(text(),'Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField2);

						break;
						
					case "MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Spend Commitment:')]/following::input[1]"), value);
WebElement DateField3 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField3);
						break;
						
					case "MinimumSubscriptionTerm":
WebElement DateField4 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField4);
						break;
						
					case "BaselineSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Baseline Subscriptions:')]/following::input[1]"), value);
WebElement DateField5 = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField5);
						break;
						
					case "ResignCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"), value);
						
WebElement DateField6 = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField6);
						break;
						
					case "SubsidyValuePerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField7 = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField7);
						
						
						break;
					case "SubsidyPerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
xpath = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", xpath);
						
						
						break;
					case "SubsidyValuePerSubscriptionShallbe":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField18 = driver.findElement(By.xpath("//span[contains(text(),'The subsidy value per Subscription shall be')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField18);
						
						
						break;
						
					case "TechnologyFund":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"), value);
						
WebElement DateField8 = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField8);
						
						
						break;
					case "InvoiceCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"), value);
WebElement DateField9 = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField9);
						
						break;
					case "VGEDirectCarrier":
						
						WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField);
				        break;
					case "CoverageFund":
						JavascriptExecutor js1 = (JavascriptExecutor)driver;
						WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"));
				        
				        js1.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField1);
				        break;
					case "BillingFrequency":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyV":
WebElement BV = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", BV);
				        break;
					case "VGEInvoiceReportingPortalTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'VGE Invoice Reporting Portal Territory(ies):')]/following::button[1]"));
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VGEInvoiceTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "VodafoneSpendAnalyticsTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Spend Analytics Territory(ies):')]/following::button[1]"));
						
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneAnalyticsTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "RegisterdAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField10 = driver.findElement(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField10);
				        break;
					case "CompanyRegisteredAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField11 = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField11);
				        break;
					case "CompanyRegisteredofficeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CFA = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CFA);
				        break;
					
					case "ContractReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CR= driver.findElement(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CR);
				        break;
					case "NoticeEmail":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Email= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Email);
				        break;
					case "NoticeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NA= driver.findElement(By.xpath("//span[contains(text(),'Notice Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NA);
				        break;
					
					case "DueDatePaymentterms":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DPT= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Terms (Days):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DPT);
				        break;
					case "DueDatePaymenttype":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DP= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Type:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DP);
				        break;
					case "EffectiveDate":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ED= driver.findElement(By.xpath("//span[contains(text(),'Effective Date:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ED);
				        break;
					case "Year1MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1);
				        break;
					case "Year2MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2);
				        break;
					case "Year3MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3);
				        break;
				        
				        
				        
					case "ServiceDesciption":
						try{
						if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), value));
						{
							System.out.println("if");
							WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
							
					        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS);
}
						
						
						}catch (Exception e)
						{
							System.out.println("Type Exception");
							WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
							
					        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS);
						}
				        break;
					case "ServiceDesciption1":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea"), value);
WebElement SDS1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
boolean result1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isDisplayed();
boolean result2= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isEnabled();
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
System.out.println(SDS1);			                  
System.out.println(result1);    
System.out.println(result2);  
				                  
				        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS1);
				        
				        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
				        break;
				        
				        
				        
				        
					case "Year1MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 1 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1Spend);
				        break;
					case "Year2MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 2 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2Spend);
				        break;
					case "Year3MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 3 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3Spend);
				        break;
					case "CorpID":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CID= driver.findElement(By.xpath("//span[contains(text(),'Corp ID:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CID);
				        break;
					case "OriginalAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement OAR= driver.findElement(By.xpath("//span[contains(text(),'Original Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", OAR);
				        break;
					case "ReplacingAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RAR= driver.findElement(By.xpath("//span[contains(text(),'Replacing Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RAR);
				        break;
					case "EffectiveDateFullBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Full Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FD);
				        break;
					case "EffectiveDatePartBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Part Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PD);
				        break;
					case "SignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOB= driver.findElement(By.xpath("//span[contains(text(),'Sign on Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOB);
				        break;
					case "PaymentSheduleforSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOB= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule For Sign On Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOB);
				        break;
					case "PaymentSheduleforUKSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Npath= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule for UK Sign-On Bonus')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Npath);
				        break;
					case "ContractCurrencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Currency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "SignOnBonusvalue":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOBv= driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus (value):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOBv);
				        break;
					case "PaymentSheduleforSignOnBonusUK":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOBUK= driver.findElement(By.xpath("//span[contains(text(),'UK Sign-On Bonus Schedule:')]/following::textarea"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOBUK);
				        break;			
						case "PartXSchedule3":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS3= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 3:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS3);
				        break;
					case "PartXSchedule4":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS4= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 4:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS4);
				        break;
					case "CarrierDataFee":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CDF= driver.findElement(By.xpath("//span[contains(text(),'Carrier Data Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CDF);
				        break;
					case "AdditionalAuthorizedUsers":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AAU= driver.findElement(By.xpath("//span[contains(text(),'Number of Additional Authorized Users:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AAU);
				        break;
				        
					case "RenewalTermMonths":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM= driver.findElement(By.xpath("//span[contains(text(),'Renewal Terms (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM);
				        break;
				       
					case "RenewalTermMonth":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM1= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM1);
				        break;  
				        
					case "CommenceBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionTypePerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement STPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", STPT);
				        break;
					case "RecurringCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RC= driver.findElement(By.xpath("//span[contains(text(),'Recurring Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RC);
				        break;
					case "InstallationCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement IC= driver.findElement(By.xpath("//span[contains(text(),'Installation Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", IC);
				        break;
					case "MinMonthlySubscrip":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MMS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Monthly Subscription Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MMS);
				        break;
					case "AppSentry":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App Sentry')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "AppDN":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App DN')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraCoreHosting":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Core Hosting')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraEmailSentryPair":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Email Sentry Pair')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ProfessionalServicePackage":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Professional Service Package')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "FrequencyServiceReviews":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FSR= driver.findElement(By.xpath("//span[contains(text(),'Frequency of Service Reviews')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FSR);
				        break;
					case "NAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NAM= driver.findElement(By.xpath("//span[contains(text(),'NAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NAM);
				        break;
					case "GAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement GAM= driver.findElement(By.xpath("//span[contains(text(),'GAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", GAM);
				        break;
					case "RampUpPeriod":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RUP= driver.findElement(By.xpath("//span[contains(text(),'Ramp Up Period')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RUP);
				        break;
					case "RenewalTerm":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RT= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RT);
				        break;
					case "Licences":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LIC= driver.findElement(By.xpath("//span[contains(text(),'Licences')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LIC);
				        break;
					case "ProfessionalServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS= driver.findElement(By.xpath("//span[contains(text(),'Professional Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS);
				        break;
					case "CommenceFromBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPT);
				        break;
					case "ContractCurrency":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CC= driver.findElement(By.xpath("//span[contains(text(),'Contract Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CC);
				        break;
					case "DedicatedInternetAccessServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DIAS= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - Dedicated Internet Access Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DIAS);
				        break;
					case "ServiceElementPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SET= driver.findElement(By.xpath("//span[contains(text(),'Service Element Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SET);
				        break;
					case "MinimumCallVolumes":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MCV= driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MCV);
				        break;
					case "MinimumSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MS);
				        break;
					case "PartSIPTrunkingService":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SIPT= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - SIP Trunking Service')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SIPT);
				        break;
						
						case "StoragePeriodMonths":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SPM= driver.findElement(By.xpath("//span[contains(text(),'Storage Period (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPM);
					        break;
					        
						case "HostingOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement HO= driver.findElement(By.xpath("//span[contains(text(),'Hosting Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", HO);
					        break;
						case "SMSOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SO= driver.findElement(By.xpath("//span[contains(text(),'SMS Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SO);
					        break;
						case "NMRSetUpFee":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NSF= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NSF);
					        break;
						case "NMRSetUpFeeDr":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "NMRFeeRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NM= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[5]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NM);
					        break; 
						case "NMRFeeRegisteredDevicesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee Registered Devices:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "SMSRecordingServiceCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SRSC= driver.findElement(By.xpath("//span[contains(text(),'SMS Recording Service Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SRSC);
					        break;
						case "InitialNumberofRegisteredDevice":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement INR= driver.findElement(By.xpath("//span[contains(text(),'Initial Number of Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", INR);
					        break;
						case "MinimumRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MRD= driver.findElement(By.xpath("//span[contains(text(),'Minimum Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MRD);
					        break;
						case "LocalVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LVGC= driver.findElement(By.xpath("//span[contains(text(),'Local Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LVGC);
					        break;
						case "AgreementDate":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AD= driver.findElement(By.xpath("//span[contains(text(),'Agreement Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AD);
					        break;
						case "CallRecordingServiceCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRSC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Service Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRSC);
					        break;
						case "CallRecordingHostingCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRHC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Hosting Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRHC);
					        break;
						case "ScheduleServiceTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SST= driver.findElement(By.xpath("//span[contains(text(),'Schedule [XX] - Service Terms')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SST);
					        break;
						case "BaseAgentMaximumAgreedConcurrentVolume":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Base Agent Maximum Agreed Concurrent Volume is')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "BaseAgentoptionsMinimumFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement B= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", B);
					        break;
						case "BaseAgentOnboardingFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement BB= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Onboarding Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", BB);
					        break;
						case "AnyOtherMinimumFloors":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AM= driver.findElement(By.xpath("//span[contains(text(),'Any Other Minimum Floors')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AM);
					        break;
						case "EnhancedFixedOnlyUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced Fixed Only User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedFMCUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						
						case "Thepurposeofthisagreement":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "CustomerBillingAddress":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "DesignatedCountriesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Designated Countries')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "SetupOnetimeCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOT= driver.findElement(By.xpath("//span[contains(text(),'Set up One time Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOT);
					        break;
						case "ApplicationConnectivityMonthlyCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ACM= driver.findElement(By.xpath("//span[contains(text(),'Application & Connectivity Monthly Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", ACM);
					        break;
						case "RevenueShare":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RS= driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RS);
					        break;
						case "DesignatedCountriesV":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DC= driver.findElement(By.xpath("//span[contains(text(),'Designated Countries')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DC);
					        break;
						case "MilestoneInvoicePlan":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MIP= driver.findElement(By.xpath("//span[contains(text(),'Milestone Invoice Plan')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MIP);
					        break;
						case "AppendixtoSchedule3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement S3= driver.findElement(By.xpath("//span[contains(text(),'Appendix [XX] to Schedule 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", S3);
					        break;
						case "AssociatedVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AVGC= driver.findElement(By.xpath("//span[contains(text(),'Associated Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AVGC);
					        break;
						case "textbox":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "dropdown":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					        
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								Thread.sleep(15000);
								wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='submit']")));
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}

public static boolean AddTemplatesNew(By element,String data)
{
	
	try
	{

		WebElement xpath;
		
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		String spec1 = data.split("\\__")[1];
		
		
	
		//waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[contains(text(),'Case Item')]"))); 
		
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Template Library']"));
		
		
		Thread.sleep(20000);

		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),spec);
		Thread.sleep(5000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec1.trim()))
			 {
				 System.out.println(specification);
				 
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents(); //companyname
					 
					 String value = secSheet.getCell(j, i).getContents();  //vodafone
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) 
					{
					case "CustomerName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Customer Name:')]")));
						
WebElement custName = driver.findElement(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", custName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	
					case "RegNumber":
WebElement RegNum = driver.findElement(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", RegNum);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CountryofIncorporation":
WebElement COI = driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
					case "CompanyName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Company Name:')]")));
WebElement CompName = driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"), value);
					
					
					break;	
					case "CompanyRegNumber":
						
WebElement CompReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CompanyRegNumber1":
						
						WebElement CompReg1= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[2]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg1);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "ComRegNumber":
						
						WebElement ComReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ComReg);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "CompanyCountryofIncorporation":
WebElement COI1 = driver.findElement(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI1);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
						
					case "Currency":
						
						WebElement DateField2 = driver.findElement(By.xpath("//span[contains(text(),'Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField2);

						break;
						
					case "MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Spend Commitment:')]/following::input[1]"), value);
WebElement DateField3 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField3);
						break;
						
					case "MinimumSubscriptionTerm":
WebElement DateField4 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField4);
						break;
						
					case "BaselineSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Baseline Subscriptions:')]/following::input[1]"), value);
WebElement DateField5 = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField5);
						break;
						
					case "ResignCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"), value);
						
WebElement DateField6 = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField6);
						break;
						
					case "SubsidyValuePerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField7 = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField7);
						
						
						break;
					case "SubsidyPerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
xpath = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", xpath);
						
						
						break;
					case "SubsidyValuePerSubscriptionShallbe":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField18 = driver.findElement(By.xpath("//span[contains(text(),'The subsidy value per Subscription shall be')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField18);
						
						
						break;
						
					case "TechnologyFund":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"), value);
						
WebElement DateField8 = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField8);
						
						
						break;
					case "InvoiceCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"), value);
WebElement DateField9 = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField9);
						
						break;
					case "VGEDirectCarrier":
						
						WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField);
				        break;
					case "CoverageFund":
						JavascriptExecutor js1 = (JavascriptExecutor)driver;
						WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"));
				        
				        js1.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField1);
				        break;
					case "BillingFrequency":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyV":
WebElement BV = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", BV);
				        break;
					case "VGEInvoiceReportingPortalTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'VGE Invoice Reporting Portal Territory(ies):')]/following::button[1]"));
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VGEInvoiceTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "VodafoneSpendAnalyticsTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Spend Analytics Territory(ies):')]/following::button[1]"));
						
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneAnalyticsTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "RegisterdAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField10 = driver.findElement(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField10);
				        break;
					case "CompanyRegisteredAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField11 = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField11);
				        break;
					case "CompanyRegisteredofficeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CFA = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CFA);
				        break;
					
					case "ContractReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CR= driver.findElement(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CR);
				        break;
					case "NoticeEmail":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Email= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Email);
				        break;
					case "NoticeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NA= driver.findElement(By.xpath("//span[contains(text(),'Notice Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NA);
				        break;
					
					case "DueDatePaymentterms":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DPT= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Terms (Days):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DPT);
				        break;
					case "DueDatePaymenttype":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DP= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Type:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DP);
				        break;
					case "EffectiveDate":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ED= driver.findElement(By.xpath("//span[contains(text(),'Effective Date:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ED);
				        break;
					case "Year1MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1);
				        break;
					case "Year2MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2);
				        break;
					case "Year3MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3);
				        break;
				        
				        
				        
					case "ServiceDesciption":
						try{
						if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), value));
						{
							System.out.println("if");
							WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
							
					        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS);
}
						
						
						}catch (Exception e)
						{
							System.out.println("Type Exception");
							WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
							
					        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS);
						}
				        break;
					case "ServiceDesciption1":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea"), value);
WebElement SDS1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
boolean result1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isDisplayed();
boolean result2= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isEnabled();
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
System.out.println(SDS1);			                  
System.out.println(result1);    
System.out.println(result2);  
				                  
				        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS1);
				        
				        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
				        break;
				        
				        
				        
				        
					case "Year1MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 1 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1Spend);
				        break;
					case "Year2MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 2 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2Spend);
				        break;
					case "Year3MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 3 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3Spend);
				        break;
					case "CorpID":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CID= driver.findElement(By.xpath("//span[contains(text(),'Corp ID:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CID);
				        break;
					case "OriginalAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement OAR= driver.findElement(By.xpath("//span[contains(text(),'Original Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", OAR);
				        break;
					case "ReplacingAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RAR= driver.findElement(By.xpath("//span[contains(text(),'Replacing Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RAR);
				        break;
					case "EffectiveDateFullBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Full Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FD);
				        break;
					case "EffectiveDatePartBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Part Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PD);
				        break;
					case "SignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOB= driver.findElement(By.xpath("//span[contains(text(),'Sign on Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOB);
				        break;
					case "PaymentSheduleforSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOB= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule For Sign On Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOB);
				        break;
					case "PaymentSheduleforUKSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Npath= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule for UK Sign-On Bonus')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Npath);
				        break;
					case "ContractCurrencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Currency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "Location":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Location')]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "SignOnBonusvalue":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOBv= driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus (value):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOBv);
				        break;
					case "PaymentSheduleforSignOnBonusUK":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOBUK= driver.findElement(By.xpath("//span[contains(text(),'UK Sign-On Bonus Schedule:')]/following::textarea"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOBUK);
				        break;			
						case "PartXSchedule3":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS3= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 3:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS3);
				        break;
					case "PartXSchedule4":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS4= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 4:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS4);
				        break;
					case "CarrierDataFee":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CDF= driver.findElement(By.xpath("//span[contains(text(),'Carrier Data Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CDF);
				        break;
					case "AdditionalAuthorizedUsers":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AAU= driver.findElement(By.xpath("//span[contains(text(),'Number of Additional Authorized Users:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AAU);
				        break;
				        
					case "RenewalTermMonths":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM= driver.findElement(By.xpath("//span[contains(text(),'Renewal Terms (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM);
				        break;
				       
					case "RenewalTermMonth":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM1= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM1);
				        break;  
				        
					case "CommenceBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionTypePerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement STPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", STPT);
				        break;
					case "RecurringCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RC= driver.findElement(By.xpath("//span[contains(text(),'Recurring Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RC);
				        break;
					case "InstallationCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement IC= driver.findElement(By.xpath("//span[contains(text(),'Installation Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", IC);
				        break;
					case "MinMonthlySubscrip":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MMS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Monthly Subscription Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MMS);
				        break;
					case "AppSentry":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App Sentry')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "AppDN":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App DN')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraCoreHosting":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Core Hosting')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraEmailSentryPair":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Email Sentry Pair')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ProfessionalServicePackage":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Professional Service Package')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "FrequencyServiceReviews":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FSR= driver.findElement(By.xpath("//span[contains(text(),'Frequency of Service Reviews')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FSR);
				        break;
					case "NAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NAM= driver.findElement(By.xpath("//span[contains(text(),'NAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NAM);
				        break;
					case "GAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement GAM= driver.findElement(By.xpath("//span[contains(text(),'GAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", GAM);
				        break;
					case "RampUpPeriod":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RUP= driver.findElement(By.xpath("//span[contains(text(),'Ramp Up Period')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RUP);
				        break;
					case "RenewalTerm":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RT= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RT);
				        break;
					case "Licences":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LIC= driver.findElement(By.xpath("//span[contains(text(),'Licences')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LIC);
				        break;
					case "ProfessionalServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS= driver.findElement(By.xpath("//span[contains(text(),'Professional Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS);
				        break;
					case "CommenceFromBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPT);
				        break;
					case "ContractCurrency":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CC= driver.findElement(By.xpath("//span[contains(text(),'Contract Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CC);
				        break;
					case "DedicatedInternetAccessServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DIAS= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - Dedicated Internet Access Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DIAS);
				        break;
					case "ServiceElementPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SET= driver.findElement(By.xpath("//span[contains(text(),'Service Element Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SET);
				        break;
					case "MinimumCallVolumes":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MCV= driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MCV);
				        break;
					case "MinimumSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MS);
				        break;
					case "PartSIPTrunkingService":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SIPT= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - SIP Trunking Service')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SIPT);
				        break;
						
						case "StoragePeriodMonths":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SPM= driver.findElement(By.xpath("//span[contains(text(),'Storage Period (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPM);
					        break;
					        
						case "HostingOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement HO= driver.findElement(By.xpath("//span[contains(text(),'Hosting Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", HO);
					        break;
						case "SMSOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SO= driver.findElement(By.xpath("//span[contains(text(),'SMS Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SO);
					        break;
						case "NMRSetUpFee":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NSF= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NSF);
					        break;
						case "NMRSetUpFeeDr":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "NMRFeeRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NM= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[5]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NM);
					        break; 
						case "NMRFeeRegisteredDevicesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee Registered Devices:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "SMSRecordingServiceCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SRSC= driver.findElement(By.xpath("//span[contains(text(),'SMS Recording Service Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SRSC);
					        break;
						case "InitialNumberofRegisteredDevice":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement INR= driver.findElement(By.xpath("//span[contains(text(),'Initial Number of Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", INR);
					        break;
						case "MinimumRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MRD= driver.findElement(By.xpath("//span[contains(text(),'Minimum Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MRD);
					        break;
						case "LocalVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LVGC= driver.findElement(By.xpath("//span[contains(text(),'Local Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LVGC);
					        break;
						case "AgreementDate":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AD= driver.findElement(By.xpath("//span[contains(text(),'Agreement Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AD);
					        break;
						case "CallRecordingServiceCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRSC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Service Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRSC);
					        break;
						case "CallRecordingHostingCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRHC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Hosting Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRHC);
					        break;
						case "ScheduleServiceTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SST= driver.findElement(By.xpath("//span[contains(text(),'Schedule [XX] - Service Terms')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SST);
					        break;
						case "BaseAgentMaximumAgreedConcurrentVolume":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Base Agent Maximum Agreed Concurrent Volume is')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "BaseAgentoptionsMinimumFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement B= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", B);
					        break;
						case "BaseAgentOnboardingFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement BB= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Onboarding Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", BB);
					        break;
						case "AnyOtherMinimumFloors":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AM= driver.findElement(By.xpath("//span[contains(text(),'Any Other Minimum Floors')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AM);
					        break;
						case "EnhancedFixedOnlyUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced Fixed Only User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedFMCUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						
						case "Thepurposeofthisagreement":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "CustomerBillingAddress":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "DesignatedCountriesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Designated Countries')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "SetupOnetimeCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOT= driver.findElement(By.xpath("//span[contains(text(),'Set up One time Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOT);
					        break;
						case "ApplicationConnectivityMonthlyCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ACM= driver.findElement(By.xpath("//span[contains(text(),'Application & Connectivity Monthly Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", ACM);
					        break;
						case "RevenueShare":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RS= driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RS);
					        break;
						case "DesignatedCountriesV":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DC= driver.findElement(By.xpath("//span[contains(text(),'Designated Countries')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DC);
					        break;
						case "MilestoneInvoicePlan":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MIP= driver.findElement(By.xpath("//span[contains(text(),'Milestone Invoice Plan')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MIP);
					        break;
						case "AppendixtoSchedule3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement S3= driver.findElement(By.xpath("//span[contains(text(),'Appendix [XX] to Schedule 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", S3);
					        break;
						case "AssociatedVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AVGC= driver.findElement(By.xpath("//span[contains(text(),'Associated Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AVGC);
					        break;
						case "textbox":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "dropdown":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					        
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								Thread.sleep(15000);
								wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='submit']")));
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}
public static boolean AddSCFDetails(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(5000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Smart Contract Form");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
 				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					case "DocumentSummary":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						Thread.sleep(3000);
WebElement DS = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_DocumentSummary']/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DS);
				        break;
					case "TotalContractValue":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Total Contract Value (€):')]")));
						
WebElement TV = driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TV);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	 
					case "VodafoneFinancialCommitment":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Financial Commitment')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ApprovalType":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Type')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;   
				        
					case "ApprovalDate":
						
WebElement ADD = driver.findElement(By.xpath("//span[contains(text(),'Approval Date')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ADD);
		
					
					break;	
					case "DoesHITApply":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does HIT Apply?')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "HITApprovedBy":
						
						WebElement HITA = driver.findElement(By.xpath("//span[contains(text(),'HIT Approved By')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", HITA);
								
											
											break;
					 case "HITApprovalDate":
							
							WebElement HITD = driver.findElement(By.xpath("//span[contains(text(),'HIT Approval Date')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", HITD);
						break;   
				        
					 case "ContractInvolve":
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any entities or countries subject to Economic Sanctions?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ReasonforContractInvolveEntity":
							
							WebElement R1 = driver.findElement(By.xpath("//span[contains(text(),'Does the Contract involve any entities or countries subject to Economic Sanctions?')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", R1);
						break; 
					 case "ContractInvolveBespokeProducts":
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ReasonforBespokeInvolve":
							
							WebElement R2 = driver.findElement(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", R2);
						break; 
					 case "ApproverName":
							
							WebElement AN = driver.findElement(By.xpath("//div/div[19]/div/span[text()='Approver Name:']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", AN);
						break;
					 case "DateApproved":
							
							WebElement DA = driver.findElement(By.xpath("//div/div[19]/div/span[text()='Date Approved:']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DA);
						break;
					 case "Function":
							
						 KeywordsCoreFunctions.click(By.xpath("//div/div[19]/div/span[text()='Function:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
				        
					 case "NotesAddtionalInformation":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NI = driver.findElement(By.xpath("//span[contains(text(),'Notes or Additional Information')]/following::textarea"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NI);
					        break;
					 case "VodafoneContractingEntity2":
							
							WebElement E1 = driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contracting Entity 2')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", E1);
						break; 
					 case "OtherContractingEntity":
							
							WebElement E2 = driver.findElement(By.xpath("//span[contains(text(),'Other Contracting Entity')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", E2);
						break; 
					 case "ThirdContractingEntity":
							
							WebElement TE = driver.findElement(By.xpath("//span[contains(text(),'Third Contracting Entity')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TE);
						break; 
					 case "MultiParty4":
							
							WebElement MP = driver.findElement(By.xpath("//span[contains(text(),'Multi-Party (4 or more)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", MP);
						break; 
					 case "ParentContractName":
							
							WebElement PCN = driver.findElement(By.xpath("//span[contains(text(),'Parent Contract Name (if applicable)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PCN);
						break; 
					 case "MasterCaseReference":
							
							WebElement MCR = driver.findElement(By.xpath("//span[contains(text(),'Master Case Reference (if applicable)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", MCR);
						break; 
					 case "OfffootprintTerritoriesInScope":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Off-footprint Territories In Scope?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "IsthisaSelfServeDocument":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Is this a Self-Serve Document?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "SelfServeDocumentType":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Self-Serve Document Type')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "GoverningLawIf":
							
							WebElement GL = driver.findElement(By.xpath("//span[contains(text(),'Governing Law If')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", GL);

							break; 
					 case "IfNonStandarddoestheselectedgoverninglaw":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'If Non-Standard, does the selected governing law')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "Jurisdiction":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Jurisdiction')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "InformationClassification":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "Other":
							
						 WebElement Other = driver.findElement(By.xpath("//span[contains(text(),'Other:')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Other);

							break; 
					 case "Non1SFAccountName":
							
						 WebElement NAN = driver.findElement(By.xpath("//span[contains(text(),'Non 1SF Account Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NAN);

							break; 
					 case "Non1SFAccountNumber":
							
						 WebElement NANN = driver.findElement(By.xpath("//span[contains(text(),'Non 1SF Account Number (if applicable)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NANN);

							break; 
					 case "AccountName":
							
						 WebElement AN1 = driver.findElement(By.xpath("//span[contains(text(),'Account Name (Top Level Customer Name)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", AN1);

							break; 
					 case "AccountNumber":
							
						 WebElement ANum = driver.findElement(By.xpath("//span[contains(text(),'Account Number (GAN)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ANum);

							break; 
					 case "1SFOrgIDTopLevelCustomerOrgID":
							
						 WebElement TLC = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID (Top Level Customer Org ID)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TLC);

							break;
					        
					 case "OpportunityLeadFunction":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Lead Function')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "OpportunityType":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "BidTier":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Bid Tier')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "OpportunityReferenceID":
							
						 WebElement ORI = driver.findElement(By.xpath("//span[contains(text(),'Opportunity Reference ID')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ORI);

							break;
					 case "SelfServeQuoteReferenceNumber":
							
						 WebElement SSQR = driver.findElement(By.xpath("//span[contains(text(),'Self Serve Quote Reference Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", SSQR);

							break;
					 case "PricingLead":
							
						 WebElement PL = driver.findElement(By.xpath("//span[contains(text(),'Pricing Lead')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PL);

							break;
							
							
//==============================Next Case USe after every Page====================							
					 case "Submit":
							
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

							break;
							//===================Page2=============================================
					 case "EconomicSanctions":
						 Thread.sleep(6000);
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "BespokeProducts":
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "DoesExclusivityApply":
						 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]")));
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;  
					 case "SpecificLimitationsType1":
						
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 1')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SpecificLimitationsType2":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 2')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SpecificLimitationsType3":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 3')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "SpecificLimitationsType4":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 4')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "SpecificLimitationsandExclusions1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 1')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 
					 case "SpecificLimitationsandExclusions2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 2')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SpecificLimitationsandExclusions3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SpecificLimitationsandExclusions4":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 4')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "AdditionalBespokeProvision":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Additional Bespoke Provision')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;    
					 case "SurvivesifParentContractTerminated":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Survives if Parent Contract Terminated')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EmployeeTransferProvisions":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Employee Transfer Provisions')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalForm":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached1":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[2]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EconomicSanctionsApprovals":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[1]"));
							
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "ApprovalAttached2":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EDRAApprovalEmail":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached3":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "otherapprovalEmail":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached4":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "LawyerApprovalConfirmation":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lawyer Approval Confirmation?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SignatureType":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Signature Type')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SignatoryName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "AdminArchiverName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					        
					 case "ReviewerFullName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "Number Of Copies To Be Printed":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Number Of Copies To Be Printed')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "DoesTheDocumentNeedDating":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does The Document Need Dating?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "IfYesWhereDoesTheDocumentNeedToBeDated":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'If Yes: Where Does The Document Need To Be Dated?')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SendExecutedDocumentBy":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Send Executed Document By')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SendExecutedDocumentTo":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Send Executed Document To')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "Title4":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Send Executed Document To')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break;
					 case "RecipientTelephoneNumber":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Recipient Telephone Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "RecipientEmailAddress":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Recipient Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "NumberOfCopiesToBeSent":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Number Of Copies To Be Sent?')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "ArchiveBoxNumber":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Archive Box Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "ArchiveDate":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Archive Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break;
							
					 case "DoesthisDocumentrequireOnboarding":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 	
					 case "FullName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[3]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
					 case "Department":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[4]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
					 case "EmailAddress":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[5]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
			//========================Page3============================================
					 case "ContractEffectiveDate":
						 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Contract Effective Date')]")));
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Effective Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;  	
					 case "ContractEndDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract End Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;
                   case "ContractFinalSignatureDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Final Signature Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;
                   case "RenewalTerm":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                break;
                   case "ContractNoticePerioddays":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Notice Period (days)')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                              break;
                   case "RenewalType":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Renewal Type')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "Currency":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Currency')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "TerritoryInScope1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break; 
                   case "TerritoryInScope20":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                   case "PrimaryProductorService1a":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1a')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "PrimaryProductorService1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1b')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "PrimaryProductorService1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1c')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "AncillaryProductsorServices1a":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1a')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "AncillaryProductsorServices1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1b')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "AncillaryProductsorServices1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1c')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							break;
                   case "ServiceCommencementDate1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                              break; 
                   case "ServiceCommencementDate1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                            break;
                   case "ServiceCommencementDate1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                            break;
                   case "InitialTerm1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                          break;
                   case "InitialTerm1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "InitialTerm1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "ServiceEndDate1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                   case "ServiceEndDate1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "ServiceEndDate1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "FixedTerm1a":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1a')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "FixedTerm1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1b')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "FixedTerm1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1c')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "RenewalTerm1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break; 
                   case "RenewalTerm1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break; 
                   case "RenewalTerm1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break; 
                   case "ServiceNoticePeriod1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
                   case "ServiceNoticePeriod1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "ServiceNoticePeriod1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "TermsOnExpiry1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
          break;
                   case "TermsOnExpiry1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
				  
                   case "TermsOnExpiry1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1c')]/following::input[5]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
		
                   case "PaymentTerms1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;	  
                   case "IfNonstandardprovidedetails1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'If Non-standard, provide details 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
      break;
				        
                   case "PaymentType1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Type 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "BillingFrequency1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "BillingFrequencyOther1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency Other 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                     break;
                   case "MinimumSpendCommitment1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                   break;
                   case "MinimumAnnualSpendCommitment1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Annual Spend Commitment 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                 break;
                   case "MinimumNoofSubscriptions1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum No. of Subscriptions 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
               break;
                   case "BaselineSubscriptions":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
             break;
                   case "MinimumSubscriptionTerm1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
           break;
                   case "MinimumCallVolumes1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
         break;
                   case "RecoveryCalculationMethod1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation Method 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                          break;
                   case "Benchmarking1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Benchmarking 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                        break;
                   case "ChurnAllowance1":
						 

						 path = driver.findElement(By.xpath("//span[contains(text(),'Churn Allowance % 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
     						 
                             break;
                   case "FairUsageReview1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fair Usage Review 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                       break;
                   case "ICCCoterminous1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'ICC Co terminous 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                     break;
							
                   case "FairUsageReviewPeriodVoice1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Fair Usage Review Period Voice (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
           break;		
					
                   case "FairUsageReviewPeriodData1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Fair Usage Review Period Data (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
         break;	
                   case "InvoiceCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
       break;		
                   case "TechnologyFund1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
     break;
                   case "ResignCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
   break;
                   case "SignOnBonus1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "CoverageFund1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                   case "BackdatedSavings1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "BackdatedtoDate1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated to (date) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break;
                   case "OtherSubsidy":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Other Subsidy')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break;
                   case "MigrationBonus1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Migration Bonus 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
                   case "AirtimeCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Airtime Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "InvoiceCreditStartDate1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit Start Date 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
          break;		
                   case "GuaranteedAnnualSavings1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Guaranteed Annual Savings 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;
                   case "ServiceCredits1":
						 

           						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits 1')]/following::button[1]"));
           								
           							Thread.sleep(3000);
           							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                              break;
                   case "ServiceCreditsNetwork1":
						 

 						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Network 1')]/following::button[1]"));
 								
 							Thread.sleep(3000);
 							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                    break;
                   case "ServiceCreditsCustomerServices1":
						 

      						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Customer Services 1')]/following::button[1]"));
      								
      							Thread.sleep(3000);
      							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                         break;
                   case "DirectSupplyofHardware1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Direct Supply of Hardware 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;
                   case "LeaseType1":
						 

  						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lease Type 1')]/following::button[1]"));
  								
  							Thread.sleep(3000);
  							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                     break;
                   case "ServiceCreditCap1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Credit Cap (Value) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;	
                   case "LeaseAssetFairValue1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Lease Asset Fair Value 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
      break;	
                   case "FinanceCharge1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Finance Charge 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
    break;		
		//===========================================Page 4================================================================					
                   case "PortfolioCategory":
						 
                	   wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Portfolio Category')]")));
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Portfolio Category')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;	
                   case "TerritoryInScope2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break; 
                 case "TerritoryInScope102":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "TerritoryInScope202":
						
					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 2')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						break;
							
                 case "PrimaryProductorService":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product(s) or Service(s)')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "PrimaryProductorServiceA2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services (A) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "PrimaryProductorServiceB2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
							
                 case "ServiceCommencementDate":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                case "InitialTerm":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                case "ServiceEndDate":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                     break;
                case "RenewalTermmonths":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                case "ServiceNoticePeriod":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days)')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                   break;
							
                case "FixedTerm2":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 2')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
              break;	
                case "IfNonStandardprovidedetails2":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'If Non-Standard, provide details 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break;
							
               case "PaymentTermsdays":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
             break;	
               case "PaymentType":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Type')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
           break;	
               case "BillingFrequency":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
           break;	
           
           
               case "BillingFrequencyOther":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency Other')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break;
               case "MinimumSpendCommitment":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "MinimumNoOfSubscriptions":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum No. Of Subscriptions')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "MinimumCallVolumes":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "RecoveryCalculationMethod":
					 
            	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation Method')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
            break;
               case "BackdatedSavings":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
             case "Backdatedtodate2":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated to (date) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
             case "OtherInvestment":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Other Investment')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
           
             case "ServiceCreditsNetwork":
				 
          	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Network')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
          break;
             case "ServiceCreditsCustomerServices":
				 
            	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Customer Services')]/following::button[1]"));
  					
  					Thread.sleep(3000);
  					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
            break;
             case "LeaseType":
				 
          	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lease Type')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
          break;
         
             case "ServiceCreditCapValue2":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Service Credit Cap (Value)')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
             case "LeaseAssetFairValue":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Lease Asset Fair Value')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
             case "FinanceCharge":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Finance Charge')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
           
        //=================page5=======================================================================
        
  case "AncillaryProductsorServicesB3":
	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 3')]")));
				 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 3')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
  case "TerritoryInScope3":
		
		 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 3')]/following::button[1]"));
				
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
			break; 
case "TerritoryInScope103":
		
		 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 3')]/following::button[1]"));
				
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
			break;
case "TerritoryInScope203":
		
	 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 3')]/following::button[1]"));
			
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
		break;
           
case "AnnualMinimumSpendCommitment":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Annual Minimum Spend Commitment')]/following::input[1]"));
    
       js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;   
case "BaselineSubscriptionsn":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;  
case "MinimumSubscriptionsTermmonths3":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions Term (months) 3')]/following::input[1]"));
  
     js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break; 
case "BackdatedSavingstodate3":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings to (date) 3')]/following::input[1]"));
 
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break; 
    
  // ======================Page6============================  ================================
case "AncillaryProductsorServicesB4":
	 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 4')]")));
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 4')]/following::input[1]"));
    
       js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope4":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 4')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope104":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 4')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope204":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 4')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "VodafoneBillingEntities4":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Billing Entities 4')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;						
							
case "MinimumSubscriptionsTermmonths4":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term (months) 4')]/following::input[1]"));
 
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;		
case "RevenueShare4":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%) 4')]/following::input[1]"));

   js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
//=================pAGe7===================================================================
case "AncillaryProductsorServicesB5":
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 5')]")));
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 5')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope5":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 5')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope105":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 10) 5')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope205":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 20) 5')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
//====================Page8=================================================================================
case "AncillaryProductsorServicesB6":
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 6')]")));
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 6')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope6":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 6')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope106":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 10) 6')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope206":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 20) 6')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;

case "EquipmentRefresh":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Equipment Refresh')]/following::input[1]"));
  
     js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
//=============================Page9===============================

case "StepIn":
	 Thread.sleep(20000);
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Step In')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "DelayPaymentsMilestoneCredits":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Delay Payments / Milestone Credits')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break; 
case "ServiceReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break; 
case "SLAReporting":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'SLA Reporting')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "DedicatedServicePersonnel":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Dedicated Service Personnel')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "MaterialSubcontractors":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Material Subcontractors')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "InnovationFund":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Innovation Fund')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ContinualImprovementPlan":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Continual Improvement Plan')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "UsageReporting":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Usage Reporting')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "CostofSalesElements":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Cost of Sales Elements')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ExitPlanCommitments":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Exit Plan Commitments')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ChangeManagement":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Change Management')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "FinancialReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Financial Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "CustomerSatisfactionSurveyFindingsReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Customer Satisfaction Survey Findings Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "BudgetPlansandForecastingReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Budget Plans and Forecasting Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ScheduledChangeRegister":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Scheduled Change Register')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "EfficiencySavings":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Efficiency Savings')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "GrossSavingsCommitmentsValue":
	 
	path = driver.findElement(By.xpath("//span[contains(text(),'Gross Savings Commitments Value')]/following::input[1]"));
	  
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "PriceReviewsFrequencyMonths":
	 
	path = driver.findElement(By.xpath("//span[contains(text(),'Price Reviews (non-FUR) Frequency (Months)')]/following::input[1]"));
	  
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
default:
	System.out.println("in the defaultt function"+charc);
	result = false;
	break;
}


 }
 
	catch (Exception e) {
		System.out.println("In Exception: "+charc+"Error message:"+e);
		result = false;
	}
						}
					 
					 
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
 				
 				 
					 if(result)
						{
						 Thread.sleep(15000);
								System.out.println("Capturing Result");
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								Thread.sleep(15000);
								 if(spec!="Smart Contract Form RSG")
								 {
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								 }
								return true;
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
 				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}
public static boolean AddSCFDetails1(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(5000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Smart Contract Form");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
 				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					case "DocumentSummary":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						Thread.sleep(3000);
WebElement DS = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_DocumentSummary']/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DS);
				        break;
					case "TotalContractValue":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Total Contract Value (€):')]")));
						
WebElement TV = driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TV);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	 
					case "VodafoneFinancialCommitment":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Financial Commitment')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ApprovalType":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Approval Type')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;   
				        
					case "ApprovalDate":
						
WebElement ADD = driver.findElement(By.xpath("//span[contains(text(),'Approval Date')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ADD);
		
					
					break;	
					case "DoesHITApply":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does HIT Apply?')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "HITApprovedBy":
						
						WebElement HITA = driver.findElement(By.xpath("//span[contains(text(),'HIT Approved By')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", HITA);
								
											
											break;
					 case "HITApprovalDate":
							
							WebElement HITD = driver.findElement(By.xpath("//span[contains(text(),'HIT Approval Date')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", HITD);
						break;   
				        
					 case "ContractInvolve":
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any entities or countries subject to Economic Sanctions?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ReasonforContractInvolveEntity":
							
							WebElement R1 = driver.findElement(By.xpath("//span[contains(text(),'Does the Contract involve any entities or countries subject to Economic Sanctions?')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", R1);
						break; 
					 case "ContractInvolveBespokeProducts":
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ReasonforBespokeInvolve":
							
							WebElement R2 = driver.findElement(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", R2);
						break; 
					 case "ApproverName":
							
							WebElement AN = driver.findElement(By.xpath("//div/div[19]/div/span[text()='Approver Name:']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", AN);
						break;
					 case "DateApproved":
							
							WebElement DA = driver.findElement(By.xpath("//div/div[19]/div/span[text()='Date Approved:']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DA);
						break;
					 case "Function":
							
						 KeywordsCoreFunctions.click(By.xpath("//div/div[19]/div/span[text()='Function:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
				        
					 case "NotesAddtionalInformation":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NI = driver.findElement(By.xpath("//span[contains(text(),'Notes or Additional Information')]/following::textarea"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NI);
					        break;
					 case "VodafoneContractingEntity2":
							
							WebElement E1 = driver.findElement(By.xpath("//span[contains(text(),'Vodafone Contracting Entity 2')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", E1);
						break; 
					 case "OtherContractingEntity":
							
							WebElement E2 = driver.findElement(By.xpath("//span[contains(text(),'Other Contracting Entity')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", E2);
						break; 
					 case "ThirdContractingEntity":
							
							WebElement TE = driver.findElement(By.xpath("//span[contains(text(),'Third Contracting Entity')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TE);
						break; 
					 case "MultiParty4":
							
							WebElement MP = driver.findElement(By.xpath("//span[contains(text(),'Multi-Party (4 or more)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", MP);
						break; 
					 case "ParentContractName":
							
							WebElement PCN = driver.findElement(By.xpath("//span[contains(text(),'Parent Contract Name (if applicable)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PCN);
						break; 
					 case "MasterCaseReference":
							
							WebElement MCR = driver.findElement(By.xpath("//span[contains(text(),'Master Case Reference (if applicable)')]/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", MCR);
						break; 
					 case "OfffootprintTerritoriesInScope":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Off-footprint Territories In Scope?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "IsthisaSelfServeDocument":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Is this a Self-Serve Document?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "SelfServeDocumentType":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Self-Serve Document Type')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "GoverningLawIf":
							
							WebElement GL = driver.findElement(By.xpath("//span[contains(text(),'Governing Law If')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", GL);

							break; 
					 case "IfNonStandarddoestheselectedgoverninglaw":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'If Non-Standard, does the selected governing law')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "Jurisdiction":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Jurisdiction')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "InformationClassification":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "Other":
							
						 WebElement Other = driver.findElement(By.xpath("//span[contains(text(),'Other:')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Other);

							break; 
					 case "Non1SFAccountName":
							
						 WebElement NAN = driver.findElement(By.xpath("//span[contains(text(),'Non 1SF Account Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NAN);

							break; 
					 case "Non1SFAccountNumber":
							
						 WebElement NANN = driver.findElement(By.xpath("//span[contains(text(),'Non 1SF Account Number (if applicable)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NANN);

							break; 
					 case "AccountName":
							
						 WebElement AN1 = driver.findElement(By.xpath("//span[contains(text(),'Account Name (Top Level Customer Name)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", AN1);

							break; 
					 case "AccountNumber":
							
						 WebElement ANum = driver.findElement(By.xpath("//span[contains(text(),'Account Number (GAN)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ANum);

							break; 
					 case "1SFOrgIDTopLevelCustomerOrgID":
							
						 WebElement TLC = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID (Top Level Customer Org ID)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", TLC);

							break;
					        
					 case "OpportunityLeadFunction":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Lead Function')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "OpportunityType":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "BidTier":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Bid Tier')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "OpportunityReferenceID":
							
						 WebElement ORI = driver.findElement(By.xpath("//span[contains(text(),'Opportunity Reference ID')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ORI);

							break;
					 case "SelfServeQuoteReferenceNumber":
							
						 WebElement SSQR = driver.findElement(By.xpath("//span[contains(text(),'Self Serve Quote Reference Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", SSQR);

							break;
					 case "PricingLead":
							
						 WebElement PL = driver.findElement(By.xpath("//span[contains(text(),'Pricing Lead')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PL);

							break;
							
							
//==============================Next Case USe after every Page====================							
					 case "Submit":
							
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

							break;
							//===================Page2=============================================
					 case "EconomicSanctions":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "BespokeProducts":
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does the Contract involve any Bespoke Products or Services?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "DoesExclusivityApply":
						 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]")));
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does Exclusivity Apply?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;  
					 case "SpecificLimitationsType1":
						
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 1')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SpecificLimitationsType2":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 2')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SpecificLimitationsType3":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 3')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "SpecificLimitationsType4":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions (Type) 4')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "SpecificLimitationsandExclusions1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 1')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 
					 case "SpecificLimitationsandExclusions2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 2')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SpecificLimitationsandExclusions3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SpecificLimitationsandExclusions4":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Specific Limitations and Exclusions 4')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "AdditionalBespokeProvision":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Additional Bespoke Provision')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;    
					 case "SurvivesifParentContractTerminated":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Survives if Parent Contract Terminated')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EmployeeTransferProvisions":
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Employee Transfer Provisions')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalForm":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached1":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'HIT Approval Form?')]/following::button[2]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EconomicSanctionsApprovals":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[1]"));
							
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
							
					 case "ApprovalAttached2":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Economic Sanctions Approvals?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "EDRAApprovalEmail":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached3":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Approval Email?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "otherapprovalEmail":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "ApprovalAttached4":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Other Approval Emails?')]/following::button[2]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
					 case "LawyerApprovalConfirmation":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lawyer Approval Confirmation?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SignatureType":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Signature Type')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SignatoryName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress1":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Signatory - Name')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "AdminArchiverName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress2":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Admin - Archiver Name')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					        
					 case "ReviewerFullName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "Tite3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "EmailAddress3":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Reviewer - Full Name (if required)')]/following::input[3]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;  
					 case "Number Of Copies To Be Printed":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Number Of Copies To Be Printed')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;    
					 case "DoesTheDocumentNeedDating":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does The Document Need Dating?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "IfYesWhereDoesTheDocumentNeedToBeDated":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'If Yes: Where Does The Document Need To Be Dated?')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break;
					 case "SendExecutedDocumentBy":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Send Executed Document By')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
					 case "SendExecutedDocumentTo":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Send Executed Document To')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "Title4":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Send Executed Document To')]/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break;
					 case "RecipientTelephoneNumber":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Recipient Telephone Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "RecipientEmailAddress":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Recipient Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "NumberOfCopiesToBeSent":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Number Of Copies To Be Sent?')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "ArchiveBoxNumber":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Archive Box Number')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break; 
					 case "ArchiveDate":
						 path = driver.findElement(By.xpath("//span[contains(text(),'Archive Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

						 
							break;
							
					 case "DoesthisDocumentrequireOnboarding":
							
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 	
					 case "FullName":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[3]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
					 case "Department":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[4]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
					 case "EmailAddress":
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Does this Document require On boarding?')]/following::input[5]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);

							break; 	
			//========================Page3============================================
					 case "ContractEffectiveDate":
						 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Contract Effective Date')]")));
							
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Effective Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;  	
					 case "ContractEndDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract End Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;
                   case "ContractFinalSignatureDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Final Signature Date')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                  break;
                   case "RenewalTerm":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                                break;
                   case "ContractNoticePerioddays":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Contract Notice Period (days)')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                              break;
                   case "RenewalType":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Renewal Type')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "Currency":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Currency')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "TerritoryInScope1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break; 
                   case "TerritoryInScope20":
                	   Thread.sleep(5000);
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                   case "PrimaryProductorService1a":
                	   
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1a')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
								
							
							if(checkbox==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "PrimaryProductorService1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1b')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox1=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							
							
							if(checkbox1==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "PrimaryProductorService1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product or Service 1c')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox2=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							
							
							if(checkbox2==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "AncillaryProductsorServices1a":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1a')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox3=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							
							if(checkbox3==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "AncillaryProductsorServices1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1b')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox4=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));

							if(checkbox4==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "AncillaryProductsorServices1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services 1c')]/following::button[1]"));
						 Thread.sleep(3000);
						 boolean checkbox5=KeywordsCoreFunctions.isdisplayed(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));
							
							if(checkbox5==false)
							{
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
							}
							else
							{
								KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value+"']/preceding::input[1]"));	
							}
							break;
                   case "ServiceCommencementDate1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                              break; 
                   case "ServiceCommencementDate1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                            break;
                   case "ServiceCommencementDate1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                            break;
                   case "InitialTerm1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                          break;
                   case "InitialTerm1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "InitialTerm1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "ServiceEndDate1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                   case "ServiceEndDate1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "ServiceEndDate1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "FixedTerm1a":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1a')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break; 
                   case "FixedTerm1b":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1b')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "FixedTerm1c":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 1c')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "RenewalTerm1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break; 
                   case "RenewalTerm1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break; 
                   case "RenewalTerm1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break; 
                   case "ServiceNoticePeriod1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
                   case "ServiceNoticePeriod1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "ServiceNoticePeriod1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days) 1c')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "TermsOnExpiry1a":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1a')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
          break;
                   case "TermsOnExpiry1b":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1b')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
				  
                   case "TermsOnExpiry1c":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Terms On Expiry 1c')]/following::input[5]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
		
                   case "PaymentTerms1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;	  
                   case "IfNonstandardprovidedetails1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'If Non-standard, provide details 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
      break;
				        
                   case "PaymentType1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Type 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "BillingFrequency1":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							break;
                   case "BillingFrequencyOther1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency Other 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                     break;
                   case "MinimumSpendCommitment1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                   break;
                   case "MinimumAnnualSpendCommitment1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Annual Spend Commitment 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                 break;
                   case "MinimumNoofSubscriptions1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum No. of Subscriptions 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
               break;
                   case "BaselineSubscriptions":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
             break;
                   case "MinimumSubscriptionTerm1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
           break;
                   case "MinimumCallVolumes1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
         break;
                   case "RecoveryCalculationMethod1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation Method 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                          break;
                   case "Benchmarking1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Benchmarking 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                        break;
                   case "ChurnAllowance1":
						 

						 path = driver.findElement(By.xpath("//span[contains(text(),'Churn Allowance % 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
     						 
                             break;
                   case "FairUsageReview1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fair Usage Review 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                       break;
                   case "ICCCoterminous1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'ICC Co')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[text()='"+value+"']"));
                     break;
							
                   case "FairUsageReviewPeriodVoice1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Fair Usage Review Period Voice (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
           break;		
					
                   case "FairUsageReviewPeriodData1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Fair Usage Review Period Data (months) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
         break;	
                   case "InvoiceCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
       break;		
                   case "TechnologyFund1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
     break;
                   case "ResignCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
   break;
                   case "SignOnBonus1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                   case "CoverageFund1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                   case "BackdatedSavings1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                   case "BackdatedtoDate1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated to (date) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break;
                   case "OtherSubsidy":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Other Subsidy')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break;
                   case "MigrationBonus1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Migration Bonus 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
                   case "AirtimeCredit1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Airtime Credit 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
                   case "InvoiceCreditStartDate1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit Start Date 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
          break;		
                   case "GuaranteedAnnualSavings1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Guaranteed Annual Savings 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;
                   case "ServiceCredits1":
						 

           						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits 1')]/following::button[1]"));
           								
           							Thread.sleep(3000);
           							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                              break;
                   case "ServiceCreditsNetwork1":
						 

 						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Network 1')]/following::button[1]"));
 								
 							Thread.sleep(3000);
 							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                    break;
                   case "ServiceCreditsCustomerServices1":
						 

      						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Customer Services 1')]/following::button[1]"));
      								
      							Thread.sleep(3000);
      							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                         break;
                   case "DirectSupplyofHardware1":
						 

						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Direct Supply of Hardware 1')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;
                   case "LeaseType1":
						 

  						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lease Type 1')]/following::button[1]"));
  								
  							Thread.sleep(3000);
  							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                     break;
                   case "ServiceCreditCap1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Service Credit Cap (Value) 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;	
                   case "LeaseAssetFairValue1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Lease Asset Fair Value 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
      break;	
                   case "FinanceCharge1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Finance Charge 1')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
    break;		
		//===========================================Page 4================================================================					
                   case "PortfolioCategory":
						 
                	   wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Portfolio Category')]")));
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Portfolio Category')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
                   break;	
                   case "TerritoryInScope2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break; 
                 case "TerritoryInScope102":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "TerritoryInScope202":
						
					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 2')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						break;
							
                 case "PrimaryProductorService":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Primary Product(s) or Service(s)')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "PrimaryProductorServiceA2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services (A) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
                 case "PrimaryProductorServiceB2":
						
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 2')]/following::button[1]"));
								
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
							break;
							
                 case "ServiceCommencementDate":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service Commencement Date')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                        break;
                case "InitialTerm":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Initial Term (months) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
                case "ServiceEndDate":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service End Date')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                     break;
                case "RenewalTermmonths":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                    break;
                case "ServiceNoticePeriod":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Service Notice Period (days)')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                   break;
							
                case "FixedTerm2":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Fixed Term 2')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
              break;	
                case "IfNonStandardprovidedetails2":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'If Non-Standard, provide details 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                  break;
							
               case "PaymentTermsdays":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Terms')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
             break;	
               case "PaymentType":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Payment Type')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
           break;	
               case "BillingFrequency":
					 

					 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency')]/following::button[1]"));
							
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
           break;	
           
           
               case "BillingFrequencyOther":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency Other')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                break;
               case "MinimumSpendCommitment":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "MinimumNoOfSubscriptions":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum No. Of Subscriptions')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "MinimumCallVolumes":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
              break;
               case "RecoveryCalculationMethod":
					 
            	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation Method')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
            break;
               case "BackdatedSavings":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
             case "Backdatedtodate2":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated to (date) 2')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
             case "OtherInvestment":
					 
					 path = driver.findElement(By.xpath("//span[contains(text(),'Other Investment')]/following::input[1]"));
				     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
            break;
           
             case "ServiceCreditsNetwork":
				 
          	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Network')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
          break;
             case "ServiceCreditsCustomerServices":
				 
            	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Credits - Customer Services')]/following::button[1]"));
  					
  					Thread.sleep(3000);
  					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
            break;
             case "LeaseType":
				 
          	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Lease Type')]/following::button[1]"));
					
					Thread.sleep(3000);
					KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
          break;
         
             case "ServiceCreditCapValue2":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Service Credit Cap (Value)')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
             case "LeaseAssetFairValue":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Lease Asset Fair Value')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
             case "FinanceCharge":
				 
				 path = driver.findElement(By.xpath("//span[contains(text(),'Finance Charge')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
           
        //=================page5=======================================================================
        
  case "AncillaryProductsorServicesB3":
	  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 3')]")));
				 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 3')]/following::input[1]"));
			     
			        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
        break;
  case "TerritoryInScope3":
		
		 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 3')]/following::button[1]"));
				
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
			break; 
case "TerritoryInScope103":
		
		 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 3')]/following::button[1]"));
				
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
			break;
case "TerritoryInScope203":
		
	 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 3')]/following::button[1]"));
			
		Thread.sleep(3000);
		KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
		break;
           
case "AnnualMinimumSpendCommitment":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Annual Minimum Spend Commitment')]/following::input[1]"));
    
       js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;   
case "BaselineSubscriptionsn":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;  
case "MinimumSubscriptionsTermmonths3":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions Term (months) 3')]/following::input[1]"));
  
     js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break; 
case "BackdatedSavingstodate3":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Backdated Savings to (date) 3')]/following::input[1]"));
 
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break; 
    
  // ======================Page6============================  ================================
case "AncillaryProductsorServicesB4":
	 wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 4')]")));
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 4')]/following::input[1]"));
    
       js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope4":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 4')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope104":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 10) 4')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope204":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (over 20) 4')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "VodafoneBillingEntities4":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Billing Entities 4')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;						
							
case "MinimumSubscriptionsTermmonths4":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term (months) 4')]/following::input[1]"));
 
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;		
case "RevenueShare4":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%) 4')]/following::input[1]"));

   js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
//=================pAGe7===================================================================
case "AncillaryProductsorServicesB5":
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 5')]")));
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 5')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope5":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 5')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope105":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 10) 5')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope205":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 20) 5')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
//====================Page8=================================================================================
case "AncillaryProductsorServicesB6":
	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 6')]")));
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Ancillary Products or Services (B) 6')]/following::input[1]"));
   
      js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "TerritoryInScope6":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope 6')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break; 
case "TerritoryInScope106":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 10) 6')]/following::button[1]"));
	
Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;
case "TerritoryInScope206":

KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Territory(ies) In Scope (Over 20) 6')]/following::button[1]"));

Thread.sleep(3000);
KeywordsCoreFunctions.click(By.xpath("//div[1]/div/div/ul[1]/li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
break;

case "EquipmentRefresh":
	 
	 path = driver.findElement(By.xpath("//span[contains(text(),'Equipment Refresh')]/following::input[1]"));
  
     js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
//=============================Page9===============================

case "StepIn":
	 Thread.sleep(20000);
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Step In')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "DelayPaymentsMilestoneCredits":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Delay Payments / Milestone Credits')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break; 
case "ServiceReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Service Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break; 
case "SLAReporting":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'SLA Reporting')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "DedicatedServicePersonnel":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Dedicated Service Personnel')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "MaterialSubcontractors":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Material Subcontractors')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "InnovationFund":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Innovation Fund')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ContinualImprovementPlan":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Continual Improvement Plan')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "UsageReporting":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Usage Reporting')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "CostofSalesElements":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Cost of Sales Elements')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ExitPlanCommitments":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Exit Plan Commitments')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ChangeManagement":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Change Management')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "FinancialReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Financial Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "CustomerSatisfactionSurveyFindingsReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Customer Satisfaction Survey Findings Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "BudgetPlansandForecastingReport":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Budget Plans and Forecasting Report')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "ScheduledChangeRegister":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Scheduled Change Register')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "EfficiencySavings":
	 
	   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Efficiency Savings')]/following::button[1]"));
			
			Thread.sleep(3000);
			KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
break;
case "GrossSavingsCommitmentsValue":
	 
	path = driver.findElement(By.xpath("//span[contains(text(),'Gross Savings Commitments Value')]/following::input[1]"));
	  
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
case "PriceReviewsFrequencyMonths":
	 
	path = driver.findElement(By.xpath("//span[contains(text(),'Price Reviews (non-FUR) Frequency (Months)')]/following::input[1]"));
	  
    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
break;
default:
	System.out.println("in the defaultt function"+charc);
	result = false;
	break;
}


 }
 
	catch (Exception e) {
		System.out.println("In Exception: "+charc+"Error message:"+e);
		result = false;
	}
						}
					 
					 
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
 				
 				 
					 if(result)
						{
						 Thread.sleep(15000);
								System.out.println("Capturing Result");
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
 				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}
public static boolean RequestSignatureContract(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(5000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		//Thread.sleep(5000);
		//KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Smart Contract Form");

		//Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
 				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					case "DocumentSummary":
						KeywordsCoreFunctions.type(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_DocumentSummary']/following::textarea[1]"), value);
//WebElement DS = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_DocumentSummary']/following::textarea[1]"));
				        
				       // js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DS);
				        break;
					 
					case "LegalLead":
						KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_LegalLead']/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "PhoneNumber":
WebElement PN = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_YourTelNo']/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PN);
				        break;
				        
					case "TotalContractValue":
						 
						path = driver.findElement(By.xpath("//div/span[contains(text(),'Total Contract Value')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
										        
					case "MasterCaseReference":
WebElement MCR = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_MasterCaseReference']/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", MCR);
				        break;
					 case "ParentContractName":
							
							WebElement PCN = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_ParentContractName']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", PCN);
						break; 
					 case "BusinessChannel":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_BusinessChannel']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
				        
					 case "Region":
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_Region']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "SalesSector":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_SalesSector']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ApprovalType":
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_ApprovalType']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
					 case "ApprovalDate":
							
							WebElement R2 = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_ApprovalDate']/following::input[1]"));
											        
											        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", R2);
						break; 
					 case "Submit":
							
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

							break;
//=========================================page 2 starts=================================================================							
					 case "TermsUsed":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_OnWhoseTerms']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					 case "DocumentType":
							
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_ContractType']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
				        
					 case "Territory":
						 String value1 = value.split("\\__")[0];
						 String value2 = value.split("\\__")[1];
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_Territory']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value1+"']/preceding::input[1]"));
							KeywordsCoreFunctions.click(By.xpath("//span[text()='"+value2+"']/preceding::input[1]"));
						break;
				        
					 case "GoverningLaw":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_ClausesStandardNonStandardGoverningLaw']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					 case "Off-FootprintTerritory":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Off-Footprint Territory(ies):')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
				        	 
					 case "Sector":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_PublicOrPrivateSector']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					 case "VodafoneEntity1":
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_VodafoneEntity']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
						
					 case "RegisteredCompanyNumber1":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_VodafoneEntityCoRegNo']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					 case "VodafoneRegisteredAddress1":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_VodafoneEntityCoRegAddress']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 
					 case "InitialTerm":
						 
						 path = driver.findElement(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_MinimumTerm']/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
	                      
					 case "OnBoarding":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[@id='MainContent_MapArea1_cl_lbl_DoesDocumentRequireOnBoardingYN']/following::input[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break; 
					 case "Next":
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
//========================================UK page1===========================================================================						
					 case "SignatoryEmailAddress":
							
						 path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Signatory Email Address:')]/following::input[1]"));
					     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "CommercialApprover":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Commercial Approver:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "EDRATier":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'EDRA Tier')]/following::button"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "Next1":
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
//===========================================page2=================================================================						
					 case "AccountLeadTelephoneNumber":
						 Thread.sleep(5000);
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Account Lead Telephone Number:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "Account":
						 Thread.sleep(5000);
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Account:')]/following::button"));
							Thread.sleep(5000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "SalesChannel":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Sales Channel')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "1SFORGID":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), '1SF Org ID:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "1SFOpportunityReferenceID":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), '1SF Opportunity Reference ID:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "OpportunityType":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Opportunity Type:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "BusinessType":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Business Type:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "EnterpriseOnboardingTeam":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Does this contract need to be sent to the Enterprise Onboarding team?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "ContractType":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Contract Type:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "TermsUsed1":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Terms Used:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "ContractCommencement":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Contract Commencement:')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "BriefContractSummary":
						 Thread.sleep(3000);
						// KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"), value);	
						 try{
								
								KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
								WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
								
								js.executeScript("arguments[0].scrollIntoView();", PT1);
								if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"), value));
								{
									
									System.out.println("In IF");
									
							        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
						}
								
								
								}catch (Exception e)
								{
									System.out.println(e);
									WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
									
							        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
								}
	                      break;
					 case "Next2":
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
//==========================================page3============================================================================
					 case "Product":
						 Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/span/strong/span[contains(text(), 'Indicate below the products contained within the contract')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li/div/span[text()='"+value+"']/preceding::input[1]"));
							
							break;
					 case "PortfolioCategory":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/span/strong/span[contains(text(), 'Indicate below the products contained within the contract')]/following::button[2]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li/div/span[text()='"+value+"']/preceding::input[1]"));
							
							break;
					 case "TieredSupportServiceProduct":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/span/strong/span[contains(text(), 'Indicate below the products contained within the contract')]/following::button[3]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "SpecifyTheProduct":
							
							path = driver.findElement(By.xpath("//div/div/div/span/span/strong/span[contains(text(), 'Indicate below the products contained within the contract')]/following::input[3]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "Product2":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "PortfolioCategory1":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::button[2]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "CommercialCommitmentType":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::button[3]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "PaymentType":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::button[4]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "InvoiceFrequency":
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::button[5]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
							
							break;
					 case "MinimumTermMonths1":
							
							path = driver.findElement(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::input[7]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TermPerConnectionMonths1":
							
							path = driver.findElement(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::input[8]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "PaymentTermDays":
							
							path = driver.findElement(By.xpath("//div/div/div/span/p/span/strong/span[contains(text(), 'Product 2')]/following::input[9]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "Next3":
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
//=========================================page4==============================================================================
					 case "MinimumTermMonths":
						 Thread.sleep(3000);
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Minimum Term (months):')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TermPerConnectionMonths":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Term Per Connection (months):')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TotalContractValueTCV":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Total Contract Value (TCV):')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TargetSpend":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Target Spend:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TotalSubsidyValue":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Total Subsidy Value:')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "TerminationNoticePeriodDays":
							
							path = driver.findElement(By.xpath("//div/div/span[contains(text(), 'Termination notice period (days):')]/following::input[1]"));
						     
					        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
	                      break;
					 case "Next4":
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
//========================================page5==========================================================
					 case "Next5":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
	                      
//=================page6===================================================================================
					 case "Next6":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
						break;
					 default:
	System.out.println("in the defaultt function");
	result = false;
	break;
}


 }
 
	catch (Exception e) {
		System.out.println("In Exception"+e);
		result = false;
	}
						}
					 
					 
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 
				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return true;	
}

public static boolean AddSCFDetailsUK(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(15000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"SCF");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "CustomerEmailAddress":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Email Address')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractCommencement":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Commencement')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "MethodofSignature":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Method of Signature')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;

					case "ArchiveBoxReference":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Archive Box Reference')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					//==============================Next Case USe after every Page====================							
					 case "Submit":
						 Thread.sleep(5000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

					break;
					//===================Page2=============================================

					 case "PartnerName":
						
						 Thread.sleep(5000);
							path = driver.findElement(By.xpath("//span[contains(text(),'Partner Name')]/following::input[1]"));
							  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "SalesChannel":
						 
							path = driver.findElement(By.xpath("//span[contains(text(),'If Sales Channel is Other, provide details')]/following::input[1]"));
							  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;	
					
				    case "RegionalBusiness":
						 
				    	Thread.sleep(6000);
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which Region?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
				    case "MajorBusiness":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which area?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "PartnershipAlliances":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which Partner type?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "ContractEnterpriseOnboardingteam?":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does this contract need to be sent to the Enterprise Onboarding team?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
						
					case "OpportunityType":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
						
					case "BusinessType":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Type')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
							
					case "EDRATier":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Tier')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;		
							
					case "EDRASignOnDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'EDRA Sign On Date')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
							
					case "InformationClassification":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "PublicSectorTermsFramework":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'If Public Sector Terms, specify the Framework')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;			
					
					case "ParentDocumentName":
						
						path = driver.findElement(By.xpath("//span[contains(text(),'Parent Document Name')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
						  
					break;	
					
					case "ContractReference":
						
						path = driver.findElement(By.xpath("//span[contains(text(),'Contract Reference')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
						  
					break;				
							
					
					case "Products":
						Thread.sleep(6000);
						String value1 = value.split("\\__")[0];
						String value2 = value.split("\\__")[1];
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product Specific Commercial Details']/following::span[text()='Products:'][1]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value1+"')]/preceding::input[1]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value2+"')]/preceding::input[1]"));
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					
						  
					break;	
					
					case "TieredSupportServiceProduct:":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Tiered Support Service Product:')]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						  
					break;	
					
						
					case "PortfolioCategory":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product Specific Commercial Details']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;	
					
					
					case "Product1":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 1']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "Product10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory1":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 1']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "CommercialCommitmentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 1']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "MinimumTerm(months)1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 1']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 1']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "PaymentTerm(days)1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 1']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "PaymentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 1']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "PaymentType2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "InvoiceFrequency1":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 1']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "InvoiceFrequency2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "BespokeProductorService":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Bespoke Product or Service, provide further details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "ConfirmBespokePaymentDetails":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Confirm which product the Bespoke Payment Details relate to:']//following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "BespokePaymentDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Payment Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "FixedPriceForTerm":
						 
						 path = driver.findElement(By.xpath("//span[text()='Fixed Price For the Term:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "FixedPriceForTermDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Fixed Price For the Term Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "OPEXLeaseModelDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='OPEX Lease Model Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RevenueRebateDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Revenue Rebate Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "OtherDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Other Details:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					//===================Page3=============================================


					case "CommercialApprover":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Commercial Approver:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "CreditCheckSupportReference":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Approved Credit Check Support Request Reference:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "CPQQuote":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='CPQ Quote:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "CPQQuoteRevision":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='CPQ Quote Revision Number:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "NonCPQCommercialReference":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Non CPQ Commercial Approval Reference:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TotalValue1":
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][3]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][4]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][5]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][6]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][7]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][8]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][9]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "Details(nonstandard)1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][3]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][4]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][5]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][6]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][7]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][8]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][9]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "IfNonstandarddetails1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Contract Termination Details']/following::span[text()='If Non-standard, provide details:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "IfNonstandarddetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Contract Termination Details']/following::span[text()='If Non-standard, provide details:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RecoveryCalculationmethod":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation method')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "Terminationnoticeperiod(days)":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Termination notice period (days):')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RequiredSignatures":
						Thread.sleep(6000);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Required Signatures')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
					break;
						 
					case "ContractClauseRef1":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Indemnities or Warranties:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef2":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='IPR:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef3":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Sub-contracting:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef4":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Governing Law:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;				
					case "ContractClauseRef5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Network Suspension Clause:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Late Customer Payment:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Data Protection:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Assignment/Novation:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Tax:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Jurisdiction:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef11":
						 
						 path = driver.findElement(By.xpath("//span[text()='Unilateral Charges:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef12":
						 
						 path = driver.findElement(By.xpath("//span[text()='Service Level Agreement:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef13":
						 
						 path = driver.findElement(By.xpath("//span[text()='SLA Service Credits:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef14":
						 Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[contains(text(), 'If Non-standard, provide Service Credit Cap value')]/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef15":
						 
						 path = driver.findElement(By.xpath("//span[text()='Late Delivery Payment:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef16":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide Late Delivery Payment Cap value (£):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef17":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Limitation of Liability:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef18":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide type of specific limitation(s):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef19":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide specific limitation value (£):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ServiceCreditCapvalue(£)":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[contains(text(), 'If Non-standard, provide Service Credit Cap value')]//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "LateDeliveryPaymentCapvalue(£)":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide Late Delivery Payment Cap value (£):']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "specificlimitationvalue(£)":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide specific limitation value (£):']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
					case "typeofspecificlimitation(s)":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='If Non-standard, provide type of specific limitation(s):']//following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
					break;	
					
					//===================Page4=============================================
					
					case "ContractClause20":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Clauses']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "ContractClause21":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Clauses']/following::span[text()='Contract Clause Reference:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ContractClauseRef22":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[text()='Equipment recovery provision:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef23":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[text()='Direct supply of equipment or hardware by a Group Enterprise entity:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef24":
						 
						 path = driver.findElement(By.xpath("//span[text()='Business downturn:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef25":
						 
						 path = driver.findElement(By.xpath("//span[text()='Divestiture:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef26":
						 
						 path = driver.findElement(By.xpath("//span[text()='Change of control:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef27":
						 
						 path = driver.findElement(By.xpath("//span[text()='Employee transfer provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;			
					case "ContractClauseRef28":
						 
						 path = driver.findElement(By.xpath("//span[text()='Customer audit rights:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef29":
						 
						 path = driver.findElement(By.xpath("//span[text()='Third party audit rights:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef30":
						 
						 path = driver.findElement(By.xpath("//span[text()='Survives if parent contract terminates:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef31":
						 
						 path = driver.findElement(By.xpath("//span[text()='Escalation procedure:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef32":
						 
						 path = driver.findElement(By.xpath("//span[text()='FUR (Fair Usage Review):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef33":
						 
						 path = driver.findElement(By.xpath("//span[text()='Recovery of Charges:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef34":
						 
						 path = driver.findElement(By.xpath("//span[text()='Benchmarking:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef35":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Benchmarking is included, indicate type:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef36":
						 
						 path = driver.findElement(By.xpath("//span[text()='Backdated Savings:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef37":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Backdated Savings are included, indicate date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef38":
						 
						 path = driver.findElement(By.xpath("//span[text()='Recovery of Costs due to Customer Delay:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef39":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke financial protection (e.g. PCG):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef40":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke contract start date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef41":
						 
						 path = driver.findElement(By.xpath("//span[text()='If there is a bespoke contract start date, indicate date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef42":
						 
						 path = driver.findElement(By.xpath("//span[text()='Enhanced on boarding provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef43":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Exit Plan:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef44":
						 
						 path = driver.findElement(By.xpath("//span[text()='Additional bespoke provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
						
					case "BackdatedSavings":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Backdated Savings are included, indicate date:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
					case "Benchmarkingtype":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='If Benchmarking is included, indicate type:']/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
					
					case "ConfirmedContractualStartDate":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[contains (text(),'Confirmed Contractual Start Date:')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ConfirmedContractualEndDate":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[contains (text(),'Confirmed Contractual End Date:')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
							
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
				 if(spec!="SCF UK")
				 {
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 } 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	if(data=="SCF UK")
	{
	return true;
	}
	else
	{
		return false;
	}
}
public static boolean SelfServeMidTemp(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(15000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "ContractingEntity":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Contracting Entity:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "CountryofIncorporation":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Country of Incorporation:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "RegisteredCompanyNumber":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Registered Company Number:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "RegisteredOfficeAddress":
                         try{
							
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Registered Office Address:')]/following::textarea[1]"));
							WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Registered Office Address:')]/following::textarea[1]"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Registered Office Address:')]/following::textarea[1]"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					         }
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//span[contains(text(),'Customer Entity Details')]/following::span[contains(text(),'Registered Office Address:')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
                      break;

					case "ContractStartDate":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Contract Start Date:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean UPSCReq(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(10000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		//Thread.sleep(5000);
		//KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve Mutual NDA");

		//Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "TelephoneNumber":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Telephone Number:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "Account":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Account:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "SalesChannel":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Sales Channel:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "EDRATier":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Tier:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "OpportunityType":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "BusinessType":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Type:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "1SFOrgID":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'1SF Org ID:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "1SFOpportunityReferenceID":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'1SF Opportunity Reference ID:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "CommercialApprover":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Commercial Approver:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "CorporateID":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Corporate ID:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "CustomerName":
						
						Thread.sleep(5000);
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "Submit":
						 Thread.sleep(5000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

					break;
					
					case "NPID":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'NPID:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "BriefContractSummary":
                      try{
							
							KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
							WebElement PT1= driver.findElement(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
							
							js.executeScript("arguments[0].scrollIntoView();", PT1);
							if(KeywordsCoreFunctions.type(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"), value));
							{
								
								System.out.println("In IF");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
					}
							
							
							}catch (Exception e)
							{
								System.out.println(e);
								WebElement PT2= driver.findElement(By.xpath("//div/div/span[contains(text(), 'Brief Contract Summary:')]/following::textarea"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT2);
							}
                      break;



					case "ConfirmedContractualStartDate":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Confirmed Contractual Start Date:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ConfirmedContractualEndDate":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Confirmed Contractual End Date:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months):')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Term Per Connection (months):')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TotalContractValue(TCV)":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value (TCV):')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TargetSpend":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Target Spend:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TotalSubsidyValue":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Total Subsidy Value:')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermsUsed":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Terms Used:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "ContractType":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Type:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "Products":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Products:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'"+value+"')]/preceding::input[1]"));
					break;
					
					case "PortfolioCategory":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Portfolio Category:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "RecoveryCalculationMethod":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation method:')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
                   case "Product1":
                	   Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
                   case "PortfolioCategory1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
                   case "CommercialCommitmentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
                   case "MinimumTerm(months)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					

					case "TermPerConnection(months)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;		
					
					case "PaymentTerm(days)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
                    case "PaymentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
                   case "InvoiceFrequency1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
                   case "TotalValue1":
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
                   case "Details(nonstandard)1":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'tails (if non standard)')]/following::span[text()='Details (if non standard):'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
                   case "TotalValue2":
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
                  case "Details(nonstandard)2":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'tails (if non standard)')]/following::span[text()='Details (if non standard):'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean SelfServeSCF(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(15000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"Self Serve NDA Smart Contract Form");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "InformationClassification":
						 
						 KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification')]/following::button[1]"));
							
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					case "ContractEffectiveDate":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Contract Effective Date')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean AddSCFDetailsUK1(By element,String data)
{
	
	try
	{

		
		
		// WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		WebElement path;
		
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Generate SCF']")));
		Thread.sleep(15000);
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Generate SCF']"));
		Thread.sleep(5000);
		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),"SCF");

		Thread.sleep(3000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 Thread.sleep(10000);
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents();
					 
					 String value = secSheet.getCell(j, i).getContents();
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) {
					
					case "CustomerEmailAddress":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Customer Email Address')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractCommencement":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Commencement')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "MethodofSignature":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Method of Signature')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "TotalContractValueTCV":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Total Contract Value (TCV):')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TargetSpend":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Target Spend:')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalSubsidyValue":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Total Subsidy Value:')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTermMonths":
						
						Thread.sleep(5000);
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months):')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnectionMonths":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Term Per Connection (months):')]/following::input[@type='text'][1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "EarlyTermination":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Early Termination')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "1SFORGID":
						
						Thread.sleep(5000);
						path = driver.findElement(By.xpath("//div/div/span[contains(text(), '1SF Org ID:')]/following::input[1]"));
					     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;
				 case "1SFOpportunityReferenceID":
						
						path = driver.findElement(By.xpath("//div/div/span[contains(text(), '1SF Opportunity Reference ID:')]/following::input[1]"));
					     
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
                      break;

					case "ArchiveBoxReference":
						 
						path = driver.findElement(By.xpath("//span[contains(text(),'Archive Box Reference')]/following::input[1]"));
						  
					    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "CreditCheckComplete":
						 
						   KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Credit')]/following::button[1]"));
							
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				break;
				
					case "TermsUsed":
						 Thread.sleep(3000);
						 KeywordsCoreFunctions.click(By.xpath("//div/div/span[contains(text(),'Terms Used')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						break;
					
					
					//==============================Next Case USe after every Page====================							
					 case "Submit":
						 Thread.sleep(5000);
						 KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));

					break;
					//===================Page2=============================================

					 case "PartnerName":
						
						 Thread.sleep(5000);
							path = driver.findElement(By.xpath("//span[contains(text(),'Partner Name')]/following::input[1]"));
							  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "SalesChannel":
						 
							path = driver.findElement(By.xpath("//span[contains(text(),'If Sales Channel is Other, provide details')]/following::input[1]"));
							  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;	
					
				    case "RegionalBusiness":
						 
				    	Thread.sleep(6000);
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which Region?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
				    case "MajorBusiness":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which area?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "PartnershipAlliances":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'which Partner type?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "ContractEnterpriseOnboardingteam?":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Does this contract need to be sent to the Enterprise Onboarding team?')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
						
					case "OpportunityType":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Opportunity Type')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
						
					case "BusinessType":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Business Type')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
							
					case "EDRATier":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'EDRA Tier')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;		
							
					case "EDRASignOnDate":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'EDRA Sign On Date')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
							
					case "InformationClassification":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Information Classification')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
						
					case "PublicSectorTermsFramework":
						 
						   KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'If Public Sector Terms, specify the Framework')]/following::button[1]"));
								
								Thread.sleep(3000);
								KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;			
					
					case "ParentDocumentName":
						
						path = driver.findElement(By.xpath("//span[contains(text(),'Parent Document Name')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
						  
					break;	
					
					case "ContractReference":
						
						path = driver.findElement(By.xpath("//span[contains(text(),'Contract Reference')]/following::input[1]"));
						  
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
						  
					break;				
							
					
					case "Products":
						Thread.sleep(6000);
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product Specific Commercial Details']/following::span[text()='Products:'][1]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;	
					
					case "TieredSupportServiceProduct:":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Tiered Support Service Product:')]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						  
					break;	
					
						
					case "PortfolioCategory":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product Specific Commercial Details']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(4000);
						//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]")));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;	
					
					
					case "Product1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "Product8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "Product9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "Product10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Product:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "PortfolioCategory10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Portfolio Category:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
							
					case "CommercialCommitmentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					case "CommercialCommitmentType8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "CommercialCommitmentType10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Commercial Commitment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;					
					
					case "MinimumTerm(months)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "MinimumTerm(months)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "MinimumTerm(months)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Minimum Term (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TermPerConnection(months)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TermPerConnection(months)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Term Per Connection (months):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "PaymentTerm(days)1":
						 
						 path = driver.findElement(By.xpath("//strong[text()='Product 1']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 2']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 3']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 4']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 5']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 6']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 7']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 8']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 9']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "PaymentTerm(days)10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Product 10']/following::span[text()='Payment Term (days):'][1]/following::input[1]"));
						 Thread.sleep(2000);
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "PaymentType1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					case "PaymentType2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "PaymentType10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Payment Type:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "InvoiceFrequency1":
						
						KeywordsCoreFunctions.click(By.xpath("//strong[text()='Product 1']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "InvoiceFrequency2":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 2']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency3":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 3']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency4":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 4']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency5":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 5']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency6":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 6']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency7":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 7']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency8":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 8']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency9":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 9']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					case "InvoiceFrequency10":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Product 10']/following::span[text()='Invoice Frequency:'][1]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;
					
					case "BespokeProductorService":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Bespoke Product or Service, provide further details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "ConfirmBespokePaymentDetails":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='Confirm which product the Bespoke Payment Details relate to:']//following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
						  
					break;

					case "BespokePaymentDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Payment Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "FixedPriceForTerm":
						 
						 path = driver.findElement(By.xpath("//span[text()='Fixed Price For the Term:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "FixedPriceForTermDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Fixed Price For the Term Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "OPEXLeaseModelDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='OPEX Lease Model Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RevenueRebateDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Revenue Rebate Details:']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "OtherDetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Other Details:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					//===================Page3=============================================


					case "CommercialApprover":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Commercial Approver:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "CreditCheckSupportReference":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Approved Credit Check Support Request Reference:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "CPQQuote":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='CPQ Quote:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "CPQQuoteRevision":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='CPQ Quote Revision Number:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "NonCPQCommercialReference":
						 
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Non CPQ Commercial Approval Reference:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "TotalValue1":
						Thread.sleep(6000);
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][3]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][4]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][5]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][6]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][7]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][8]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "TotalValue9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Total Value']/following::span[text()='Total Value:'][9]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "Details(nonstandard)1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)2":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)3":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][3]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)4":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][4]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][5]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][6]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][7]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][8]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "Details(nonstandard)9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Details (if non standard)']/following::span[text()='Details (if non standard):'][9]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "IfNonstandarddetails1":
						 
						 path = driver.findElement(By.xpath("//span[text()='Contract Termination Details']/following::span[text()='If Non-standard, provide details:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "IfNonstandarddetails":
						 
						 path = driver.findElement(By.xpath("//span[text()='Contract Termination Details']/following::span[text()='If Non-standard, provide details:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RecoveryCalculationmethod":
						
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Recovery Calculation method')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
					
					case "Terminationnoticeperiod(days)":
						 
						 path = driver.findElement(By.xpath("//span[contains(text(),'Termination notice period (days):')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "RequiredSignatures":
						Thread.sleep(6000);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Required Signatures')]/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;
						 
					case "ContractClauseRef1":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Indemnities or Warranties:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef2":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='IPR:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef3":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Sub-contracting:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef4":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Governing Law:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;				
					case "ContractClauseRef5":
						 
						 path = driver.findElement(By.xpath("//span[text()='Network Suspension Clause:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef6":
						 
						 path = driver.findElement(By.xpath("//span[text()='Late Customer Payment:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef7":
						 
						 path = driver.findElement(By.xpath("//span[text()='Data Protection:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef8":
						 
						 path = driver.findElement(By.xpath("//span[text()='Assignment/Novation:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef9":
						 
						 path = driver.findElement(By.xpath("//span[text()='Tax:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef10":
						 
						 path = driver.findElement(By.xpath("//span[text()='Jurisdiction:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef11":
						 
						 path = driver.findElement(By.xpath("//span[text()='Unilateral Charges:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef12":
						 
						 path = driver.findElement(By.xpath("//span[text()='Service Level Agreement:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef13":
						 
						 path = driver.findElement(By.xpath("//span[text()='SLA Service Credits:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef14":
						 Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[contains(text(), 'If Non-standard, provide Service Credit Cap value')]/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef15":
						 
						 path = driver.findElement(By.xpath("//span[text()='Late Delivery Payment:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef16":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide Late Delivery Payment Cap value (£):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef17":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[text()='Limitation of Liability:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef18":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide type of specific limitation(s):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef19":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide specific limitation value (£):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ServiceCreditCapvalue(£)":
						Thread.sleep(4000);
						 path = driver.findElement(By.xpath("//span[contains(text(), 'If Non-standard, provide Service Credit Cap value')]//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "LateDeliveryPaymentCapvalue(£)":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide Late Delivery Payment Cap value (£):']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "specificlimitationvalue(£)":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Non-standard, provide specific limitation value (£):']//following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
					case "typeofspecificlimitation(s)":
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='If Non-standard, provide type of specific limitation(s):']//following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
					
					//===================Page4=============================================
					
					case "ContractClause20":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Clauses']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;

					case "ContractClause21":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Clauses']/following::span[text()='Contract Clause Reference:'][2]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ContractClauseRef22":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[text()='Equipment recovery provision:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef23":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[text()='Direct supply of equipment or hardware by a Group Enterprise entity:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef24":
						 
						 path = driver.findElement(By.xpath("//span[text()='Business downturn:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef25":
						 
						 path = driver.findElement(By.xpath("//span[text()='Divestiture:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef26":
						 
						 path = driver.findElement(By.xpath("//span[text()='Change of control:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef27":
						 
						 path = driver.findElement(By.xpath("//span[text()='Employee transfer provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;			
					case "ContractClauseRef28":
						 
						 path = driver.findElement(By.xpath("//span[text()='Customer audit rights:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef29":
						 
						 path = driver.findElement(By.xpath("//span[text()='Third party audit rights:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef30":
						 
						 path = driver.findElement(By.xpath("//span[text()='Survives if parent contract terminates:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef31":
						 
						 path = driver.findElement(By.xpath("//span[text()='Escalation procedure:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef32":
						 
						 path = driver.findElement(By.xpath("//span[text()='FUR (Fair Usage Review):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef33":
						 
						 path = driver.findElement(By.xpath("//span[text()='Recovery of Charges:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef34":
						 
						 path = driver.findElement(By.xpath("//span[text()='Benchmarking:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef35":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Benchmarking is included, indicate type:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef36":
						 
						 path = driver.findElement(By.xpath("//span[text()='Backdated Savings:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef37":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Backdated Savings are included, indicate date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef38":
						 
						 path = driver.findElement(By.xpath("//span[text()='Recovery of Costs due to Customer Delay:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef39":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke financial protection (e.g. PCG):']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef40":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke contract start date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef41":
						 
						 path = driver.findElement(By.xpath("//span[text()='If there is a bespoke contract start date, indicate date:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef42":
						 
						 path = driver.findElement(By.xpath("//span[text()='Enhanced on boarding provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef43":
						 
						 path = driver.findElement(By.xpath("//span[text()='Bespoke Exit Plan:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					case "ContractClauseRef44":
						 
						 path = driver.findElement(By.xpath("//span[text()='Additional bespoke provisions:']/following::span[text()='Contract Clause Reference:'][1]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
						
					case "BackdatedSavings":
						 
						 path = driver.findElement(By.xpath("//span[text()='If Backdated Savings are included, indicate date:']/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					
					case "Benchmarkingtype":
						Thread.sleep(6000);
						
						KeywordsCoreFunctions.click(By.xpath("//span[text()='If Benchmarking is included, indicate type:']/following::button[1]"));
						
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					break;	
					
					case "ConfirmedContractualStartDate":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[contains (text(),'Confirmed Contractual Start Date:')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
					
					case "ConfirmedContractualEndDate":
						Thread.sleep(6000);
						 
						 path = driver.findElement(By.xpath("//span[contains (text(),'Confirmed Contractual End Date:')]/following::input[1]"));
						 
						    js.executeScript("arguments[0].setAttribute('value', '" +value+"')", path);
					break;
							
						
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							System.out.println("Error message:"+charc+" "+e);
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								
								Thread.sleep(5000);
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div/a[text()='Preview']")));
								//KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								//WebElement submit=driver.findElement(By.xpath("//input[@type='submit']"));
								//submit.click();
								
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
		return false;
}
public static boolean AddTemplatesUK(By element,String data)
{
	
	try
	{

		WebElement xpath;
		
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		
		
	
		//waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[contains(text(),'Case Item')]"))); 
		
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Template Library']"));
		
		
		Thread.sleep(20000);

		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),spec);
		Thread.sleep(5000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec.trim()))
			 {
				 System.out.println(specification);
				 
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents(); //companyname
					 
					 String value = secSheet.getCell(j, i).getContents();  //vodafone
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) 
					{
					case "CustomerName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Customer Name:')]")));
						
WebElement custName = driver.findElement(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", custName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	
					case "RegNumber":
WebElement RegNum = driver.findElement(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", RegNum);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CountryofIncorporation":
WebElement COI = driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
					case "CompanyName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Company Name:')]")));
WebElement CompName = driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"), value);
					
					
					break;	
					case "CompanyRegNumber":
						
WebElement CompReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CompanyRegNumber1":
						
						WebElement CompReg1= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[2]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg1);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "ComRegNumber":
						
						WebElement ComReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ComReg);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "CompanyCountryofIncorporation":
WebElement COI1 = driver.findElement(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI1);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
						
					case "Currency":
						
						WebElement DateField2 = driver.findElement(By.xpath("//span[contains(text(),'Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField2);

						break;
						
					case "MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Spend Commitment:')]/following::input[1]"), value);
WebElement DateField3 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField3);
						break;
						
					case "MinimumSubscriptionTerm":
WebElement DateField4 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField4);
						break;
						
					case "BaselineSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Baseline Subscriptions:')]/following::input[1]"), value);
WebElement DateField5 = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField5);
						break;
						
					case "ResignCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"), value);
						
WebElement DateField6 = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField6);
						break;
						
					case "SubsidyValuePerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField7 = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField7);
						
						
						break;
					case "SubsidyValuePerSubscriptionShallbe":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField18 = driver.findElement(By.xpath("//span[contains(text(),'The subsidy value per Subscription shall be')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField18);
						
						
						break;
						
					case "TechnologyFund":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"), value);
						
WebElement DateField8 = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField8);
						
						
						break;
					case "InvoiceCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"), value);
WebElement DateField9 = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField9);
						
						break;
					case "VGEDirectCarrier":
						
						WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField);
				        break;
					case "CoverageFund":
						JavascriptExecutor js1 = (JavascriptExecutor)driver;
						WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"));
				        
				        js1.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField1);
				        break;
					case "BillingFrequency":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyV":
WebElement BV = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", BV);
				        break;
					case "VGEInvoiceReportingPortalTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'VGE Invoice Reporting Portal Territory(ies):')]/following::button[1]"));
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VGEInvoiceTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "VodafoneSpendAnalyticsTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Spend Analytics Territory(ies):')]/following::button[1]"));
						
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneAnalyticsTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "RegisterdAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField10 = driver.findElement(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField10);
				        break;
					case "CompanyRegisteredAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField11 = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField11);
				        break;
					case "CompanyRegisteredofficeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CFA = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CFA);
				        break;
					
					case "ContractReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CR= driver.findElement(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CR);
				        break;
					case "NoticeEmail":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Email= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Email);
				        break;
					case "NoticeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NA= driver.findElement(By.xpath("//span[contains(text(),'Notice Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NA);
				        break;
					
					case "DueDatePaymentterms":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DPT= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Terms (Days):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DPT);
				        break;
					case "DueDatePaymenttype":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DP= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Type:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DP);
				        break;
					case "EffectiveDate":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ED= driver.findElement(By.xpath("//span[contains(text(),'Effective Date:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ED);
				        break;
					case "Year1MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1);
				        break;
					case "Year2MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2);
				        break;
					case "Year3MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3);
				        break;
				        
				        
				        
					
					case "ServiceDesciption1":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea"), value);
WebElement SDS1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
boolean result1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isDisplayed();
boolean result2= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isEnabled();
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
System.out.println(SDS1);			                  
System.out.println(result1);    
System.out.println(result2);  
				                  
				        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS1);
				        
				        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
				        break;
				        
				        
				        
				        
					case "Year1MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 1 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1Spend);
				        break;
					case "Year2MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 2 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2Spend);
				        break;
					case "Year3MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 3 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3Spend);
				        break;
					case "CorpID":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CID= driver.findElement(By.xpath("//span[contains(text(),'Corp ID:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CID);
				        break;
					case "OriginalAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement OAR= driver.findElement(By.xpath("//span[contains(text(),'Original Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", OAR);
				        break;
					case "ReplacingAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RAR= driver.findElement(By.xpath("//span[contains(text(),'Replacing Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RAR);
				        break;
					case "EffectiveDateFullBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Full Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FD);
				        break;
					case "EffectiveDatePartBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Part Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PD);
				        break;
					case "SignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOB= driver.findElement(By.xpath("//span[contains(text(),'Sign on Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOB);
				        break;
					case "PaymentSheduleforSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOB= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule For Sign On Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOB);
				        break;
					case "PaymentSheduleforUKSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Npath= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule for UK Sign-On Bonus')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Npath);
				        break;
					case "ContractCurrencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Currency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "SignOnBonusvalue":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOBv= driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus (value):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOBv);
				        break;
					case "PaymentSheduleforSignOnBonusUK":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOBUK= driver.findElement(By.xpath("//span[contains(text(),'UK Sign-On Bonus Schedule:')]/following::textarea"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOBUK);
				        break;			
						case "PartXSchedule3":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS3= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 3:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS3);
				        break;
					case "PartXSchedule4":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS4= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 4:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS4);
				        break;
					case "CarrierDataFee":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CDF= driver.findElement(By.xpath("//span[contains(text(),'Carrier Data Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CDF);
				        break;
					case "AdditionalAuthorizedUsers":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AAU= driver.findElement(By.xpath("//span[contains(text(),'Number of Additional Authorized Users:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AAU);
				        break;
				        
					case "RenewalTermMonths":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM= driver.findElement(By.xpath("//span[contains(text(),'Renewal Terms (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM);
				        break;
				       
					case "RenewalTermMonth":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM1= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM1);
				        break;  
				        
					case "CommenceBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionTypePerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement STPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", STPT);
				        break;
					case "RecurringCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RC= driver.findElement(By.xpath("//span[contains(text(),'Recurring Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RC);
				        break;
					case "InstallationCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement IC= driver.findElement(By.xpath("//span[contains(text(),'Installation Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", IC);
				        break;
					case "MinMonthlySubscrip":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MMS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Monthly Subscription Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MMS);
				        break;
					case "AppSentry":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App Sentry')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "AppDN":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App DN')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraCoreHosting":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Core Hosting')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraEmailSentryPair":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Email Sentry Pair')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ProfessionalServicePackage":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Professional Service Package')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "FrequencyServiceReviews":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FSR= driver.findElement(By.xpath("//span[contains(text(),'Frequency of Service Reviews')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FSR);
				        break;
					case "NAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NAM= driver.findElement(By.xpath("//span[contains(text(),'NAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NAM);
				        break;
					case "GAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement GAM= driver.findElement(By.xpath("//span[contains(text(),'GAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", GAM);
				        break;
					case "RampUpPeriod":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RUP= driver.findElement(By.xpath("//span[contains(text(),'Ramp Up Period')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RUP);
				        break;
					case "RenewalTerm":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RT= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RT);
				        break;
					case "Licences":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LIC= driver.findElement(By.xpath("//span[contains(text(),'Licences')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LIC);
				        break;
					case "ProfessionalServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS= driver.findElement(By.xpath("//span[contains(text(),'Professional Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS);
				        break;
					case "CommenceFromBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPT);
				        break;
					case "ContractCurrency":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CC= driver.findElement(By.xpath("//span[contains(text(),'Contract Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CC);
				        break;
					case "DedicatedInternetAccessServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DIAS= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - Dedicated Internet Access Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DIAS);
				        break;
					case "ServiceElementPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SET= driver.findElement(By.xpath("//span[contains(text(),'Service Element Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SET);
				        break;
					case "MinimumCallVolumes":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MCV= driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MCV);
				        break;
					case "MinimumSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MS);
				        break;
					case "PartSIPTrunkingService":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SIPT= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - SIP Trunking Service')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SIPT);
				        break;
						
						case "StoragePeriodMonths":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SPM= driver.findElement(By.xpath("//span[contains(text(),'Storage Period (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPM);
					        break;
					        
						case "HostingOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement HO= driver.findElement(By.xpath("//span[contains(text(),'Hosting Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", HO);
					        break;
						case "SMSOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SO= driver.findElement(By.xpath("//span[contains(text(),'SMS Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SO);
					        break;
						case "NMRSetUpFee":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NSF= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NSF);
					        break;
						case "NMRSetUpFeeDr":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "NMRFeeRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NM= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[5]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NM);
					        break; 
						case "NMRFeeRegisteredDevicesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee Registered Devices:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "SMSRecordingServiceCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SRSC= driver.findElement(By.xpath("//span[contains(text(),'SMS Recording Service Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SRSC);
					        break;
						case "InitialNumberofRegisteredDevice":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement INR= driver.findElement(By.xpath("//span[contains(text(),'Initial Number of Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", INR);
					        break;
						case "MinimumRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MRD= driver.findElement(By.xpath("//span[contains(text(),'Minimum Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MRD);
					        break;
						case "LocalVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LVGC= driver.findElement(By.xpath("//span[contains(text(),'Local Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LVGC);
					        break;
						case "AgreementDate":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AD= driver.findElement(By.xpath("//span[contains(text(),'Agreement Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AD);
					        break;
						case "CallRecordingServiceCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRSC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Service Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRSC);
					        break;
						case "CallRecordingHostingCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRHC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Hosting Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRHC);
					        break;
						case "ScheduleServiceTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SST= driver.findElement(By.xpath("//span[contains(text(),'Schedule [XX] - Service Terms')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SST);
					        break;
						case "BaseAgentMaximumAgreedConcurrentVolume":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Base Agent Maximum Agreed Concurrent Volume is')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "BaseAgentoptionsMinimumFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement B= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", B);
					        break;
						case "BaseAgentOnboardingFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement BB= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Onboarding Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", BB);
					        break;
						case "AnyOtherMinimumFloors":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AM= driver.findElement(By.xpath("//span[contains(text(),'Any Other Minimum Floors')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AM);
					        break;
						case "EnhancedFixedOnlyUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced Fixed Only User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedFMCUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						
						case "Thepurposeofthisagreement":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "CustomerBillingAddress":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "DesignatedCountriesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Designated Countries')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "SetupOnetimeCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOT= driver.findElement(By.xpath("//span[contains(text(),'Set up One time Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOT);
					        break;
						case "ApplicationConnectivityMonthlyCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ACM= driver.findElement(By.xpath("//span[contains(text(),'Application & Connectivity Monthly Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", ACM);
					        break;
						case "RevenueShare":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RS= driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RS);
					        break;
						case "DesignatedCountriesV":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DC= driver.findElement(By.xpath("//span[contains(text(),'Designated Countries')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DC);
					        break;
						case "MilestoneInvoicePlan":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MIP= driver.findElement(By.xpath("//span[contains(text(),'Milestone Invoice Plan')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MIP);
					        break;
						case "AppendixtoSchedule3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement S3= driver.findElement(By.xpath("//span[contains(text(),'Appendix [XX] to Schedule 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", S3);
					        break;
						case "AssociatedVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AVGC= driver.findElement(By.xpath("//span[contains(text(),'Associated Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AVGC);
					        break;
						case "textbox":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "dropdown":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "PaymentTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Payment Term (days)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "PaymentMethod":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Payment Method')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumTerm":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumLicenceQuantity":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Licence Quantity')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear1":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyNameCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CountryofincorparationCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Country Of Incorporation')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyRegistrationNumberCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyNameCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CountryofincorparationCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Country Of Incorporation')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyRegistrationNumberCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
					        
						case "ComapnyRegisteredAddressCutomer2":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break; 
						case "ComapnyRegisteredAddressCutomer3":
							try{
								xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;  
					        
					        
						case "Thepurposeofagreement":
							try{
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;
						case "accuratedescription":
							try{
								 xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;

						case "TransferorCompanyName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "TransferorCompanyRegNumber":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;    
						case "TransferorCompanyCorpID":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Corp ID')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
					        
						case "TransferorComapnyRegisteredAddress":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;     
					        
						case "TransfereeCompanyName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "TransfereeCompanyRegNumber":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;     
					        
						case "TransfereeComapnyRegisteredAddress":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;     
						case "AgreementName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Agreement Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "AgreementReference":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Agreement Reference')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "Agreementfortheprovision":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'What is the Agreement for the provision of?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;  
						case "wishesoftheTransferor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Indicate the wishes of the Transferor')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;  
						case "SelectthedatethisAgreement":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Select the date this Agreement')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "ServiceReference":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Service Reference')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "AnnualChargeforTieredSupportServices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Annual Charge for Tiered Support Services')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "ProfessionalServicesCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Professional Services Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumVolumeCommitment":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Volume Commitment')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "ServiceDesciption":
							try{
								 xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;
					        
					        
					        
					        
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								Thread.sleep(15000);
								wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='submit']")));
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}
public static boolean AddTemplatesNewUK(By element,String data)
{
	
	try
	{

		WebElement xpath;
		
		 WebDriverWait waitUntil = new WebDriverWait(driver, 60); 
		
		String spec = data.split("\\__")[0];
		String spec1 = data.split("\\__")[1];
		
		
	
		//waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[contains(text(),'Case Item')]"))); 
		
		//KeywordsCoreFunctions.click(By.xpath("//div/a[text()='Template Library']"));
		
		
		Thread.sleep(20000);

		KeywordsCoreFunctions.selectbyValue(By.xpath("//span[contains(text(),'Case Item')]/following::Select"),spec);
		Thread.sleep(5000);
		
		
		
			
		Workbook workbook = null;
		
			workbook = Workbook.getWorkbook(new File("D:\\SWIFT\\eTAP_V1.04\\Specifications.xls"));
		
		Sheet firstSheet = workbook.getSheet(0); 
		Sheet secSheet = workbook.getSheet(1); 
		int rows=firstSheet.getRows();
		int cols=firstSheet.getColumns();
		int rows1=secSheet.getRows();
		int cols1=secSheet.getColumns();
		WebDriverWait wait = new WebDriverWait(driver, 30);
		  
		 for(int i=1;i<rows;i++)
		   {
			 String specification = firstSheet.getCell(0, i).getContents().trim();
			 
			 if(specification.trim().equalsIgnoreCase(spec1.trim()))
			 {
				 System.out.println(specification);
				 
				 
				 //waitUntil.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//span[text()='Loading...']"))); 
				
				 boolean result = true;
				 for(int j=1;j<cols;j++)
				 {
					 
					 String charc = firstSheet.getCell(j, i).getContents(); //companyname
					 
					 String value = secSheet.getCell(j, i).getContents();  //vodafone
					 if(charc.equals("") == false)
					 {String char_xpath ="";
					 try{
						 JavascriptExecutor js = (JavascriptExecutor)driver;
					switch (charc) 
					{
					case "CustomerName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Customer Name:')]")));
						
WebElement custName = driver.findElement(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", custName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
					
					break;	
					case "RegNumber":
WebElement RegNum = driver.findElement(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", RegNum);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Name:')]/following::input[1]"), value);
					
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CountryofIncorporation":
WebElement COI = driver.findElement(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
					case "CompanyName":
						wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[contains(text(),'Company Name:')]")));
WebElement CompName = driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompName);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Name:')]/following::input[1]"), value);
					
					
					break;	
					case "CompanyRegNumber":
						
WebElement CompReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
					
					
					break;
					case "CompanyRegNumber1":
						
						WebElement CompReg1= driver.findElement(By.xpath("//span[contains(text(),'Company Name:')]/following::input[2]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CompReg1);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "ComRegNumber":
						
						WebElement ComReg = driver.findElement(By.xpath("//span[contains(text(),'Company Registration Number')]/following::input[1]"));
										        
										        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ComReg);
												//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Registration Number:')]/following::input[1]"), value);
											
											
											break;
					case "CompanyCountryofIncorporation":
WebElement COI1 = driver.findElement(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", COI1);
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Company Country of Incorporation:')]/following::input[1]"), value);
						
						
						break;
						
					case "Currency":
						
						WebElement DateField2 = driver.findElement(By.xpath("//span[contains(text(),'Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField2);

						break;
						
					case "MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Minimum Spend Commitment:')]/following::input[1]"), value);
WebElement DateField3 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField3);
						break;
						
					case "MinimumSubscriptionTerm":
WebElement DateField4 = driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscription Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField4);
						break;
						
					case "BaselineSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Baseline Subscriptions:')]/following::input[1]"), value);
WebElement DateField5 = driver.findElement(By.xpath("//span[contains(text(),'Baseline Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField5);
						break;
						
					case "ResignCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"), value);
						
WebElement DateField6 = driver.findElement(By.xpath("//span[contains(text(),'Resign Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField6);
						break;
						
					case "SubsidyValuePerSubscription":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField7 = driver.findElement(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField7);
						
						
						break;
					case "SubsidyValuePerSubscriptionShallbe":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Subsidy Value Per Subscription:')]/following::input[1]"), value);
WebElement DateField18 = driver.findElement(By.xpath("//span[contains(text(),'The subsidy value per Subscription shall be')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField18);
						
						
						break;
						
					case "TechnologyFund":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"), value);
						
WebElement DateField8 = driver.findElement(By.xpath("//span[contains(text(),'Technology Fund:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField8);
						
						
						break;
					case "InvoiceCredit":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"), value);
WebElement DateField9 = driver.findElement(By.xpath("//span[contains(text(),'Invoice Credit:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField9);
						
						break;
					case "VGEDirectCarrier":
						
						WebElement DateField = driver.findElement(By.xpath("//span[contains(text(),'VGE Direct Carrier:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField);
				        break;
					case "CoverageFund":
						JavascriptExecutor js1 = (JavascriptExecutor)driver;
						WebElement DateField1 = driver.findElement(By.xpath("//span[contains(text(),'Coverage Fund:')]/following::input[1]"));
				        
				        js1.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField1);
				        break;
					case "BillingFrequency":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyV":
WebElement BV = driver.findElement(By.xpath("//span[contains(text(),'Billing Frequency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", BV);
				        break;
					case "VGEInvoiceReportingPortalTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'VGE Invoice Reporting Portal Territory(ies):')]/following::button[1]"));
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VGEInvoiceTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "VodafoneSpendAnalyticsTerritory":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Vodafone Spend Analytics Territory(ies):')]/following::button[1]"));
						
						Thread.sleep(3000);
						//KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+VodafoneAnalyticsTerritory+"')]"));
						KeywordsCoreFunctions.click(By.xpath("//li/div/span[contains(text(),'"+value+"')]/preceding::input[1]"));
				        break;
					case "RegisterdAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField10 = driver.findElement(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField10);
				        break;
					case "CompanyRegisteredAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DateField11 = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DateField11);
				        break;
					case "CompanyRegisteredofficeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CFA = driver.findElement(By.xpath("//span[contains(text(),'Company Registered Office Address:')]/following::textarea[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CFA);
				        break;
					
					case "ContractReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CR= driver.findElement(By.xpath("//span[contains(text(),'Contract Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", CR);
				        break;
					case "NoticeEmail":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Email= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", Email);
				        break;
					case "NoticeAddress":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NA= driver.findElement(By.xpath("//span[contains(text(),'Notice Address:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", NA);
				        break;
					
					case "DueDatePaymentterms":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DPT= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Terms (Days):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DPT);
				        break;
					case "DueDatePaymenttype":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DP= driver.findElement(By.xpath("//span[contains(text(),'Due Date - Payment Type:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", DP);
				        break;
					case "EffectiveDate":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ED= driver.findElement(By.xpath("//span[contains(text(),'Effective Date:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '" +value+"')", ED);
				        break;
					case "Year1MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1);
				        break;
					case "Year2MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2);
				        break;
					case "Year3MinimumSpendCommitment":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum Spend Commitment')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3);
				        break;
				        
				        
				        
					
					case "ServiceDesciption1":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea"), value);
WebElement SDS1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
boolean result1= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isDisplayed();
boolean result2= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]")).isEnabled();
//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
System.out.println(SDS1);			                  
System.out.println(result1);    
System.out.println(result2);  
				                  
				        js.executeScript("arguments[0].setAttribute('value','"+value+"')", SDS1);
				        
				        KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), "Worked");
				        break;
				        
				        
				        
				        
					case "Year1MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year1Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 1 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year1Spend);
				        break;
					case "Year2MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year2Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 2 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year2Spend);
				        break;
					case "Year3MinimumSpend":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Year3Spend= driver.findElement(By.xpath("//span[contains(text(),'Year 3 Minimum Spend')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Year3Spend);
				        break;
					case "CorpID":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CID= driver.findElement(By.xpath("//span[contains(text(),'Corp ID:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CID);
				        break;
					case "OriginalAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement OAR= driver.findElement(By.xpath("//span[contains(text(),'Original Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", OAR);
				        break;
					case "ReplacingAgreementReference":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RAR= driver.findElement(By.xpath("//span[contains(text(),'Replacing Agreement Reference:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RAR);
				        break;
					case "EffectiveDateFullBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Full Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FD);
				        break;
					case "EffectiveDatePartBaseTransfer":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PD= driver.findElement(By.xpath("//span[contains(text(),'Select the effective date for this Part Base Transfer:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PD);
				        break;
					case "SignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOB= driver.findElement(By.xpath("//span[contains(text(),'Sign on Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOB);
				        break;
					case "PaymentSheduleforSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOB= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule For Sign On Bonus:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOB);
				        break;
					case "PaymentSheduleforUKSignOnBonus":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement Npath= driver.findElement(By.xpath("//span[contains(text(),'Payment Schedule for UK Sign-On Bonus')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", Npath);
				        break;
					case "ContractCurrencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Contract Currency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "BillingFrequencyd":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Billing Frequency:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "SignOnBonusvalue":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOBv= driver.findElement(By.xpath("//span[contains(text(),'Sign-On Bonus (value):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOBv);
				        break;
					case "PaymentSheduleforSignOnBonusUK":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement pSOBUK= driver.findElement(By.xpath("//span[contains(text(),'UK Sign-On Bonus Schedule:')]/following::textarea"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", pSOBUK);
				        break;			
						case "PartXSchedule3":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS3= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 3:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS3);
				        break;
					case "PartXSchedule4":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS4= driver.findElement(By.xpath("//span[contains(text(),'Part [X] of Schedule 4:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS4);
				        break;
					case "CarrierDataFee":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CDF= driver.findElement(By.xpath("//span[contains(text(),'Carrier Data Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CDF);
				        break;
					case "AdditionalAuthorizedUsers":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AAU= driver.findElement(By.xpath("//span[contains(text(),'Number of Additional Authorized Users:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AAU);
				        break;
				        
					case "RenewalTermMonths":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM= driver.findElement(By.xpath("//span[contains(text(),'Renewal Terms (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM);
				        break;
				       
					case "RenewalTermMonth":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RTM1= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term (months):')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RTM1);
				        break;  
				        
					case "CommenceBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date:')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionTypePerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement STPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", STPT);
				        break;
					case "RecurringCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RC= driver.findElement(By.xpath("//span[contains(text(),'Recurring Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RC);
				        break;
					case "InstallationCharges":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement IC= driver.findElement(By.xpath("//span[contains(text(),'Installation Charges:')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", IC);
				        break;
					case "MinMonthlySubscrip":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MMS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Monthly Subscription Fee')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MMS);
				        break;
					case "AppSentry":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App Sentry')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "AppDN":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'App DN')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraCoreHosting":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Core Hosting')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ExtraEmailSentryPair":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Extra Email Sentry Pair')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "ProfessionalServicePackage":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Professional Service Package')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break;
					case "FrequencyServiceReviews":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement FSR= driver.findElement(By.xpath("//span[contains(text(),'Frequency of Service Reviews')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", FSR);
				        break;
					case "NAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement NAM= driver.findElement(By.xpath("//span[contains(text(),'NAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NAM);
				        break;
					case "GAM":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement GAM= driver.findElement(By.xpath("//span[contains(text(),'GAM')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", GAM);
				        break;
					case "RampUpPeriod":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RUP= driver.findElement(By.xpath("//span[contains(text(),'Ramp Up Period')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RUP);
				        break;
					case "RenewalTerm":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RT= driver.findElement(By.xpath("//span[contains(text(),'Renewal Term')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RT);
				        break;
					case "Licences":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LIC= driver.findElement(By.xpath("//span[contains(text(),'Licences')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LIC);
				        break;
					case "ProfessionalServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement PS= driver.findElement(By.xpath("//span[contains(text(),'Professional Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", PS);
				        break;
					case "CommenceFromBillingDate":
						KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Commence From Billing Date')]/following::button[1]"));
						Thread.sleep(3000);
						KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
				        break; 
					case "SolutionPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SPT= driver.findElement(By.xpath("//span[contains(text(),'Solution Type Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPT);
				        break;
					case "ContractCurrency":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CC= driver.findElement(By.xpath("//span[contains(text(),'Contract Currency')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CC);
				        break;
					case "DedicatedInternetAccessServices":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DIAS= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - Dedicated Internet Access Services')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DIAS);
				        break;
					case "ServiceElementPerTerritory":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SET= driver.findElement(By.xpath("//span[contains(text(),'Service Element Per Territory')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SET);
				        break;
					case "MinimumCallVolumes":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MCV= driver.findElement(By.xpath("//span[contains(text(),'Minimum Call Volumes')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MCV);
				        break;
					case "MinimumSubscriptions":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MS= driver.findElement(By.xpath("//span[contains(text(),'Minimum Subscriptions')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MS);
				        break;
					case "PartSIPTrunkingService":
						//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SIPT= driver.findElement(By.xpath("//span[contains(text(),'Part [X] - SIP Trunking Service')]/following::input[1]"));
				        
				        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SIPT);
				        break;
						
						case "StoragePeriodMonths":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SPM= driver.findElement(By.xpath("//span[contains(text(),'Storage Period (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SPM);
					        break;
					        
						case "HostingOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement HO= driver.findElement(By.xpath("//span[contains(text(),'Hosting Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", HO);
					        break;
						case "SMSOptions":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement SO= driver.findElement(By.xpath("//span[contains(text(),'SMS Options')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SO);
					        break;
						case "NMRSetUpFee":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NSF= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[2]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NSF);
					        break;
						case "NMRSetUpFeeDr":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "NMRFeeRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
	WebElement NM= driver.findElement(By.xpath("//span[text()='SMS Options:']/following::input[5]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", NM);
					        break; 
						case "NMRFeeRegisteredDevicesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[text()='NMR Set-Up Fee Registered Devices:']/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "SMSRecordingServiceCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SRSC= driver.findElement(By.xpath("//span[contains(text(),'SMS Recording Service Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SRSC);
					        break;
						case "InitialNumberofRegisteredDevice":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement INR= driver.findElement(By.xpath("//span[contains(text(),'Initial Number of Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", INR);
					        break;
						case "MinimumRegisteredDevices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MRD= driver.findElement(By.xpath("//span[contains(text(),'Minimum Registered Devices')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MRD);
					        break;
						case "LocalVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement LVGC= driver.findElement(By.xpath("//span[contains(text(),'Local Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", LVGC);
					        break;
						case "AgreementDate":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AD= driver.findElement(By.xpath("//span[contains(text(),'Agreement Date')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AD);
					        break;
						case "CallRecordingServiceCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRSC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Service Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRSC);
					        break;
						case "CallRecordingHostingCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement CRHC= driver.findElement(By.xpath("//span[contains(text(),'Call Recording Hosting Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", CRHC);
					        break;
						case "ScheduleServiceTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SST= driver.findElement(By.xpath("//span[contains(text(),'Schedule [XX] - Service Terms')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SST);
					        break;
						case "BaseAgentMaximumAgreedConcurrentVolume":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Base Agent Maximum Agreed Concurrent Volume is')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break; 
						case "BaseAgentoptionsMinimumFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement B= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", B);
					        break;
						case "BaseAgentOnboardingFloor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement BB= driver.findElement(By.xpath("//span[contains(text(),'Base Agent and Agent Options Minimum Onboarding Floor')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", BB);
					        break;
						case "AnyOtherMinimumFloors":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AM= driver.findElement(By.xpath("//span[contains(text(),'Any Other Minimum Floors')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AM);
					        break;
						case "EnhancedFixedOnlyUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced Fixed Only User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedFMCUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "EnhancedUser":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						
						case "Thepurposeofthisagreement":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'The purpose of this agreement is to...')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "CustomerBillingAddress":
							try{
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement PT= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								WebElement PT1= driver.findElement(By.xpath("//span[contains(text(),'Customer Billing Address')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", PT1);
							}
					        break;
						case "DesignatedCountriesd":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Designated Countries')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "SetupOnetimeCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement SOT= driver.findElement(By.xpath("//span[contains(text(),'Set up One time Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", SOT);
					        break;
						case "ApplicationConnectivityMonthlyCharge":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement ACM= driver.findElement(By.xpath("//span[contains(text(),'Application & Connectivity Monthly Charge')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", ACM);
					        break;
						case "RevenueShare":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement RS= driver.findElement(By.xpath("//span[contains(text(),'Revenue Share (%)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", RS);
					        break;
						case "DesignatedCountriesV":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement DC= driver.findElement(By.xpath("//span[contains(text(),'Designated Countries')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", DC);
					        break;
						case "MilestoneInvoicePlan":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement MIP= driver.findElement(By.xpath("//span[contains(text(),'Milestone Invoice Plan')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", MIP);
					        break;
						case "AppendixtoSchedule3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement S3= driver.findElement(By.xpath("//span[contains(text(),'Appendix [XX] to Schedule 3')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", S3);
					        break;
						case "AssociatedVodafoneGroupCompany":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
WebElement AVGC= driver.findElement(By.xpath("//span[contains(text(),'Associated Vodafone Group Company')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", AVGC);
					        break;
						case "textbox":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Notice Email Address')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "dropdown":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Enhanced FMC User')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;
						case "PaymentTerms":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Payment Term (days)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "PaymentMethod":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Payment Method')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumTerm":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Term (months)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumLicenceQuantity":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Licence Quantity')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear1":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 1 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 2 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumSIMCommitmentYear3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Year 3 - Minimum SIM Commitment (£)')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyNameCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CountryofincorparationCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Country Of Incorporation')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyRegistrationNumberCustomer2":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyNameCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CountryofincorparationCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Country Of Incorporation')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "CompanyRegistrationNumberCustomer3":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
					        
						case "ComapnyRegisteredAddressCutomer2":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'2 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break; 
						case "ComapnyRegisteredAddressCutomer3":
							try{
								xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'3 Details')]/following::span[contains(text(),'Registered Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;  
					        
					        
						case "Thepurposeofagreement":
							try{
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Purpose Of Agreement')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;
						case "accuratedescription":
							try{
								 xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter an accurate desription of why information is being shared')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;

						case "TransferorCompanyName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "TransferorCompanyRegNumber":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;    
						case "TransferorCompanyCorpID":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Corp ID')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
					        
						case "TransferorComapnyRegisteredAddress":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferor Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;     
					        
						case "TransfereeCompanyName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Name')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "TransfereeCompanyRegNumber":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registration Number')][1]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;     
					        
						case "TransfereeComapnyRegisteredAddress":
							try{
								
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"), value));
							{
								System.out.println("if");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Transferee Details')]/following::span[contains(text(),'Company Registered Office Address')][1]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;     
						case "AgreementName":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Agreement Name')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "AgreementReference":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Agreement Reference')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "Agreementfortheprovision":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'What is the Agreement for the provision of?')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;  
						case "wishesoftheTransferor":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							KeywordsCoreFunctions.click(By.xpath("//span[contains(text(),'Indicate the wishes of the Transferor')]/following::button[1]"));
							Thread.sleep(3000);
							KeywordsCoreFunctions.click(By.xpath("//li[contains(text(),'"+value+"')]"));
					        break;  
						case "SelectthedatethisAgreement":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Select the date this Agreement')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;   
						case "ServiceReference":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Service Reference')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break; 
						case "AnnualChargeforTieredSupportServices":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Annual Charge for Tiered Support Services')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "ProfessionalServicesCharges":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Professional Services Charges')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "MinimumVolumeCommitment":
							//KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Registered Address')]/following::textarea"), value);
							xpath= driver.findElement(By.xpath("//span[contains(text(),'Minimum Volume Commitment')]/following::input[1]"));
					        
					        js.executeScript("arguments[0].setAttribute('value', '"+value+"')", xpath);
					        break;
						case "ServiceDesciption":
							try{
								 xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
								js.executeScript("arguments[0].scrollIntoView();", xpath);
							if(KeywordsCoreFunctions.type(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"), value));
							{
								System.out.println("if");
								WebElement SDS= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
	}
							
							
							}catch (Exception e)
							{
								System.out.println("Type Exception");
								xpath= driver.findElement(By.xpath("//span[contains(text(),'Enter brief description of service use')]/following::textarea[1]"));
								
						        js.executeScript("arguments[0].setAttribute('value','"+value+"')", xpath);
							}
					        break;
					        
					        
					        
					        
							default:
						result = false;
						break;
					}
					
					
					 }
					 
						catch (Exception e) {
							result = false;
						}
					 
					 }
					 else{
						 System.out.println("CDone with entering");
						 
							break;
						 
					 }
					 
				 }
					 if(result)
						{
						
								System.out.println("Capturing Result");
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								Thread.sleep(15000);
								wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='submit']")));
								KeywordsCoreFunctions.click(By.xpath("//input[@type='submit']"));
								return true;
							
								
							
						}
						else
						{
							System.out.println("Some problem in entering Characteristics");
							return false;
						} 
				 
				 
		   }
				 
			 }
						 
		
					 
			 }
			
		   
		
catch (Exception e)
	{
		
		System.out.println("Error during executing Keyword: SelectSpecifications\n");
		e.printStackTrace(System.out);
		return false;
	}
	
	
	return false;	
}
}








